//
// File generated by rootcint at Wed Oct 26 13:36:32 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME TEventDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TEventDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< unsigned int, unsigned int > pairlEunsignedsPintcOunsignedsPintgR;
      #else
      class pairlEunsignedsPintcOunsignedsPintgR  {
         public:
         //friend XX;
         unsigned int first; //
         unsigned int second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< float, float > pairlEfloatcOfloatgR;
      #else
      class pairlEfloatcOfloatgR  {
         public:
         //friend XX;
         float first; //
         float second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< unsigned short, float > pairlEunsignedsPshortcOfloatgR;
      #else
      class pairlEunsignedsPshortcOfloatgR  {
         public:
         //friend XX;
         unsigned short first; //
         float second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< int, float > pairlEintcOfloatgR;
      #else
      class pairlEintcOfloatgR  {
         public:
         //friend XX;
         int first; //
         float second; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TPlaneProperties_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TPlaneProperties(void *p = 0);
   static void *newArray_TPlaneProperties(Long_t size, void *p);
   static void delete_TPlaneProperties(void *p);
   static void deleteArray_TPlaneProperties(void *p);
   static void destruct_TPlaneProperties(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TPlaneProperties*)
   {
      ::TPlaneProperties *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TPlaneProperties >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TPlaneProperties", ::TPlaneProperties::Class_Version(), "include/TPlaneProperties.hh", 20,
                  typeid(::TPlaneProperties), DefineBehavior(ptr, ptr),
                  &::TPlaneProperties::Dictionary, isa_proxy, 4,
                  sizeof(::TPlaneProperties) );
      instance.SetNew(&new_TPlaneProperties);
      instance.SetNewArray(&newArray_TPlaneProperties);
      instance.SetDelete(&delete_TPlaneProperties);
      instance.SetDeleteArray(&deleteArray_TPlaneProperties);
      instance.SetDestructor(&destruct_TPlaneProperties);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TPlaneProperties*)
   {
      return GenerateInitInstanceLocal((::TPlaneProperties*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TPlaneProperties*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TCluster(void *p = 0);
   static void *newArray_TCluster(Long_t size, void *p);
   static void delete_TCluster(void *p);
   static void deleteArray_TCluster(void *p);
   static void destruct_TCluster(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCluster*)
   {
      ::TCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCluster", ::TCluster::Class_Version(), "include/TCluster.hh", 26,
                  typeid(::TCluster), DefineBehavior(ptr, ptr),
                  &::TCluster::Dictionary, isa_proxy, 4,
                  sizeof(::TCluster) );
      instance.SetNew(&new_TCluster);
      instance.SetNewArray(&newArray_TCluster);
      instance.SetDelete(&delete_TCluster);
      instance.SetDeleteArray(&deleteArray_TCluster);
      instance.SetDestructor(&destruct_TCluster);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCluster*)
   {
      return GenerateInitInstanceLocal((::TCluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TPlane_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TPlane(void *p = 0);
   static void *newArray_TPlane(Long_t size, void *p);
   static void delete_TPlane(void *p);
   static void deleteArray_TPlane(void *p);
   static void destruct_TPlane(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TPlane*)
   {
      ::TPlane *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TPlane >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TPlane", ::TPlane::Class_Version(), "include/TPlane.hh", 35,
                  typeid(::TPlane), DefineBehavior(ptr, ptr),
                  &::TPlane::Dictionary, isa_proxy, 4,
                  sizeof(::TPlane) );
      instance.SetNew(&new_TPlane);
      instance.SetNewArray(&newArray_TPlane);
      instance.SetDelete(&delete_TPlane);
      instance.SetDeleteArray(&deleteArray_TPlane);
      instance.SetDestructor(&destruct_TPlane);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TPlane*)
   {
      return GenerateInitInstanceLocal((::TPlane*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TPlane*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TDetectorAlignment_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TDetectorAlignment(void *p = 0);
   static void *newArray_TDetectorAlignment(Long_t size, void *p);
   static void delete_TDetectorAlignment(void *p);
   static void deleteArray_TDetectorAlignment(void *p);
   static void destruct_TDetectorAlignment(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TDetectorAlignment*)
   {
      ::TDetectorAlignment *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TDetectorAlignment >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TDetectorAlignment", ::TDetectorAlignment::Class_Version(), "include/TDetectorAlignment.hh", 43,
                  typeid(::TDetectorAlignment), DefineBehavior(ptr, ptr),
                  &::TDetectorAlignment::Dictionary, isa_proxy, 4,
                  sizeof(::TDetectorAlignment) );
      instance.SetNew(&new_TDetectorAlignment);
      instance.SetNewArray(&newArray_TDetectorAlignment);
      instance.SetDelete(&delete_TDetectorAlignment);
      instance.SetDeleteArray(&deleteArray_TDetectorAlignment);
      instance.SetDestructor(&destruct_TDetectorAlignment);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TDetectorAlignment*)
   {
      return GenerateInitInstanceLocal((::TDetectorAlignment*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TDetectorAlignment*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TEvent(void *p = 0);
   static void *newArray_TEvent(Long_t size, void *p);
   static void delete_TEvent(void *p);
   static void deleteArray_TEvent(void *p);
   static void destruct_TEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TEvent*)
   {
      ::TEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TEvent", ::TEvent::Class_Version(), "include/TEvent.hh", 31,
                  typeid(::TEvent), DefineBehavior(ptr, ptr),
                  &::TEvent::Dictionary, isa_proxy, 4,
                  sizeof(::TEvent) );
      instance.SetNew(&new_TEvent);
      instance.SetNewArray(&newArray_TEvent);
      instance.SetDelete(&delete_TEvent);
      instance.SetDeleteArray(&deleteArray_TEvent);
      instance.SetDestructor(&destruct_TEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TEvent*)
   {
      return GenerateInitInstanceLocal((::TEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ChannelScreen_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ChannelScreen(void *p = 0);
   static void *newArray_ChannelScreen(Long_t size, void *p);
   static void delete_ChannelScreen(void *p);
   static void deleteArray_ChannelScreen(void *p);
   static void destruct_ChannelScreen(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ChannelScreen*)
   {
      ::ChannelScreen *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ChannelScreen >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ChannelScreen", ::ChannelScreen::Class_Version(), "include/ChannelScreen.hh", 16,
                  typeid(::ChannelScreen), DefineBehavior(ptr, ptr),
                  &::ChannelScreen::Dictionary, isa_proxy, 4,
                  sizeof(::ChannelScreen) );
      instance.SetNew(&new_ChannelScreen);
      instance.SetNewArray(&newArray_ChannelScreen);
      instance.SetDelete(&delete_ChannelScreen);
      instance.SetDeleteArray(&deleteArray_ChannelScreen);
      instance.SetDestructor(&destruct_ChannelScreen);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ChannelScreen*)
   {
      return GenerateInitInstanceLocal((::ChannelScreen*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ChannelScreen*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TChannelMapping_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TChannelMapping(void *p = 0);
   static void *newArray_TChannelMapping(Long_t size, void *p);
   static void delete_TChannelMapping(void *p);
   static void deleteArray_TChannelMapping(void *p);
   static void destruct_TChannelMapping(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TChannelMapping*)
   {
      ::TChannelMapping *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TChannelMapping >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TChannelMapping", ::TChannelMapping::Class_Version(), "include/TChannelMapping.hh", 19,
                  typeid(::TChannelMapping), DefineBehavior(ptr, ptr),
                  &::TChannelMapping::Dictionary, isa_proxy, 4,
                  sizeof(::TChannelMapping) );
      instance.SetNew(&new_TChannelMapping);
      instance.SetNewArray(&newArray_TChannelMapping);
      instance.SetDelete(&delete_TChannelMapping);
      instance.SetDeleteArray(&deleteArray_TChannelMapping);
      instance.SetDestructor(&destruct_TChannelMapping);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TChannelMapping*)
   {
      return GenerateInitInstanceLocal((::TChannelMapping*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TChannelMapping*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void pairlEunsignedsPintcOunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pairlEunsignedsPintcOunsignedsPintgR_Dictionary();
   static void *new_pairlEunsignedsPintcOunsignedsPintgR(void *p = 0);
   static void *newArray_pairlEunsignedsPintcOunsignedsPintgR(Long_t size, void *p);
   static void delete_pairlEunsignedsPintcOunsignedsPintgR(void *p);
   static void deleteArray_pairlEunsignedsPintcOunsignedsPintgR(void *p);
   static void destruct_pairlEunsignedsPintcOunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const pair<unsigned int,unsigned int>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(pair<unsigned int,unsigned int>) == sizeof(::ROOT::Shadow::pairlEunsignedsPintcOunsignedsPintgR));
      pair<unsigned int,unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<unsigned int,unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("pair<unsigned int,unsigned int>", "/usr/local/lib/root/cint/cint/lib/prec_stl/utility", 17,
                  typeid(pair<unsigned int,unsigned int>), DefineBehavior(ptr, ptr),
                  &pairlEunsignedsPintcOunsignedsPintgR_ShowMembers, &pairlEunsignedsPintcOunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(pair<unsigned int,unsigned int>) );
      instance.SetNew(&new_pairlEunsignedsPintcOunsignedsPintgR);
      instance.SetNewArray(&newArray_pairlEunsignedsPintcOunsignedsPintgR);
      instance.SetDelete(&delete_pairlEunsignedsPintcOunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_pairlEunsignedsPintcOunsignedsPintgR);
      instance.SetDestructor(&destruct_pairlEunsignedsPintcOunsignedsPintgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const pair<unsigned int,unsigned int>*)
   {
      return GenerateInitInstanceLocal((pair<unsigned int,unsigned int>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const pair<unsigned int,unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEunsignedsPintcOunsignedsPintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const pair<unsigned int,unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void TDiamondPattern_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TDiamondPattern(void *p = 0);
   static void *newArray_TDiamondPattern(Long_t size, void *p);
   static void delete_TDiamondPattern(void *p);
   static void deleteArray_TDiamondPattern(void *p);
   static void destruct_TDiamondPattern(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TDiamondPattern*)
   {
      ::TDiamondPattern *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TDiamondPattern >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TDiamondPattern", ::TDiamondPattern::Class_Version(), "include/TDiamondPattern.hh", 30,
                  typeid(::TDiamondPattern), DefineBehavior(ptr, ptr),
                  &::TDiamondPattern::Dictionary, isa_proxy, 4,
                  sizeof(::TDiamondPattern) );
      instance.SetNew(&new_TDiamondPattern);
      instance.SetNewArray(&newArray_TDiamondPattern);
      instance.SetDelete(&delete_TDiamondPattern);
      instance.SetDeleteArray(&deleteArray_TDiamondPattern);
      instance.SetDestructor(&destruct_TDiamondPattern);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TDiamondPattern*)
   {
      return GenerateInitInstanceLocal((::TDiamondPattern*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TDiamondPattern*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TFiducialCut_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TFiducialCut(void *p = 0);
   static void *newArray_TFiducialCut(Long_t size, void *p);
   static void delete_TFiducialCut(void *p);
   static void deleteArray_TFiducialCut(void *p);
   static void destruct_TFiducialCut(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TFiducialCut*)
   {
      ::TFiducialCut *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TFiducialCut >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TFiducialCut", ::TFiducialCut::Class_Version(), "include/TFiducialCut.hh", 15,
                  typeid(::TFiducialCut), DefineBehavior(ptr, ptr),
                  &::TFiducialCut::Dictionary, isa_proxy, 4,
                  sizeof(::TFiducialCut) );
      instance.SetNew(&new_TFiducialCut);
      instance.SetNewArray(&newArray_TFiducialCut);
      instance.SetDelete(&delete_TFiducialCut);
      instance.SetDeleteArray(&deleteArray_TFiducialCut);
      instance.SetDestructor(&destruct_TFiducialCut);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TFiducialCut*)
   {
      return GenerateInitInstanceLocal((::TFiducialCut*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TFiducialCut*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TFidCutRegions_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TFidCutRegions(void *p = 0);
   static void *newArray_TFidCutRegions(Long_t size, void *p);
   static void delete_TFidCutRegions(void *p);
   static void deleteArray_TFidCutRegions(void *p);
   static void destruct_TFidCutRegions(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TFidCutRegions*)
   {
      ::TFidCutRegions *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TFidCutRegions >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TFidCutRegions", ::TFidCutRegions::Class_Version(), "include/TFidCutRegions.hh", 29,
                  typeid(::TFidCutRegions), DefineBehavior(ptr, ptr),
                  &::TFidCutRegions::Dictionary, isa_proxy, 4,
                  sizeof(::TFidCutRegions) );
      instance.SetNew(&new_TFidCutRegions);
      instance.SetNewArray(&newArray_TFidCutRegions);
      instance.SetDelete(&delete_TFidCutRegions);
      instance.SetDeleteArray(&deleteArray_TFidCutRegions);
      instance.SetDestructor(&destruct_TFidCutRegions);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TFidCutRegions*)
   {
      return GenerateInitInstanceLocal((::TFidCutRegions*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TFidCutRegions*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void pairlEfloatcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pairlEfloatcOfloatgR_Dictionary();
   static void *new_pairlEfloatcOfloatgR(void *p = 0);
   static void *newArray_pairlEfloatcOfloatgR(Long_t size, void *p);
   static void delete_pairlEfloatcOfloatgR(void *p);
   static void deleteArray_pairlEfloatcOfloatgR(void *p);
   static void destruct_pairlEfloatcOfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const pair<float,float>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(pair<float,float>) == sizeof(::ROOT::Shadow::pairlEfloatcOfloatgR));
      pair<float,float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<float,float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("pair<float,float>", "/usr/local/lib/root/cint/cint/lib/prec_stl/utility", 17,
                  typeid(pair<float,float>), DefineBehavior(ptr, ptr),
                  &pairlEfloatcOfloatgR_ShowMembers, &pairlEfloatcOfloatgR_Dictionary, isa_proxy, 4,
                  sizeof(pair<float,float>) );
      instance.SetNew(&new_pairlEfloatcOfloatgR);
      instance.SetNewArray(&newArray_pairlEfloatcOfloatgR);
      instance.SetDelete(&delete_pairlEfloatcOfloatgR);
      instance.SetDeleteArray(&deleteArray_pairlEfloatcOfloatgR);
      instance.SetDestructor(&destruct_pairlEfloatcOfloatgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const pair<float,float>*)
   {
      return GenerateInitInstanceLocal((pair<float,float>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const pair<float,float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEfloatcOfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const pair<float,float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void TSettings_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSettings(void *p = 0);
   static void *newArray_TSettings(Long_t size, void *p);
   static void delete_TSettings(void *p);
   static void deleteArray_TSettings(void *p);
   static void destruct_TSettings(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSettings*)
   {
      ::TSettings *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSettings >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSettings", ::TSettings::Class_Version(), "include/TSettings.class.hh", 38,
                  typeid(::TSettings), DefineBehavior(ptr, ptr),
                  &::TSettings::Dictionary, isa_proxy, 4,
                  sizeof(::TSettings) );
      instance.SetNew(&new_TSettings);
      instance.SetNewArray(&newArray_TSettings);
      instance.SetDelete(&delete_TSettings);
      instance.SetDeleteArray(&deleteArray_TSettings);
      instance.SetDestructor(&destruct_TSettings);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSettings*)
   {
      return GenerateInitInstanceLocal((::TSettings*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSettings*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TResults_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TResults(void *p = 0);
   static void *newArray_TResults(Long_t size, void *p);
   static void delete_TResults(void *p);
   static void deleteArray_TResults(void *p);
   static void destruct_TResults(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TResults*)
   {
      ::TResults *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TResults >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TResults", ::TResults::Class_Version(), "include/TResults.hh", 32,
                  typeid(::TResults), DefineBehavior(ptr, ptr),
                  &::TResults::Dictionary, isa_proxy, 4,
                  sizeof(::TResults) );
      instance.SetNew(&new_TResults);
      instance.SetNewArray(&newArray_TResults);
      instance.SetDelete(&delete_TResults);
      instance.SetDeleteArray(&deleteArray_TResults);
      instance.SetDestructor(&destruct_TResults);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TResults*)
   {
      return GenerateInitInstanceLocal((::TResults*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TResults*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void pairlEunsignedsPshortcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pairlEunsignedsPshortcOfloatgR_Dictionary();
   static void *new_pairlEunsignedsPshortcOfloatgR(void *p = 0);
   static void *newArray_pairlEunsignedsPshortcOfloatgR(Long_t size, void *p);
   static void delete_pairlEunsignedsPshortcOfloatgR(void *p);
   static void deleteArray_pairlEunsignedsPshortcOfloatgR(void *p);
   static void destruct_pairlEunsignedsPshortcOfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const pair<unsigned short,float>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(pair<unsigned short,float>) == sizeof(::ROOT::Shadow::pairlEunsignedsPshortcOfloatgR));
      pair<unsigned short,float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<unsigned short,float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("pair<unsigned short,float>", "/usr/local/lib/root/cint/cint/lib/prec_stl/utility", 17,
                  typeid(pair<unsigned short,float>), DefineBehavior(ptr, ptr),
                  &pairlEunsignedsPshortcOfloatgR_ShowMembers, &pairlEunsignedsPshortcOfloatgR_Dictionary, isa_proxy, 4,
                  sizeof(pair<unsigned short,float>) );
      instance.SetNew(&new_pairlEunsignedsPshortcOfloatgR);
      instance.SetNewArray(&newArray_pairlEunsignedsPshortcOfloatgR);
      instance.SetDelete(&delete_pairlEunsignedsPshortcOfloatgR);
      instance.SetDeleteArray(&deleteArray_pairlEunsignedsPshortcOfloatgR);
      instance.SetDestructor(&destruct_pairlEunsignedsPshortcOfloatgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const pair<unsigned short,float>*)
   {
      return GenerateInitInstanceLocal((pair<unsigned short,float>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const pair<unsigned short,float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEunsignedsPshortcOfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const pair<unsigned short,float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void pairlEintcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pairlEintcOfloatgR_Dictionary();
   static void *new_pairlEintcOfloatgR(void *p = 0);
   static void *newArray_pairlEintcOfloatgR(Long_t size, void *p);
   static void delete_pairlEintcOfloatgR(void *p);
   static void deleteArray_pairlEintcOfloatgR(void *p);
   static void destruct_pairlEintcOfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const pair<int,float>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(pair<int,float>) == sizeof(::ROOT::Shadow::pairlEintcOfloatgR));
      pair<int,float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<int,float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("pair<int,float>", "/usr/local/lib/root/cint/cint/lib/prec_stl/utility", 17,
                  typeid(pair<int,float>), DefineBehavior(ptr, ptr),
                  &pairlEintcOfloatgR_ShowMembers, &pairlEintcOfloatgR_Dictionary, isa_proxy, 4,
                  sizeof(pair<int,float>) );
      instance.SetNew(&new_pairlEintcOfloatgR);
      instance.SetNewArray(&newArray_pairlEintcOfloatgR);
      instance.SetDelete(&delete_pairlEintcOfloatgR);
      instance.SetDeleteArray(&deleteArray_pairlEintcOfloatgR);
      instance.SetDestructor(&destruct_pairlEintcOfloatgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const pair<int,float>*)
   {
      return GenerateInitInstanceLocal((pair<int,float>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const pair<int,float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEintcOfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const pair<int,float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

//______________________________________________________________________________
TClass *TPlaneProperties::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPlaneProperties::Class_Name()
{
   return "TPlaneProperties";
}

//______________________________________________________________________________
const char *TPlaneProperties::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPlaneProperties*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPlaneProperties::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPlaneProperties*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPlaneProperties::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPlaneProperties*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPlaneProperties::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPlaneProperties*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCluster::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCluster::Class_Name()
{
   return "TCluster";
}

//______________________________________________________________________________
const char *TCluster::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCluster::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCluster::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCluster::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCluster*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPlane::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPlane::Class_Name()
{
   return "TPlane";
}

//______________________________________________________________________________
const char *TPlane::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPlane*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPlane::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPlane*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPlane::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPlane*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPlane::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPlane*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDetectorAlignment::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDetectorAlignment::Class_Name()
{
   return "TDetectorAlignment";
}

//______________________________________________________________________________
const char *TDetectorAlignment::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDetectorAlignment*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDetectorAlignment::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDetectorAlignment*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDetectorAlignment::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDetectorAlignment*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDetectorAlignment::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDetectorAlignment*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TEvent::Class_Name()
{
   return "TEvent";
}

//______________________________________________________________________________
const char *TEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ChannelScreen::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ChannelScreen::Class_Name()
{
   return "ChannelScreen";
}

//______________________________________________________________________________
const char *ChannelScreen::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ChannelScreen*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ChannelScreen::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ChannelScreen*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ChannelScreen::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ChannelScreen*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ChannelScreen::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ChannelScreen*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TChannelMapping::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TChannelMapping::Class_Name()
{
   return "TChannelMapping";
}

//______________________________________________________________________________
const char *TChannelMapping::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TChannelMapping*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TChannelMapping::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TChannelMapping*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TChannelMapping::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TChannelMapping*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TChannelMapping::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TChannelMapping*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDiamondPattern::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDiamondPattern::Class_Name()
{
   return "TDiamondPattern";
}

//______________________________________________________________________________
const char *TDiamondPattern::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDiamondPattern*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDiamondPattern::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDiamondPattern*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDiamondPattern::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDiamondPattern*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDiamondPattern::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDiamondPattern*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TFiducialCut::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFiducialCut::Class_Name()
{
   return "TFiducialCut";
}

//______________________________________________________________________________
const char *TFiducialCut::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFiducialCut*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFiducialCut::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFiducialCut*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFiducialCut::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFiducialCut*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFiducialCut::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFiducialCut*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TFidCutRegions::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFidCutRegions::Class_Name()
{
   return "TFidCutRegions";
}

//______________________________________________________________________________
const char *TFidCutRegions::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFidCutRegions*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFidCutRegions::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFidCutRegions*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFidCutRegions::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFidCutRegions*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFidCutRegions::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFidCutRegions*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSettings::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSettings::Class_Name()
{
   return "TSettings";
}

//______________________________________________________________________________
const char *TSettings::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSettings*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSettings::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSettings*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSettings::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSettings*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSettings::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSettings*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TResults::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TResults::Class_Name()
{
   return "TResults";
}

//______________________________________________________________________________
const char *TResults::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TResults*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TResults::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TResults*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TResults::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TResults*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TResults::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TResults*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
namespace ROOT {
   void pairlEunsignedsPshortcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pair<unsigned short,float>.
      typedef ::ROOT::Shadow::pairlEunsignedsPshortcOfloatgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const pair<unsigned short,float>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "first", &sobj->first);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "second", &sobj->second);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_pairlEunsignedsPshortcOfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<unsigned short,float> : new pair<unsigned short,float>;
   }
   static void *newArray_pairlEunsignedsPshortcOfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<unsigned short,float>[nElements] : new pair<unsigned short,float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEunsignedsPshortcOfloatgR(void *p) {
      delete ((pair<unsigned short,float>*)p);
   }
   static void deleteArray_pairlEunsignedsPshortcOfloatgR(void *p) {
      delete [] ((pair<unsigned short,float>*)p);
   }
   static void destruct_pairlEunsignedsPshortcOfloatgR(void *p) {
      typedef pair<unsigned short,float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<unsigned short,float>

//______________________________________________________________________________
namespace ROOT {
   void pairlEintcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pair<int,float>.
      typedef ::ROOT::Shadow::pairlEintcOfloatgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const pair<int,float>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "first", &sobj->first);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "second", &sobj->second);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_pairlEintcOfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<int,float> : new pair<int,float>;
   }
   static void *newArray_pairlEintcOfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<int,float>[nElements] : new pair<int,float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEintcOfloatgR(void *p) {
      delete ((pair<int,float>*)p);
   }
   static void deleteArray_pairlEintcOfloatgR(void *p) {
      delete [] ((pair<int,float>*)p);
   }
   static void destruct_pairlEintcOfloatgR(void *p) {
      typedef pair<int,float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<int,float>

//______________________________________________________________________________
namespace ROOT {
   void pairlEunsignedsPintcOunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pair<unsigned int,unsigned int>.
      typedef ::ROOT::Shadow::pairlEunsignedsPintcOunsignedsPintgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const pair<unsigned int,unsigned int>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "first", &sobj->first);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "second", &sobj->second);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_pairlEunsignedsPintcOunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<unsigned int,unsigned int> : new pair<unsigned int,unsigned int>;
   }
   static void *newArray_pairlEunsignedsPintcOunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<unsigned int,unsigned int>[nElements] : new pair<unsigned int,unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEunsignedsPintcOunsignedsPintgR(void *p) {
      delete ((pair<unsigned int,unsigned int>*)p);
   }
   static void deleteArray_pairlEunsignedsPintcOunsignedsPintgR(void *p) {
      delete [] ((pair<unsigned int,unsigned int>*)p);
   }
   static void destruct_pairlEunsignedsPintcOunsignedsPintgR(void *p) {
      typedef pair<unsigned int,unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<unsigned int,unsigned int>

//______________________________________________________________________________
namespace ROOT {
   void pairlEfloatcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pair<float,float>.
      typedef ::ROOT::Shadow::pairlEfloatcOfloatgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const pair<float,float>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "first", &sobj->first);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "second", &sobj->second);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_pairlEfloatcOfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<float,float> : new pair<float,float>;
   }
   static void *newArray_pairlEfloatcOfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<float,float>[nElements] : new pair<float,float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEfloatcOfloatgR(void *p) {
      delete ((pair<float,float>*)p);
   }
   static void deleteArray_pairlEfloatcOfloatgR(void *p) {
      delete [] ((pair<float,float>*)p);
   }
   static void destruct_pairlEfloatcOfloatgR(void *p) {
      typedef pair<float,float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<float,float>

//______________________________________________________________________________
void TResults::Streamer(TBuffer &R__b)
{
   // Stream an object of class TResults.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TResults::Class(),this);
   } else {
      R__b.WriteClassBuffer(TResults::Class(),this);
   }
}

//______________________________________________________________________________
void TResults::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TResults.
      TClass *R__cl = ::TResults::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rootFileName", &rootFileName);
      R__insp.InspectMember(rootFileName, "rootFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runDescription", &runDescription);
      R__insp.InspectMember(runDescription, "runDescription.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alignment", &alignment);
      R__insp.InspectMember(alignment, "alignment.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lastUpdate", &lastUpdate);
      R__insp.InspectMember(lastUpdate, "lastUpdate.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "path", (void*)&path);
      R__insp.InspectMember("string", (void*)&path, "path.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runnumber", &runnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "seedSigma", (void*)&seedSigma);
      R__insp.InspectMember("vector<Float_t>", (void*)&seedSigma, "seedSigma.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hitSigma", (void*)&hitSigma);
      R__insp.InspectMember("vector<Float_t>", (void*)&hitSigma, "hitSigma.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "noise", (void*)&noise);
      R__insp.InspectMember("vector<Float_t>", (void*)&noise, "noise.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "diaCMCNoise", &diaCMCNoise);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CMN", &CMN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clusterSize", (void*)&clusterSize);
      R__insp.InspectMember("vector<Float_t>", (void*)&clusterSize, "clusterSize.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clusterSeedSize", (void*)&clusterSeedSize);
      R__insp.InspectMember("vector<Float_t>", (void*)&clusterSeedSize, "clusterSeedSize.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nClusters", (void*)&nClusters);
      R__insp.InspectMember("vector<Float_t>", (void*)&nClusters, "nClusters.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clusterPHmean", (void*)&clusterPHmean);
      R__insp.InspectMember("vector<Float_t>", (void*)&clusterPHmean, "clusterPHmean.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clusterPHwidth", (void*)&clusterPHwidth);
      R__insp.InspectMember("vector<Float_t>", (void*)&clusterPHwidth, "clusterPHwidth.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "signalFeedOverCorrection", (void*)&signalFeedOverCorrection);
      R__insp.InspectMember("vector<Float_t>", (void*)&signalFeedOverCorrection, "signalFeedOverCorrection.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nAllEvents", &nAllEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nNoSiliconHit", &nNoSiliconHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nOneAndOnlyOneSiliconNotFiducialCut", &nOneAndOnlyOneSiliconNotFiducialCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nValidSiliconTrack", &nValidSiliconTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nNoDiamondHit", &nNoDiamondHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nMoreThanOneDiamondHit", &nMoreThanOneDiamondHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nExactlyOneDiamondHit", &nExactlyOneDiamondHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nUseForAlignment", &nUseForAlignment);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nUseForAnalysis", &nUseForAnalysis);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mean_clustered_normal", &mean_clustered_normal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mp_clustered_normal", &mp_clustered_normal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_clustered_normal", &width_clustered_normal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gSigma_clustered_normal", &gSigma_clustered_normal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mean_clustered_trans", &mean_clustered_trans);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mp_clustered_trans", &mp_clustered_trans);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_clustered_trans", &width_clustered_trans);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gSigma_clustered_trans", &gSigma_clustered_trans);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mean2outOf10_normal", &mean2outOf10_normal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mp2outOf10_normal", &mp2outOf10_normal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width2outOf10_normal", &width2outOf10_normal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gSigma2outOf10_normal", &gSigma2outOf10_normal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "meanNoutOfN_normal", (void*)&meanNoutOfN_normal);
      R__insp.InspectMember("vector<Float_t>", (void*)&meanNoutOfN_normal, "meanNoutOfN_normal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mean2outOf10_trans", &mean2outOf10_trans);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mp2outOf10_trans", &mp2outOf10_trans);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width2outOf10_trans", &width2outOf10_trans);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gSigma2outOf10_trans", &gSigma2outOf10_trans);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "meanNoutOfN_trans", (void*)&meanNoutOfN_trans);
      R__insp.InspectMember("vector<Float_t>", (void*)&meanNoutOfN_trans, "meanNoutOfN_trans.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "textFileName", &textFileName);
      R__insp.InspectMember(textFileName, "textFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "resultsFileName", &resultsFileName);
      R__insp.InspectMember(resultsFileName, "resultsFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doubleGaus1_normal", &doubleGaus1_normal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doubleGaus2_normal", &doubleGaus2_normal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doubleGaus1_trans", &doubleGaus1_trans);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doubleGaus2_trans", &doubleGaus2_trans);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "singleGausFixed_normal", &singleGausFixed_normal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "singleGausFixed_trans", &singleGausFixed_trans);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "singleGausShort_normal", &singleGausShort_normal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "singleGausShort_trans", &singleGausShort_trans);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "singleGausFWTM_normal", &singleGausFWTM_normal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "singleGausFWTM_trans", &singleGausFWTM_trans);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "singleGaus_normal", &singleGaus_normal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "singleGaus_trans", &singleGaus_trans);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "repeaterCard", &repeaterCard);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "voltage", &voltage);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "diamondName", &diamondName);
      R__insp.InspectMember(diamondName, "diamondName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "diamondChannels", (void*)&diamondChannels);
      R__insp.InspectMember("pair<Int_t,Int_t>", (void*)&diamondChannels, "diamondChannels.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maskedChannels", (void*)&maskedChannels);
      R__insp.InspectMember("set<Int_t>", (void*)&maskedChannels, "maskedChannels.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "noisyChannels", (void*)&noisyChannels);
      R__insp.InspectMember("set<Int_t>", (void*)&noisyChannels, "noisyChannels.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "notConnectedChannels", (void*)&notConnectedChannels);
      R__insp.InspectMember("set<Int_t>", (void*)&notConnectedChannels, "notConnectedChannels.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IntegerMap", (void*)&IntegerMap);
      R__insp.InspectMember("map<TString,Int_t>", (void*)&IntegerMap, "IntegerMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FloatMap", (void*)&FloatMap);
      R__insp.InspectMember("map<TString,Float_t>", (void*)&FloatMap, "FloatMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StringMap", (void*)&StringMap);
      R__insp.InspectMember("map<TString,TString>", (void*)&StringMap, "StringMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "keyList", (void*)&keyList);
      R__insp.InspectMember("outer_map", (void*)&keyList, "keyList.", false);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TResults(void *p) {
      return  p ? new(p) ::TResults : new ::TResults;
   }
   static void *newArray_TResults(Long_t nElements, void *p) {
      return p ? new(p) ::TResults[nElements] : new ::TResults[nElements];
   }
   // Wrapper around operator delete
   static void delete_TResults(void *p) {
      delete ((::TResults*)p);
   }
   static void deleteArray_TResults(void *p) {
      delete [] ((::TResults*)p);
   }
   static void destruct_TResults(void *p) {
      typedef ::TResults current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TResults

//______________________________________________________________________________
void TCluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCluster.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TCluster::Class(),this);
   } else {
      R__b.WriteClassBuffer(TCluster::Class(),this);
   }
}

//______________________________________________________________________________
void TCluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCluster.
      TClass *R__cl = ::TCluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clusterChannel", (void*)&clusterChannel);
      R__insp.InspectMember("deque<UInt_t>", (void*)&clusterChannel, "clusterChannel.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clusterPedMean", (void*)&clusterPedMean);
      R__insp.InspectMember("deque<Float_t>", (void*)&clusterPedMean, "clusterPedMean.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clusterPedMeanCMN", (void*)&clusterPedMeanCMN);
      R__insp.InspectMember("deque<Float_t>", (void*)&clusterPedMeanCMN, "clusterPedMeanCMN.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clusterPedSigma", (void*)&clusterPedSigma);
      R__insp.InspectMember("deque<Float_t>", (void*)&clusterPedSigma, "clusterPedSigma.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clusterPedSigmaCMN", (void*)&clusterPedSigmaCMN);
      R__insp.InspectMember("deque<Float_t>", (void*)&clusterPedSigmaCMN, "clusterPedSigmaCMN.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clusterADC", (void*)&clusterADC);
      R__insp.InspectMember("deque<Int_t>", (void*)&clusterADC, "clusterADC.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clusterSignal", (void*)&clusterSignal);
      R__insp.InspectMember("deque<Float_t>", (void*)&clusterSignal, "clusterSignal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clusterSignalCMN", (void*)&clusterSignalCMN);
      R__insp.InspectMember("deque<Float_t>", (void*)&clusterSignalCMN, "clusterSignalCMN.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clusterSignalInSigma", (void*)&clusterSignalInSigma);
      R__insp.InspectMember("deque<Float_t>", (void*)&clusterSignalInSigma, "clusterSignalInSigma.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clusterSignalInSigmaCMN", (void*)&clusterSignalInSigmaCMN);
      R__insp.InspectMember("deque<Float_t>", (void*)&clusterSignalInSigmaCMN, "clusterSignalInSigmaCMN.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clusterChannelScreened", (void*)&clusterChannelScreened);
      R__insp.InspectMember("deque<bool>", (void*)&clusterChannelScreened, "clusterChannelScreened.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numberOfSeeds", &numberOfSeeds);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numberOfHits", &numberOfHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numberOfNoHits", &numberOfNoHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "seedSigma", &seedSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hitSigma", &hitSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isSaturated", &isSaturated);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isGoldenGate", &isGoldenGate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isLumpy", &isLumpy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isChecked", &isChecked);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasBadChannel", &hasBadChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mode", &mode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "verbosity", &verbosity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "charge", &charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maximumSignal", &maximumSignal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxChannel", &maxChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "revisionNumber", &revisionNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nChannels", &nChannels);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "det", &det);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventNumber", &eventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cmNoise", &cmNoise);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isTransparentCluster", &isTransparentCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "transparentClusterSize", &transparentClusterSize);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TCluster(void *p) {
      return  p ? new(p) ::TCluster : new ::TCluster;
   }
   static void *newArray_TCluster(Long_t nElements, void *p) {
      return p ? new(p) ::TCluster[nElements] : new ::TCluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_TCluster(void *p) {
      delete ((::TCluster*)p);
   }
   static void deleteArray_TCluster(void *p) {
      delete [] ((::TCluster*)p);
   }
   static void destruct_TCluster(void *p) {
      typedef ::TCluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCluster

//______________________________________________________________________________
void TPlane::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPlane.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TPlane::Class(),this);
   } else {
      R__b.WriteClassBuffer(TPlane::Class(),this);
   }
}

//______________________________________________________________________________
void TPlane::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TPlane.
      TClass *R__cl = ::TPlane::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", &type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "planeNo", &planeNo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "verbosity", &verbosity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xClusters", (void*)&xClusters);
      R__insp.InspectMember("vector<TCluster>", (void*)&xClusters, "xClusters.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yClusters", (void*)&yClusters);
      R__insp.InspectMember("vector<TCluster>", (void*)&yClusters, "yClusters.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TPlane(void *p) {
      return  p ? new(p) ::TPlane : new ::TPlane;
   }
   static void *newArray_TPlane(Long_t nElements, void *p) {
      return p ? new(p) ::TPlane[nElements] : new ::TPlane[nElements];
   }
   // Wrapper around operator delete
   static void delete_TPlane(void *p) {
      delete ((::TPlane*)p);
   }
   static void deleteArray_TPlane(void *p) {
      delete [] ((::TPlane*)p);
   }
   static void destruct_TPlane(void *p) {
      typedef ::TPlane current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPlane

//______________________________________________________________________________
void TEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(TEvent::Class(),this);
   }
}

//______________________________________________________________________________
void TEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TEvent.
      TClass *R__cl = ::TEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "planes", (void*)&planes);
      R__insp.InspectMember("vector<TPlane>", (void*)&planes, "planes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventNumber", &eventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "verbosity", &verbosity);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TEvent(void *p) {
      return  p ? new(p) ::TEvent : new ::TEvent;
   }
   static void *newArray_TEvent(Long_t nElements, void *p) {
      return p ? new(p) ::TEvent[nElements] : new ::TEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_TEvent(void *p) {
      delete ((::TEvent*)p);
   }
   static void deleteArray_TEvent(void *p) {
      delete [] ((::TEvent*)p);
   }
   static void destruct_TEvent(void *p) {
      typedef ::TEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TEvent

//______________________________________________________________________________
void TPlaneProperties::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPlaneProperties.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TPlaneProperties::Class(),this);
   } else {
      R__b.WriteClassBuffer(TPlaneProperties::Class(),this);
   }
}

//______________________________________________________________________________
void TPlaneProperties::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TPlaneProperties.
      TClass *R__cl = ::TPlaneProperties::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TPlaneProperties(void *p) {
      return  p ? new(p) ::TPlaneProperties : new ::TPlaneProperties;
   }
   static void *newArray_TPlaneProperties(Long_t nElements, void *p) {
      return p ? new(p) ::TPlaneProperties[nElements] : new ::TPlaneProperties[nElements];
   }
   // Wrapper around operator delete
   static void delete_TPlaneProperties(void *p) {
      delete ((::TPlaneProperties*)p);
   }
   static void deleteArray_TPlaneProperties(void *p) {
      delete [] ((::TPlaneProperties*)p);
   }
   static void destruct_TPlaneProperties(void *p) {
      typedef ::TPlaneProperties current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPlaneProperties

//______________________________________________________________________________
void TDiamondPattern::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDiamondPattern.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TDiamondPattern::Class(),this);
   } else {
      R__b.WriteClassBuffer(TDiamondPattern::Class(),this);
   }
}

//______________________________________________________________________________
void TDiamondPattern::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TDiamondPattern.
      TClass *R__cl = ::TDiamondPattern::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channelToMetricConversion", (void*)&channelToMetricConversion);
      R__insp.InspectMember("vector<Float_t>", (void*)&channelToMetricConversion, "channelToMetricConversion.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beginOfInterval", (void*)&beginOfInterval);
      R__insp.InspectMember("vector<Float_t>", (void*)&beginOfInterval, "beginOfInterval.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "endOfInterval", (void*)&endOfInterval);
      R__insp.InspectMember("vector<Float_t>", (void*)&endOfInterval, "endOfInterval.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "firstChannelOfInterval", (void*)&firstChannelOfInterval);
      R__insp.InspectMember("vector<Float_t>", (void*)&firstChannelOfInterval, "firstChannelOfInterval.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nChannelsOfInterval", (void*)&nChannelsOfInterval);
      R__insp.InspectMember("vector<Float_t>", (void*)&nChannelsOfInterval, "nChannelsOfInterval.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pitchWidth", (void*)&pitchWidth);
      R__insp.InspectMember("vector<Float_t>", (void*)&pitchWidth, "pitchWidth.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bLoadedStandardPitchWidthSettings", &bLoadedStandardPitchWidthSettings);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "standardPW", &standardPW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "verbosity", &verbosity);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TDiamondPattern(void *p) {
      return  p ? new(p) ::TDiamondPattern : new ::TDiamondPattern;
   }
   static void *newArray_TDiamondPattern(Long_t nElements, void *p) {
      return p ? new(p) ::TDiamondPattern[nElements] : new ::TDiamondPattern[nElements];
   }
   // Wrapper around operator delete
   static void delete_TDiamondPattern(void *p) {
      delete ((::TDiamondPattern*)p);
   }
   static void deleteArray_TDiamondPattern(void *p) {
      delete [] ((::TDiamondPattern*)p);
   }
   static void destruct_TDiamondPattern(void *p) {
      typedef ::TDiamondPattern current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDiamondPattern

//______________________________________________________________________________
void TChannelMapping::Streamer(TBuffer &R__b)
{
   // Stream an object of class TChannelMapping.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TChannelMapping::Class(),this);
   } else {
      R__b.WriteClassBuffer(TChannelMapping::Class(),this);
   }
}

//______________________________________________________________________________
void TChannelMapping::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TChannelMapping.
      TClass *R__cl = ::TChannelMapping::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mapVaToDet", (void*)&mapVaToDet);
      R__insp.InspectMember("TChannelMapping::channelContainer", (void*)&mapVaToDet, "mapVaToDet.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vecVAChNo", (void*)&vecVAChNo);
      R__insp.InspectMember("vector<UInt_t>", (void*)&vecVAChNo, "vecVAChNo.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vecdetChNo", (void*)&vecdetChNo);
      R__insp.InspectMember("vector<UInt_t>", (void*)&vecdetChNo, "vecdetChNo.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TChannelMapping(void *p) {
      return  p ? new(p) ::TChannelMapping : new ::TChannelMapping;
   }
   static void *newArray_TChannelMapping(Long_t nElements, void *p) {
      return p ? new(p) ::TChannelMapping[nElements] : new ::TChannelMapping[nElements];
   }
   // Wrapper around operator delete
   static void delete_TChannelMapping(void *p) {
      delete ((::TChannelMapping*)p);
   }
   static void deleteArray_TChannelMapping(void *p) {
      delete [] ((::TChannelMapping*)p);
   }
   static void destruct_TChannelMapping(void *p) {
      typedef ::TChannelMapping current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TChannelMapping

//______________________________________________________________________________
void ChannelScreen::Streamer(TBuffer &R__b)
{
   // Stream an object of class ChannelScreen.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ChannelScreen::Class(),this);
   } else {
      R__b.WriteClassBuffer(ChannelScreen::Class(),this);
   }
}

//______________________________________________________________________________
void ChannelScreen::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ChannelScreen.
      TClass *R__cl = ::ChannelScreen::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channel_switch[256]", channel_switch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "det", &det);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ChannelScreen(void *p) {
      return  p ? new(p) ::ChannelScreen : new ::ChannelScreen;
   }
   static void *newArray_ChannelScreen(Long_t nElements, void *p) {
      return p ? new(p) ::ChannelScreen[nElements] : new ::ChannelScreen[nElements];
   }
   // Wrapper around operator delete
   static void delete_ChannelScreen(void *p) {
      delete ((::ChannelScreen*)p);
   }
   static void deleteArray_ChannelScreen(void *p) {
      delete [] ((::ChannelScreen*)p);
   }
   static void destruct_ChannelScreen(void *p) {
      typedef ::ChannelScreen current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ChannelScreen

//______________________________________________________________________________
void TSettings::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSettings.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSettings::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSettings::Class(),this);
   }
}

//______________________________________________________________________________
void TSettings::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSettings.
      TClass *R__cl = ::TSettings::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runDescription", (void*)&runDescription);
      R__insp.InspectMember("string", (void*)&runDescription, "runDescription.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outputDir", (void*)&outputDir);
      R__insp.InspectMember("string", (void*)&outputDir, "outputDir.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inputDir", (void*)&inputDir);
      R__insp.InspectMember("string", (void*)&inputDir, "inputDir.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "b3dDiamond", &b3dDiamond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "diamondName", &diamondName);
      R__insp.InspectMember(diamondName, "diamondName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "voltage", &voltage);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fidCutsSelection", &fidCutsSelection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fidCuts3DEdge", &fidCuts3DEdge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fidCuts3DMetallisation", &fidCuts3DMetallisation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OverlayRange3d", (void*)&OverlayRange3d);
      R__insp.InspectMember("pair<float,float>", (void*)&OverlayRange3d, "OverlayRange3d.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*macro", &macro);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "store_threshold", &store_threshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "minAbsEtaVal", &minAbsEtaVal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isStandardSelectionFidCut", &isStandardSelectionFidCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isStandardArea", &isStandardArea);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isStandard3dEdgeFidCut", &isStandard3dEdgeFidCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isStandard3dMetallisationFidCut", &isStandard3dMetallisationFidCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isEventSkipCut", &isEventSkipCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "path", (void*)&path);
      R__insp.InspectMember("string", (void*)&path, "path.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fileName", (void*)&fileName);
      R__insp.InspectMember("string", (void*)&fileName, "fileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sys", &sys);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*settingsFile", &settingsFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bRerunSelection", &bRerunSelection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bUseUserResolutionInput", &bUseUserResolutionInput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bTransparentAlignment", &bTransparentAlignment);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detectorsToAlign", &detectorsToAlign);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bAsymmetricSample", &bAsymmetricSample);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chi2Cut3D", &chi2Cut3D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chi2Cut3D_X", &chi2Cut3D_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chi2Cut3D_Y", &chi2Cut3D_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "transparentChi2", &transparentChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vecDiaDetectorAreasInChannel", (void*)&vecDiaDetectorAreasInChannel);
      R__insp.InspectMember("vector<std::pair<Int_t,Int_t> >", (void*)&vecDiaDetectorAreasInChannel, "vecDiaDetectorAreasInChannel.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vecAlignmentIgnoreChannels", (void*)&vecAlignmentIgnoreChannels);
      R__insp.InspectMember("vector<std::vector<Int_t> >", (void*)&vecAlignmentIgnoreChannels, "vecAlignmentIgnoreChannels.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bResetAlignment", &bResetAlignment);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alignmentPrecision_Offset", &alignmentPrecision_Offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alignmentPrecision_Angle", &alignmentPrecision_Angle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bDoAllAlignmentPlots", &bDoAllAlignmentPlots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "siliconAlignmentSteps", &siliconAlignmentSteps);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "diamondAlignmentSteps", &diamondAlignmentSteps);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nDiamonds", &nDiamonds);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SaveAllFilesSwitch", &SaveAllFilesSwitch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ClosePlotsOnSave", &ClosePlotsOnSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IndexProduceSwitch", &IndexProduceSwitch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fix_dia_noise", &fix_dia_noise);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Iter_Size", &Iter_Size);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Taylor_speed_throttle", &Taylor_speed_throttle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dia_input", &dia_input);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Si_Pedestal_Hit_Factor", &Si_Pedestal_Hit_Factor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Di_Pedestal_Hit_Factor", &Di_Pedestal_Hit_Factor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "single_channel_analysis_enable", &single_channel_analysis_enable);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "single_channel_analysis_eventwindow", &single_channel_analysis_eventwindow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "single_channel_analysis_channels", (void*)&single_channel_analysis_channels);
      R__insp.InspectMember("vector<int>", (void*)&single_channel_analysis_channels, "single_channel_analysis_channels.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DO_CMC", &DO_CMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CMN_cut", &CMN_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CMN_corr_low", &CMN_corr_low);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CMN_corr_high", &CMN_corr_high);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Si_Cluster_Seed_Factor", &Si_Cluster_Seed_Factor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Si_Cluster_Hit_Factor", &Si_Cluster_Hit_Factor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Di_Cluster_Seed_Factor", &Di_Cluster_Seed_Factor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Di_Cluster_Hit_Factor", &Di_Cluster_Hit_Factor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "si_avg_fidcut_xlow", &si_avg_fidcut_xlow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "si_avg_fidcut_xhigh", &si_avg_fidcut_xhigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "si_avg_fidcut_ylow", &si_avg_fidcut_ylow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "si_avg_fidcut_yhigh", &si_avg_fidcut_yhigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pulse_height_num_bins", &pulse_height_num_bins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pulse_height_si_max", &pulse_height_si_max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pulse_height_di_max", &pulse_height_di_max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "snr_distribution_si_max", &snr_distribution_si_max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "snr_distribution_di_max", &snr_distribution_di_max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta_lowq_slice_low", &eta_lowq_slice_low);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta_lowq_slice_hi", &eta_lowq_slice_hi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta_hiq_slice_low", &eta_hiq_slice_low);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta_hiq_slice_hi", &eta_hiq_slice_hi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etavsq_n_landau_slices", &etavsq_n_landau_slices);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "snr_plots_enable", &snr_plots_enable);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bAnalyseAlignmentEvents", &bAnalyseAlignmentEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bEventBinWidth", &bEventBinWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bEventwiseStart", &bEventwiseStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bEventwiseStop", &bEventwiseStop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bDoEventwise", &bDoEventwise);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bSkipEvents", (void*)&bSkipEvents);
      R__insp.InspectMember("vector<std::pair<Int_t,Int_t> >", (void*)&bSkipEvents, "bSkipEvents.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alignment_x_offsets", (void*)&alignment_x_offsets);
      R__insp.InspectMember("vector<Float_t>", (void*)&alignment_x_offsets, "alignment_x_offsets.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alignment_y_offsets", (void*)&alignment_y_offsets);
      R__insp.InspectMember("vector<Float_t>", (void*)&alignment_y_offsets, "alignment_y_offsets.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alignment_phi_offsets", (void*)&alignment_phi_offsets);
      R__insp.InspectMember("vector<Float_t>", (void*)&alignment_phi_offsets, "alignment_phi_offsets.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alignment_z_offsets", (void*)&alignment_z_offsets);
      R__insp.InspectMember("vector<Float_t>", (void*)&alignment_z_offsets, "alignment_z_offsets.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alignment_resolutions", (void*)&alignment_resolutions);
      R__insp.InspectMember("vector<Float_t>", (void*)&alignment_resolutions, "alignment_resolutions.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alignmentFidCuts", (void*)&alignmentFidCuts);
      R__insp.InspectMember("vector<Int_t>", (void*)&alignmentFidCuts, "alignmentFidCuts.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alignment_training_track_fraction", &alignment_training_track_fraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alignment_training_track_number", &alignment_training_track_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trainingMethod", &trainingMethod);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Det_channel_screen_channels[9]", Det_channel_screen_channels);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Dia_channel_not_connected", (void*)&Dia_channel_not_connected);
      R__insp.InspectMember("vector<int>", (void*)&Dia_channel_not_connected, "Dia_channel_not_connected.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Dia_channel_noisy", (void*)&Dia_channel_noisy);
      R__insp.InspectMember("vector<int>", (void*)&Dia_channel_noisy, "Dia_channel_noisy.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Det_channel_screen[9]", Det_channel_screen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dia_x_aligned", &dia_x_aligned);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta_correction", &eta_correction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alignment_chi2", &alignment_chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UseAutoFidCut", &UseAutoFidCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlternativeClustering", &AlternativeClustering);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "plotChannel_on", &plotChannel_on);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "res_keep_factor", &res_keep_factor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "plotDiamond", &plotDiamond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "makeBufferPlots", &makeBufferPlots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SingleChannel2000plots", &SingleChannel2000plots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "makeDiamondPlots", &makeDiamondPlots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "makeHits2D", &makeHits2D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "makeNoise2D", &makeNoise2D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "makePullDist", &makePullDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "makePedRMSTree", &makePedRMSTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventPrintHex", &eventPrintHex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "plottedChannel", &plottedChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxBufferPlots", &maxBufferPlots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rms_sigma_difference_cut", &rms_sigma_difference_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "high_rms_cut", &high_rms_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rms_cut", &rms_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zoomDiamondPlots", &zoomDiamondPlots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "singleTrack2D", &singleTrack2D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "singleTrack2DmaxClusterSize", &singleTrack2DmaxClusterSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxNoise2D", &maxNoise2D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runNumber", &runNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clusterHitFactors", (void*)&clusterHitFactors);
      R__insp.InspectMember("vector<Float_t>", (void*)&clusterHitFactors, "clusterHitFactors.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clusterSeedFactors", (void*)&clusterSeedFactors);
      R__insp.InspectMember("vector<Float_t>", (void*)&clusterSeedFactors, "clusterSeedFactors.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vecClusterSeedFactorsDia", (void*)&vecClusterSeedFactorsDia);
      R__insp.InspectMember("vector<Float_t>", (void*)&vecClusterSeedFactorsDia, "vecClusterSeedFactorsDia.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vecClusterHitFactorsDia", (void*)&vecClusterHitFactorsDia);
      R__insp.InspectMember("vector<Float_t>", (void*)&vecClusterHitFactorsDia, "vecClusterHitFactorsDia.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*diamondMapping", &diamondMapping);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pitchWidthSil", &pitchWidthSil);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pitchWidthDia", &pitchWidthDia);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "currentBegin", &currentBegin);
      R__insp.InspectMember(currentBegin, "currentBegin.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "currentEnd", &currentEnd);
      R__insp.InspectMember(currentEnd, "currentEnd.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "repeaterCardNo", &repeaterCardNo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bPaperMode", &bPaperMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "align_sil_fid_xlow", &align_sil_fid_xlow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "align_sil_fid_xhi", &align_sil_fid_xhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "align_sil_fid_ylow", &align_sil_fid_ylow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "align_sil_fid_yhi", &align_sil_fid_yhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "diamondPattern", &diamondPattern);
      R__insp.InspectMember(diamondPattern, "diamondPattern.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "verbosity", &verbosity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "silPitchWidth", &silPitchWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "diaPitchWidth", &diaPitchWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "diaOffsetMetricSpace", &diaOffsetMetricSpace);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "diaStartingChannel", &diaStartingChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nEvents", &nEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yOffset3D", &yOffset3D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stripAnalysisFidCut", (void*)&stripAnalysisFidCut);
      R__insp.InspectMember("vector<int>", (void*)&stripAnalysisFidCut, "stripAnalysisFidCut.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TDnHAnalysisFidCut", (void*)&TDnHAnalysisFidCut);
      R__insp.InspectMember("vector<int>", (void*)&TDnHAnalysisFidCut, "TDnHAnalysisFidCut.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TDwHAnalysisFidCut", (void*)&TDwHAnalysisFidCut);
      R__insp.InspectMember("vector<int>", (void*)&TDwHAnalysisFidCut, "TDwHAnalysisFidCut.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "b3dShortAnalysis", &b3dShortAnalysis);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "b3dLongAnalysis", &b3dLongAnalysis);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "b3dTransparentAnalysis", &b3dTransparentAnalysis);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nRows3d", &nRows3d);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nColumns3d", &nColumns3d);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "columnRadius", &columnRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaxOverlayClusterSize", &MaxOverlayClusterSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CentralColumnOverlayXLow", &CentralColumnOverlayXLow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CentralColumnOverlayXHigh", &CentralColumnOverlayXHigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CentralColumnOverlayYLow", &CentralColumnOverlayYLow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CentralColumnOverlayYHigh", &CentralColumnOverlayYHigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CentralColumnOverlayXBins", &CentralColumnOverlayXBins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CentralColumnOverlayYBins", &CentralColumnOverlayYBins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BiasColumnOverlayXLow", &BiasColumnOverlayXLow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BiasColumnOverlayXHigh", &BiasColumnOverlayXHigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BiasColumnOverlayYLow", &BiasColumnOverlayYLow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BiasColumnOverlayYHigh", &BiasColumnOverlayYHigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OverlayOffsetX", &OverlayOffsetX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OverlayOffsetY", &OverlayOffsetY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OverlayColumnPulseHeightCut", &OverlayColumnPulseHeightCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "badCells3d", (void*)&badCells3d);
      R__insp.InspectMember("vector<Int_t>", (void*)&badCells3d, "badCells3d.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "badCells3dnH", (void*)&badCells3dnH);
      R__insp.InspectMember("vector<Int_t>", (void*)&badCells3dnH, "badCells3dnH.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "goodCells3d", (void*)&goodCells3d);
      R__insp.InspectMember("vector<Int_t>", (void*)&goodCells3d, "goodCells3d.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "goodCellRegions3d", (void*)&goodCellRegions3d);
      R__insp.InspectMember("vector<vector<Int_t> >", (void*)&goodCellRegions3d, "goodCellRegions3d.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deadCell3d", (void*)&deadCell3d);
      R__insp.InspectMember("vector<Int_t>", (void*)&deadCell3d, "deadCell3d.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vecEdgePositionType", (void*)&vecEdgePositionType);
      R__insp.InspectMember("vector<TPlaneProperties::enumCoordinate>", (void*)&vecEdgePositionType, "vecEdgePositionType.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vecEdgePositionName", (void*)&vecEdgePositionName);
      R__insp.InspectMember("vector<TString>", (void*)&vecEdgePositionName, "vecEdgePositionName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vecEdgePositionDetector", (void*)&vecEdgePositionDetector);
      R__insp.InspectMember("vector<Int_t>", (void*)&vecEdgePositionDetector, "vecEdgePositionDetector.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cellHeight", &cellHeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "minimumEdgeDistance", &minimumEdgeDistance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adcToElectronConversion", &adcToElectronConversion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PathExtension3d", &PathExtension3d);
      R__insp.InspectMember(PathExtension3d, "PathExtension3d.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "resolutionSNR", &resolutionSNR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lowResponseThreshold", &lowResponseThreshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "negativeChargeCut", &negativeChargeCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "negativeChargeCutStrip", &negativeChargeCutStrip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "responseWindow", (void*)&responseWindow);
      R__insp.InspectMember("pair<Float_t,Float_t>", (void*)&responseWindow, "responseWindow.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*centralRegion3DnH", &centralRegion3DnH);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSettings(void *p) {
      return  p ? new(p) ::TSettings : new ::TSettings;
   }
   static void *newArray_TSettings(Long_t nElements, void *p) {
      return p ? new(p) ::TSettings[nElements] : new ::TSettings[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSettings(void *p) {
      delete ((::TSettings*)p);
   }
   static void deleteArray_TSettings(void *p) {
      delete [] ((::TSettings*)p);
   }
   static void destruct_TSettings(void *p) {
      typedef ::TSettings current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSettings

//______________________________________________________________________________
void TFiducialCut::Streamer(TBuffer &R__b)
{
   // Stream an object of class TFiducialCut.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TFiducialCut::Class(),this);
   } else {
      R__b.WriteClassBuffer(TFiducialCut::Class(),this);
   }
}

//______________________________________________________________________________
void TFiducialCut::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TFiducialCut.
      TClass *R__cl = ::TFiducialCut::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "index", &index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "active", &active);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x_low", &x_low);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x_high", &x_high);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y_low", &y_low);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y_high", &y_high);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "name", &name);
      R__insp.InspectMember(name, "name.");
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TFiducialCut(void *p) {
      return  p ? new(p) ::TFiducialCut : new ::TFiducialCut;
   }
   static void *newArray_TFiducialCut(Long_t nElements, void *p) {
      return p ? new(p) ::TFiducialCut[nElements] : new ::TFiducialCut[nElements];
   }
   // Wrapper around operator delete
   static void delete_TFiducialCut(void *p) {
      delete ((::TFiducialCut*)p);
   }
   static void deleteArray_TFiducialCut(void *p) {
      delete [] ((::TFiducialCut*)p);
   }
   static void destruct_TFiducialCut(void *p) {
      typedef ::TFiducialCut current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TFiducialCut

//______________________________________________________________________________
void TFidCutRegions::Streamer(TBuffer &R__b)
{
   // Stream an object of class TFidCutRegions.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TFidCutRegions::Class(),this);
   } else {
      R__b.WriteClassBuffer(TFidCutRegions::Class(),this);
   }
}

//______________________________________________________________________________
void TFidCutRegions::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TFidCutRegions.
      TClass *R__cl = ::TFidCutRegions::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "name", (void*)&name);
      R__insp.InspectMember("string", (void*)&name, "name.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "index", &index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xInt", (void*)&xInt);
      R__insp.InspectMember("vector<std::pair<Float_t,Float_t> >", (void*)&xInt, "xInt.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yInt", (void*)&yInt);
      R__insp.InspectMember("vector<std::pair<Float_t,Float_t> >", (void*)&yInt, "yInt.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nDiamonds", &nDiamonds);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nFidCuts", &nFidCuts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fidCuts", (void*)&fidCuts);
      R__insp.InspectMember("vector<TFiducialCut*>", (void*)&fidCuts, "fidCuts.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runDescription", (void*)&runDescription);
      R__insp.InspectMember("string", (void*)&runDescription, "runDescription.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hEventScatterPlot", &hEventScatterPlot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "verbosity", &verbosity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "addionalCut_xLow", &addionalCut_xLow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "addionalCut_xHigh", &addionalCut_xHigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "addionalCut_yLow", &addionalCut_yLow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "addionalCut_yHigh", &addionalCut_yHigh);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TFidCutRegions(void *p) {
      return  p ? new(p) ::TFidCutRegions : new ::TFidCutRegions;
   }
   static void *newArray_TFidCutRegions(Long_t nElements, void *p) {
      return p ? new(p) ::TFidCutRegions[nElements] : new ::TFidCutRegions[nElements];
   }
   // Wrapper around operator delete
   static void delete_TFidCutRegions(void *p) {
      delete ((::TFidCutRegions*)p);
   }
   static void deleteArray_TFidCutRegions(void *p) {
      delete [] ((::TFidCutRegions*)p);
   }
   static void destruct_TFidCutRegions(void *p) {
      typedef ::TFidCutRegions current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TFidCutRegions

//______________________________________________________________________________
void TDetectorAlignment::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDetectorAlignment.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TDetectorAlignment::Class(),this);
   } else {
      R__b.WriteClassBuffer(TDetectorAlignment::Class(),this);
   }
}

//______________________________________________________________________________
void TDetectorAlignment::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TDetectorAlignment.
      TClass *R__cl = ::TDetectorAlignment::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xResolution[6]", xResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yResolution[6]", yResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xMean[6]", xMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yMean[6]", yMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "det_x_offset[6]", det_x_offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "det_y_offset[6]", det_y_offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "det_z_offset[6]", det_z_offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vecDetXOffset[6]", vecDetXOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vecDetYOffset[6]", vecDetYOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vecDetZOffset[6]", vecDetZOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "det_phix_offset[6]", det_phix_offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "det_phiy_offset[6]", det_phiy_offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vecDetPhiXOffset[6]", vecDetPhiXOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vecDetPhiYOffset[6]", vecDetPhiYOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nDetectors", &nDetectors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runNumber", &runNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "diaTime", &diaTime);
      R__insp.InspectMember(diaTime, "diaTime.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "silTime", &silTime);
      R__insp.InspectMember(silTime, "silTime.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nUsedEvents", &nUsedEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alignmentTrainingTrackFraction", &alignmentTrainingTrackFraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "diaChi2", &diaChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "intervallBeginEventNo", (void*)&intervallBeginEventNo);
      R__insp.InspectMember("vector<UInt_t>", (void*)&intervallBeginEventNo, "intervallBeginEventNo.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "intervallEndEventNo", (void*)&intervallEndEventNo);
      R__insp.InspectMember("vector<UInt_t>", (void*)&intervallEndEventNo, "intervallEndEventNo.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nDiamondAlignmentEvents", &nDiamondAlignmentEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nEvents", &nEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "verbosity", &verbosity);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TDetectorAlignment(void *p) {
      return  p ? new(p) ::TDetectorAlignment : new ::TDetectorAlignment;
   }
   static void *newArray_TDetectorAlignment(Long_t nElements, void *p) {
      return p ? new(p) ::TDetectorAlignment[nElements] : new ::TDetectorAlignment[nElements];
   }
   // Wrapper around operator delete
   static void delete_TDetectorAlignment(void *p) {
      delete ((::TDetectorAlignment*)p);
   }
   static void deleteArray_TDetectorAlignment(void *p) {
      delete [] ((::TDetectorAlignment*)p);
   }
   static void destruct_TDetectorAlignment(void *p) {
      typedef ::TDetectorAlignment current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDetectorAlignment

namespace ROOT {
   void dequelEboolgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void dequelEboolgR_Dictionary();
   static void *new_dequelEboolgR(void *p = 0);
   static void *newArray_dequelEboolgR(Long_t size, void *p);
   static void delete_dequelEboolgR(void *p);
   static void deleteArray_dequelEboolgR(void *p);
   static void destruct_dequelEboolgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const deque<bool>*)
   {
      deque<bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(deque<bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("deque<bool>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/deque", 42,
                  typeid(deque<bool>), DefineBehavior(ptr, ptr),
                  0, &dequelEboolgR_Dictionary, isa_proxy, 4,
                  sizeof(deque<bool>) );
      instance.SetNew(&new_dequelEboolgR);
      instance.SetNewArray(&newArray_dequelEboolgR);
      instance.SetDelete(&delete_dequelEboolgR);
      instance.SetDeleteArray(&deleteArray_dequelEboolgR);
      instance.SetDestructor(&destruct_dequelEboolgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< deque<bool> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const deque<bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void dequelEboolgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const deque<bool>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_dequelEboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) deque<bool> : new deque<bool>;
   }
   static void *newArray_dequelEboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) deque<bool>[nElements] : new deque<bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_dequelEboolgR(void *p) {
      delete ((deque<bool>*)p);
   }
   static void deleteArray_dequelEboolgR(void *p) {
      delete [] ((deque<bool>*)p);
   }
   static void destruct_dequelEboolgR(void *p) {
      typedef deque<bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class deque<bool>

namespace ROOT {
   void dequelEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void dequelEfloatgR_Dictionary();
   static void *new_dequelEfloatgR(void *p = 0);
   static void *newArray_dequelEfloatgR(Long_t size, void *p);
   static void delete_dequelEfloatgR(void *p);
   static void deleteArray_dequelEfloatgR(void *p);
   static void destruct_dequelEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const deque<float>*)
   {
      deque<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(deque<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("deque<float>", -2, "deque.dll", 0,
                  typeid(deque<float>), DefineBehavior(ptr, ptr),
                  0, &dequelEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(deque<float>) );
      instance.SetNew(&new_dequelEfloatgR);
      instance.SetNewArray(&newArray_dequelEfloatgR);
      instance.SetDelete(&delete_dequelEfloatgR);
      instance.SetDeleteArray(&deleteArray_dequelEfloatgR);
      instance.SetDestructor(&destruct_dequelEfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< deque<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const deque<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void dequelEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const deque<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_dequelEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) deque<float> : new deque<float>;
   }
   static void *newArray_dequelEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) deque<float>[nElements] : new deque<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_dequelEfloatgR(void *p) {
      delete ((deque<float>*)p);
   }
   static void deleteArray_dequelEfloatgR(void *p) {
      delete [] ((deque<float>*)p);
   }
   static void destruct_dequelEfloatgR(void *p) {
      typedef deque<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class deque<float>

namespace ROOT {
   void dequelEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void dequelEintgR_Dictionary();
   static void *new_dequelEintgR(void *p = 0);
   static void *newArray_dequelEintgR(Long_t size, void *p);
   static void delete_dequelEintgR(void *p);
   static void deleteArray_dequelEintgR(void *p);
   static void destruct_dequelEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const deque<int>*)
   {
      deque<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(deque<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("deque<int>", -2, "deque.dll", 0,
                  typeid(deque<int>), DefineBehavior(ptr, ptr),
                  0, &dequelEintgR_Dictionary, isa_proxy, 0,
                  sizeof(deque<int>) );
      instance.SetNew(&new_dequelEintgR);
      instance.SetNewArray(&newArray_dequelEintgR);
      instance.SetDelete(&delete_dequelEintgR);
      instance.SetDeleteArray(&deleteArray_dequelEintgR);
      instance.SetDestructor(&destruct_dequelEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< deque<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const deque<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void dequelEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const deque<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_dequelEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) deque<int> : new deque<int>;
   }
   static void *newArray_dequelEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) deque<int>[nElements] : new deque<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_dequelEintgR(void *p) {
      delete ((deque<int>*)p);
   }
   static void deleteArray_dequelEintgR(void *p) {
      delete [] ((deque<int>*)p);
   }
   static void destruct_dequelEintgR(void *p) {
      typedef deque<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class deque<int>

namespace ROOT {
   void dequelEpairlEintcOfloatgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void dequelEpairlEintcOfloatgRsPgR_Dictionary();
   static void *new_dequelEpairlEintcOfloatgRsPgR(void *p = 0);
   static void *newArray_dequelEpairlEintcOfloatgRsPgR(Long_t size, void *p);
   static void delete_dequelEpairlEintcOfloatgRsPgR(void *p);
   static void deleteArray_dequelEpairlEintcOfloatgRsPgR(void *p);
   static void destruct_dequelEpairlEintcOfloatgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const deque<pair<int,float> >*)
   {
      deque<pair<int,float> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(deque<pair<int,float> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("deque<pair<int,float> >", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/deque", 42,
                  typeid(deque<pair<int,float> >), DefineBehavior(ptr, ptr),
                  0, &dequelEpairlEintcOfloatgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(deque<pair<int,float> >) );
      instance.SetNew(&new_dequelEpairlEintcOfloatgRsPgR);
      instance.SetNewArray(&newArray_dequelEpairlEintcOfloatgRsPgR);
      instance.SetDelete(&delete_dequelEpairlEintcOfloatgRsPgR);
      instance.SetDeleteArray(&deleteArray_dequelEpairlEintcOfloatgRsPgR);
      instance.SetDestructor(&destruct_dequelEpairlEintcOfloatgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< deque<pair<int,float> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const deque<pair<int,float> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void dequelEpairlEintcOfloatgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const deque<pair<int,float> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_dequelEpairlEintcOfloatgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) deque<pair<int,float> > : new deque<pair<int,float> >;
   }
   static void *newArray_dequelEpairlEintcOfloatgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) deque<pair<int,float> >[nElements] : new deque<pair<int,float> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_dequelEpairlEintcOfloatgRsPgR(void *p) {
      delete ((deque<pair<int,float> >*)p);
   }
   static void deleteArray_dequelEpairlEintcOfloatgRsPgR(void *p) {
      delete [] ((deque<pair<int,float> >*)p);
   }
   static void destruct_dequelEpairlEintcOfloatgRsPgR(void *p) {
      typedef deque<pair<int,float> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class deque<pair<int,float> >

namespace ROOT {
   void dequelEpairlEunsignedsPshortcOfloatgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void dequelEpairlEunsignedsPshortcOfloatgRsPgR_Dictionary();
   static void *new_dequelEpairlEunsignedsPshortcOfloatgRsPgR(void *p = 0);
   static void *newArray_dequelEpairlEunsignedsPshortcOfloatgRsPgR(Long_t size, void *p);
   static void delete_dequelEpairlEunsignedsPshortcOfloatgRsPgR(void *p);
   static void deleteArray_dequelEpairlEunsignedsPshortcOfloatgRsPgR(void *p);
   static void destruct_dequelEpairlEunsignedsPshortcOfloatgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const deque<pair<unsigned short,float> >*)
   {
      deque<pair<unsigned short,float> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(deque<pair<unsigned short,float> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("deque<pair<unsigned short,float> >", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/deque", 42,
                  typeid(deque<pair<unsigned short,float> >), DefineBehavior(ptr, ptr),
                  0, &dequelEpairlEunsignedsPshortcOfloatgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(deque<pair<unsigned short,float> >) );
      instance.SetNew(&new_dequelEpairlEunsignedsPshortcOfloatgRsPgR);
      instance.SetNewArray(&newArray_dequelEpairlEunsignedsPshortcOfloatgRsPgR);
      instance.SetDelete(&delete_dequelEpairlEunsignedsPshortcOfloatgRsPgR);
      instance.SetDeleteArray(&deleteArray_dequelEpairlEunsignedsPshortcOfloatgRsPgR);
      instance.SetDestructor(&destruct_dequelEpairlEunsignedsPshortcOfloatgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< deque<pair<unsigned short,float> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const deque<pair<unsigned short,float> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void dequelEpairlEunsignedsPshortcOfloatgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const deque<pair<unsigned short,float> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_dequelEpairlEunsignedsPshortcOfloatgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) deque<pair<unsigned short,float> > : new deque<pair<unsigned short,float> >;
   }
   static void *newArray_dequelEpairlEunsignedsPshortcOfloatgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) deque<pair<unsigned short,float> >[nElements] : new deque<pair<unsigned short,float> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_dequelEpairlEunsignedsPshortcOfloatgRsPgR(void *p) {
      delete ((deque<pair<unsigned short,float> >*)p);
   }
   static void deleteArray_dequelEpairlEunsignedsPshortcOfloatgRsPgR(void *p) {
      delete [] ((deque<pair<unsigned short,float> >*)p);
   }
   static void destruct_dequelEpairlEunsignedsPshortcOfloatgRsPgR(void *p) {
      typedef deque<pair<unsigned short,float> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class deque<pair<unsigned short,float> >

namespace ROOT {
   void dequelEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void dequelEunsignedsPintgR_Dictionary();
   static void *new_dequelEunsignedsPintgR(void *p = 0);
   static void *newArray_dequelEunsignedsPintgR(Long_t size, void *p);
   static void delete_dequelEunsignedsPintgR(void *p);
   static void deleteArray_dequelEunsignedsPintgR(void *p);
   static void destruct_dequelEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const deque<unsigned int>*)
   {
      deque<unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(deque<unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("deque<unsigned int>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/deque", 42,
                  typeid(deque<unsigned int>), DefineBehavior(ptr, ptr),
                  0, &dequelEunsignedsPintgR_Dictionary, isa_proxy, 0,
                  sizeof(deque<unsigned int>) );
      instance.SetNew(&new_dequelEunsignedsPintgR);
      instance.SetNewArray(&newArray_dequelEunsignedsPintgR);
      instance.SetDelete(&delete_dequelEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_dequelEunsignedsPintgR);
      instance.SetDestructor(&destruct_dequelEunsignedsPintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< deque<unsigned int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const deque<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void dequelEunsignedsPintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const deque<unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_dequelEunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) deque<unsigned int> : new deque<unsigned int>;
   }
   static void *newArray_dequelEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) deque<unsigned int>[nElements] : new deque<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_dequelEunsignedsPintgR(void *p) {
      delete ((deque<unsigned int>*)p);
   }
   static void deleteArray_dequelEunsignedsPintgR(void *p) {
      delete [] ((deque<unsigned int>*)p);
   }
   static void destruct_dequelEunsignedsPintgR(void *p) {
      typedef deque<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class deque<unsigned int>

namespace ROOT {
   void maplETStringcOTStringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETStringcOTStringgR_Dictionary();
   static void *new_maplETStringcOTStringgR(void *p = 0);
   static void *newArray_maplETStringcOTStringgR(Long_t size, void *p);
   static void delete_maplETStringcOTStringgR(void *p);
   static void deleteArray_maplETStringcOTStringgR(void *p);
   static void destruct_maplETStringcOTStringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<TString,TString>*)
   {
      map<TString,TString> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TString,TString>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TString,TString>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<TString,TString>), DefineBehavior(ptr, ptr),
                  0, &maplETStringcOTStringgR_Dictionary, isa_proxy, 4,
                  sizeof(map<TString,TString>) );
      instance.SetNew(&new_maplETStringcOTStringgR);
      instance.SetNewArray(&newArray_maplETStringcOTStringgR);
      instance.SetDelete(&delete_maplETStringcOTStringgR);
      instance.SetDeleteArray(&deleteArray_maplETStringcOTStringgR);
      instance.SetDestructor(&destruct_maplETStringcOTStringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<TString,TString> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TString,TString>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETStringcOTStringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<TString,TString>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplETStringcOTStringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,TString> : new map<TString,TString>;
   }
   static void *newArray_maplETStringcOTStringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,TString>[nElements] : new map<TString,TString>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETStringcOTStringgR(void *p) {
      delete ((map<TString,TString>*)p);
   }
   static void deleteArray_maplETStringcOTStringgR(void *p) {
      delete [] ((map<TString,TString>*)p);
   }
   static void destruct_maplETStringcOTStringgR(void *p) {
      typedef map<TString,TString> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<TString,TString>

namespace ROOT {
   void maplETStringcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETStringcOfloatgR_Dictionary();
   static void *new_maplETStringcOfloatgR(void *p = 0);
   static void *newArray_maplETStringcOfloatgR(Long_t size, void *p);
   static void delete_maplETStringcOfloatgR(void *p);
   static void deleteArray_maplETStringcOfloatgR(void *p);
   static void destruct_maplETStringcOfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<TString,float>*)
   {
      map<TString,float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TString,float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TString,float>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<TString,float>), DefineBehavior(ptr, ptr),
                  0, &maplETStringcOfloatgR_Dictionary, isa_proxy, 4,
                  sizeof(map<TString,float>) );
      instance.SetNew(&new_maplETStringcOfloatgR);
      instance.SetNewArray(&newArray_maplETStringcOfloatgR);
      instance.SetDelete(&delete_maplETStringcOfloatgR);
      instance.SetDeleteArray(&deleteArray_maplETStringcOfloatgR);
      instance.SetDestructor(&destruct_maplETStringcOfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<TString,float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TString,float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETStringcOfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<TString,float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplETStringcOfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,float> : new map<TString,float>;
   }
   static void *newArray_maplETStringcOfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,float>[nElements] : new map<TString,float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETStringcOfloatgR(void *p) {
      delete ((map<TString,float>*)p);
   }
   static void deleteArray_maplETStringcOfloatgR(void *p) {
      delete [] ((map<TString,float>*)p);
   }
   static void destruct_maplETStringcOfloatgR(void *p) {
      typedef map<TString,float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<TString,float>

namespace ROOT {
   void maplETStringcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETStringcOintgR_Dictionary();
   static void *new_maplETStringcOintgR(void *p = 0);
   static void *newArray_maplETStringcOintgR(Long_t size, void *p);
   static void delete_maplETStringcOintgR(void *p);
   static void deleteArray_maplETStringcOintgR(void *p);
   static void destruct_maplETStringcOintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<TString,int>*)
   {
      map<TString,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TString,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TString,int>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<TString,int>), DefineBehavior(ptr, ptr),
                  0, &maplETStringcOintgR_Dictionary, isa_proxy, 4,
                  sizeof(map<TString,int>) );
      instance.SetNew(&new_maplETStringcOintgR);
      instance.SetNewArray(&newArray_maplETStringcOintgR);
      instance.SetDelete(&delete_maplETStringcOintgR);
      instance.SetDeleteArray(&deleteArray_maplETStringcOintgR);
      instance.SetDestructor(&destruct_maplETStringcOintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<TString,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TString,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETStringcOintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<TString,int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplETStringcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,int> : new map<TString,int>;
   }
   static void *newArray_maplETStringcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,int>[nElements] : new map<TString,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETStringcOintgR(void *p) {
      delete ((map<TString,int>*)p);
   }
   static void deleteArray_maplETStringcOintgR(void *p) {
      delete [] ((map<TString,int>*)p);
   }
   static void destruct_maplETStringcOintgR(void *p) {
      typedef map<TString,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<TString,int>

namespace ROOT {
   void maplETStringcOmaplETStringcOTStringgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETStringcOmaplETStringcOTStringgRsPgR_Dictionary();
   static void *new_maplETStringcOmaplETStringcOTStringgRsPgR(void *p = 0);
   static void *newArray_maplETStringcOmaplETStringcOTStringgRsPgR(Long_t size, void *p);
   static void delete_maplETStringcOmaplETStringcOTStringgRsPgR(void *p);
   static void deleteArray_maplETStringcOmaplETStringcOTStringgRsPgR(void *p);
   static void destruct_maplETStringcOmaplETStringcOTStringgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<TString,map<TString,TString> >*)
   {
      map<TString,map<TString,TString> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TString,map<TString,TString> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TString,map<TString,TString> >", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<TString,map<TString,TString> >), DefineBehavior(ptr, ptr),
                  0, &maplETStringcOmaplETStringcOTStringgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(map<TString,map<TString,TString> >) );
      instance.SetNew(&new_maplETStringcOmaplETStringcOTStringgRsPgR);
      instance.SetNewArray(&newArray_maplETStringcOmaplETStringcOTStringgRsPgR);
      instance.SetDelete(&delete_maplETStringcOmaplETStringcOTStringgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplETStringcOmaplETStringcOTStringgRsPgR);
      instance.SetDestructor(&destruct_maplETStringcOmaplETStringcOTStringgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<TString,map<TString,TString> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TString,map<TString,TString> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETStringcOmaplETStringcOTStringgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<TString,map<TString,TString> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplETStringcOmaplETStringcOTStringgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,map<TString,TString> > : new map<TString,map<TString,TString> >;
   }
   static void *newArray_maplETStringcOmaplETStringcOTStringgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,map<TString,TString> >[nElements] : new map<TString,map<TString,TString> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETStringcOmaplETStringcOTStringgRsPgR(void *p) {
      delete ((map<TString,map<TString,TString> >*)p);
   }
   static void deleteArray_maplETStringcOmaplETStringcOTStringgRsPgR(void *p) {
      delete [] ((map<TString,map<TString,TString> >*)p);
   }
   static void destruct_maplETStringcOmaplETStringcOTStringgRsPgR(void *p) {
      typedef map<TString,map<TString,TString> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<TString,map<TString,TString> >

namespace ROOT {
   void maplEunsignedsPintcOunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEunsignedsPintcOunsignedsPintgR_Dictionary();
   static void *new_maplEunsignedsPintcOunsignedsPintgR(void *p = 0);
   static void *newArray_maplEunsignedsPintcOunsignedsPintgR(Long_t size, void *p);
   static void delete_maplEunsignedsPintcOunsignedsPintgR(void *p);
   static void deleteArray_maplEunsignedsPintcOunsignedsPintgR(void *p);
   static void destruct_maplEunsignedsPintcOunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<unsigned int,unsigned int>*)
   {
      map<unsigned int,unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<unsigned int,unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<unsigned int,unsigned int>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<unsigned int,unsigned int>), DefineBehavior(ptr, ptr),
                  0, &maplEunsignedsPintcOunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(map<unsigned int,unsigned int>) );
      instance.SetNew(&new_maplEunsignedsPintcOunsignedsPintgR);
      instance.SetNewArray(&newArray_maplEunsignedsPintcOunsignedsPintgR);
      instance.SetDelete(&delete_maplEunsignedsPintcOunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_maplEunsignedsPintcOunsignedsPintgR);
      instance.SetDestructor(&destruct_maplEunsignedsPintcOunsignedsPintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<unsigned int,unsigned int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<unsigned int,unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEunsignedsPintcOunsignedsPintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<unsigned int,unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEunsignedsPintcOunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned int,unsigned int> : new map<unsigned int,unsigned int>;
   }
   static void *newArray_maplEunsignedsPintcOunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned int,unsigned int>[nElements] : new map<unsigned int,unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEunsignedsPintcOunsignedsPintgR(void *p) {
      delete ((map<unsigned int,unsigned int>*)p);
   }
   static void deleteArray_maplEunsignedsPintcOunsignedsPintgR(void *p) {
      delete [] ((map<unsigned int,unsigned int>*)p);
   }
   static void destruct_maplEunsignedsPintcOunsignedsPintgR(void *p) {
      typedef map<unsigned int,unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<unsigned int,unsigned int>

namespace ROOT {
   void setlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void setlEintgR_Dictionary();
   static void *new_setlEintgR(void *p = 0);
   static void *newArray_setlEintgR(Long_t size, void *p);
   static void delete_setlEintgR(void *p);
   static void deleteArray_setlEintgR(void *p);
   static void destruct_setlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const set<int>*)
   {
      set<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(set<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("set<int>", -2, "set.dll", 0,
                  typeid(set<int>), DefineBehavior(ptr, ptr),
                  0, &setlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(set<int>) );
      instance.SetNew(&new_setlEintgR);
      instance.SetNewArray(&newArray_setlEintgR);
      instance.SetDelete(&delete_setlEintgR);
      instance.SetDeleteArray(&deleteArray_setlEintgR);
      instance.SetDestructor(&destruct_setlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Insert< set<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const set<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void setlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const set<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_setlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) set<int> : new set<int>;
   }
   static void *newArray_setlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) set<int>[nElements] : new set<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_setlEintgR(void *p) {
      delete ((set<int>*)p);
   }
   static void deleteArray_setlEintgR(void *p) {
      delete [] ((set<int>*)p);
   }
   static void destruct_setlEintgR(void *p) {
      typedef set<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class set<int>

namespace ROOT {
   void vectorlETClustermUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETClustermUgR_Dictionary();
   static void *new_vectorlETClustermUgR(void *p = 0);
   static void *newArray_vectorlETClustermUgR(Long_t size, void *p);
   static void delete_vectorlETClustermUgR(void *p);
   static void deleteArray_vectorlETClustermUgR(void *p);
   static void destruct_vectorlETClustermUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TCluster*>*)
   {
      vector<TCluster*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TCluster*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TCluster*>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<TCluster*>), DefineBehavior(ptr, ptr),
                  0, &vectorlETClustermUgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<TCluster*>) );
      instance.SetNew(&new_vectorlETClustermUgR);
      instance.SetNewArray(&newArray_vectorlETClustermUgR);
      instance.SetDelete(&delete_vectorlETClustermUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETClustermUgR);
      instance.SetDestructor(&destruct_vectorlETClustermUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TCluster*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TCluster*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETClustermUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TCluster*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETClustermUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TCluster*> : new vector<TCluster*>;
   }
   static void *newArray_vectorlETClustermUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TCluster*>[nElements] : new vector<TCluster*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETClustermUgR(void *p) {
      delete ((vector<TCluster*>*)p);
   }
   static void deleteArray_vectorlETClustermUgR(void *p) {
      delete [] ((vector<TCluster*>*)p);
   }
   static void destruct_vectorlETClustermUgR(void *p) {
      typedef vector<TCluster*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TCluster*>

namespace ROOT {
   void vectorlETClustergR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETClustergR_Dictionary();
   static void *new_vectorlETClustergR(void *p = 0);
   static void *newArray_vectorlETClustergR(Long_t size, void *p);
   static void delete_vectorlETClustergR(void *p);
   static void deleteArray_vectorlETClustergR(void *p);
   static void destruct_vectorlETClustergR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TCluster>*)
   {
      vector<TCluster> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TCluster>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TCluster>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<TCluster>), DefineBehavior(ptr, ptr),
                  0, &vectorlETClustergR_Dictionary, isa_proxy, 4,
                  sizeof(vector<TCluster>) );
      instance.SetNew(&new_vectorlETClustergR);
      instance.SetNewArray(&newArray_vectorlETClustergR);
      instance.SetDelete(&delete_vectorlETClustergR);
      instance.SetDeleteArray(&deleteArray_vectorlETClustergR);
      instance.SetDestructor(&destruct_vectorlETClustergR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TCluster> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TCluster>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETClustergR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TCluster>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETClustergR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TCluster> : new vector<TCluster>;
   }
   static void *newArray_vectorlETClustergR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TCluster>[nElements] : new vector<TCluster>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETClustergR(void *p) {
      delete ((vector<TCluster>*)p);
   }
   static void deleteArray_vectorlETClustergR(void *p) {
      delete [] ((vector<TCluster>*)p);
   }
   static void destruct_vectorlETClustergR(void *p) {
      typedef vector<TCluster> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TCluster>

namespace ROOT {
   void vectorlETFiducialCutmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETFiducialCutmUgR_Dictionary();
   static void *new_vectorlETFiducialCutmUgR(void *p = 0);
   static void *newArray_vectorlETFiducialCutmUgR(Long_t size, void *p);
   static void delete_vectorlETFiducialCutmUgR(void *p);
   static void deleteArray_vectorlETFiducialCutmUgR(void *p);
   static void destruct_vectorlETFiducialCutmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TFiducialCut*>*)
   {
      vector<TFiducialCut*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TFiducialCut*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TFiducialCut*>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<TFiducialCut*>), DefineBehavior(ptr, ptr),
                  0, &vectorlETFiducialCutmUgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<TFiducialCut*>) );
      instance.SetNew(&new_vectorlETFiducialCutmUgR);
      instance.SetNewArray(&newArray_vectorlETFiducialCutmUgR);
      instance.SetDelete(&delete_vectorlETFiducialCutmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETFiducialCutmUgR);
      instance.SetDestructor(&destruct_vectorlETFiducialCutmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TFiducialCut*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TFiducialCut*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETFiducialCutmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TFiducialCut*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETFiducialCutmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TFiducialCut*> : new vector<TFiducialCut*>;
   }
   static void *newArray_vectorlETFiducialCutmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TFiducialCut*>[nElements] : new vector<TFiducialCut*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETFiducialCutmUgR(void *p) {
      delete ((vector<TFiducialCut*>*)p);
   }
   static void deleteArray_vectorlETFiducialCutmUgR(void *p) {
      delete [] ((vector<TFiducialCut*>*)p);
   }
   static void destruct_vectorlETFiducialCutmUgR(void *p) {
      typedef vector<TFiducialCut*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TFiducialCut*>

namespace ROOT {
   void vectorlETPlanegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETPlanegR_Dictionary();
   static void *new_vectorlETPlanegR(void *p = 0);
   static void *newArray_vectorlETPlanegR(Long_t size, void *p);
   static void delete_vectorlETPlanegR(void *p);
   static void deleteArray_vectorlETPlanegR(void *p);
   static void destruct_vectorlETPlanegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TPlane>*)
   {
      vector<TPlane> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TPlane>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TPlane>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<TPlane>), DefineBehavior(ptr, ptr),
                  0, &vectorlETPlanegR_Dictionary, isa_proxy, 4,
                  sizeof(vector<TPlane>) );
      instance.SetNew(&new_vectorlETPlanegR);
      instance.SetNewArray(&newArray_vectorlETPlanegR);
      instance.SetDelete(&delete_vectorlETPlanegR);
      instance.SetDeleteArray(&deleteArray_vectorlETPlanegR);
      instance.SetDestructor(&destruct_vectorlETPlanegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TPlane> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TPlane>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETPlanegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TPlane>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETPlanegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TPlane> : new vector<TPlane>;
   }
   static void *newArray_vectorlETPlanegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TPlane>[nElements] : new vector<TPlane>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETPlanegR(void *p) {
      delete ((vector<TPlane>*)p);
   }
   static void deleteArray_vectorlETPlanegR(void *p) {
      delete [] ((vector<TPlane>*)p);
   }
   static void destruct_vectorlETPlanegR(void *p) {
      typedef vector<TPlane> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TPlane>

namespace ROOT {
   void vectorlETPlanePropertiescLcLenumCoordinategR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETPlanePropertiescLcLenumCoordinategR_Dictionary();
   static void *new_vectorlETPlanePropertiescLcLenumCoordinategR(void *p = 0);
   static void *newArray_vectorlETPlanePropertiescLcLenumCoordinategR(Long_t size, void *p);
   static void delete_vectorlETPlanePropertiescLcLenumCoordinategR(void *p);
   static void deleteArray_vectorlETPlanePropertiescLcLenumCoordinategR(void *p);
   static void destruct_vectorlETPlanePropertiescLcLenumCoordinategR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TPlaneProperties::enumCoordinate>*)
   {
      vector<TPlaneProperties::enumCoordinate> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TPlaneProperties::enumCoordinate>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TPlaneProperties::enumCoordinate>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<TPlaneProperties::enumCoordinate>), DefineBehavior(ptr, ptr),
                  0, &vectorlETPlanePropertiescLcLenumCoordinategR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TPlaneProperties::enumCoordinate>) );
      instance.SetNew(&new_vectorlETPlanePropertiescLcLenumCoordinategR);
      instance.SetNewArray(&newArray_vectorlETPlanePropertiescLcLenumCoordinategR);
      instance.SetDelete(&delete_vectorlETPlanePropertiescLcLenumCoordinategR);
      instance.SetDeleteArray(&deleteArray_vectorlETPlanePropertiescLcLenumCoordinategR);
      instance.SetDestructor(&destruct_vectorlETPlanePropertiescLcLenumCoordinategR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TPlaneProperties::enumCoordinate> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TPlaneProperties::enumCoordinate>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETPlanePropertiescLcLenumCoordinategR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TPlaneProperties::enumCoordinate>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETPlanePropertiescLcLenumCoordinategR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TPlaneProperties::enumCoordinate> : new vector<TPlaneProperties::enumCoordinate>;
   }
   static void *newArray_vectorlETPlanePropertiescLcLenumCoordinategR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TPlaneProperties::enumCoordinate>[nElements] : new vector<TPlaneProperties::enumCoordinate>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETPlanePropertiescLcLenumCoordinategR(void *p) {
      delete ((vector<TPlaneProperties::enumCoordinate>*)p);
   }
   static void deleteArray_vectorlETPlanePropertiescLcLenumCoordinategR(void *p) {
      delete [] ((vector<TPlaneProperties::enumCoordinate>*)p);
   }
   static void destruct_vectorlETPlanePropertiescLcLenumCoordinategR(void *p) {
      typedef vector<TPlaneProperties::enumCoordinate> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TPlaneProperties::enumCoordinate>

namespace ROOT {
   void vectorlETStringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETStringgR_Dictionary();
   static void *new_vectorlETStringgR(void *p = 0);
   static void *newArray_vectorlETStringgR(Long_t size, void *p);
   static void delete_vectorlETStringgR(void *p);
   static void deleteArray_vectorlETStringgR(void *p);
   static void destruct_vectorlETStringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TString>*)
   {
      vector<TString> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TString>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TString>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<TString>), DefineBehavior(ptr, ptr),
                  0, &vectorlETStringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TString>) );
      instance.SetNew(&new_vectorlETStringgR);
      instance.SetNewArray(&newArray_vectorlETStringgR);
      instance.SetDelete(&delete_vectorlETStringgR);
      instance.SetDeleteArray(&deleteArray_vectorlETStringgR);
      instance.SetDestructor(&destruct_vectorlETStringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TString> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TString>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETStringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TString>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETStringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TString> : new vector<TString>;
   }
   static void *newArray_vectorlETStringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TString>[nElements] : new vector<TString>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETStringgR(void *p) {
      delete ((vector<TString>*)p);
   }
   static void deleteArray_vectorlETStringgR(void *p) {
      delete [] ((vector<TString>*)p);
   }
   static void destruct_vectorlETStringgR(void *p) {
      typedef vector<TString> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TString>

namespace ROOT {
   void vectorlEboolgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEboolgR_Dictionary();
   static void *new_vectorlEboolgR(void *p = 0);
   static void *newArray_vectorlEboolgR(Long_t size, void *p);
   static void delete_vectorlEboolgR(void *p);
   static void deleteArray_vectorlEboolgR(void *p);
   static void destruct_vectorlEboolgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<bool>*)
   {
      vector<bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<bool>", -2, "vectorbool.dll", 0,
                  typeid(vector<bool>), DefineBehavior(ptr, ptr),
                  0, &vectorlEboolgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<bool>) );
      instance.SetNew(&new_vectorlEboolgR);
      instance.SetNewArray(&newArray_vectorlEboolgR);
      instance.SetDelete(&delete_vectorlEboolgR);
      instance.SetDeleteArray(&deleteArray_vectorlEboolgR);
      instance.SetDestructor(&destruct_vectorlEboolgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<bool> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEboolgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<bool>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool> : new vector<bool>;
   }
   static void *newArray_vectorlEboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool>[nElements] : new vector<bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEboolgR(void *p) {
      delete ((vector<bool>*)p);
   }
   static void deleteArray_vectorlEboolgR(void *p) {
      delete [] ((vector<bool>*)p);
   }
   static void destruct_vectorlEboolgR(void *p) {
      typedef vector<bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<bool>

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 4,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<float>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

namespace ROOT {
   void vectorlEpairlEfloatcOfloatgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEpairlEfloatcOfloatgRsPgR_Dictionary();
   static void *new_vectorlEpairlEfloatcOfloatgRsPgR(void *p = 0);
   static void *newArray_vectorlEpairlEfloatcOfloatgRsPgR(Long_t size, void *p);
   static void delete_vectorlEpairlEfloatcOfloatgRsPgR(void *p);
   static void deleteArray_vectorlEpairlEfloatcOfloatgRsPgR(void *p);
   static void destruct_vectorlEpairlEfloatcOfloatgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<pair<float,float> >*)
   {
      vector<pair<float,float> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<pair<float,float> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<pair<float,float> >", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<pair<float,float> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEpairlEfloatcOfloatgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<pair<float,float> >) );
      instance.SetNew(&new_vectorlEpairlEfloatcOfloatgRsPgR);
      instance.SetNewArray(&newArray_vectorlEpairlEfloatcOfloatgRsPgR);
      instance.SetDelete(&delete_vectorlEpairlEfloatcOfloatgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEpairlEfloatcOfloatgRsPgR);
      instance.SetDestructor(&destruct_vectorlEpairlEfloatcOfloatgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<pair<float,float> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<pair<float,float> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEpairlEfloatcOfloatgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<pair<float,float> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEpairlEfloatcOfloatgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<float,float> > : new vector<pair<float,float> >;
   }
   static void *newArray_vectorlEpairlEfloatcOfloatgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<float,float> >[nElements] : new vector<pair<float,float> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEpairlEfloatcOfloatgRsPgR(void *p) {
      delete ((vector<pair<float,float> >*)p);
   }
   static void deleteArray_vectorlEpairlEfloatcOfloatgRsPgR(void *p) {
      delete [] ((vector<pair<float,float> >*)p);
   }
   static void destruct_vectorlEpairlEfloatcOfloatgRsPgR(void *p) {
      typedef vector<pair<float,float> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<pair<float,float> >

namespace ROOT {
   void vectorlEpairlEintcOintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEpairlEintcOintgRsPgR_Dictionary();
   static void *new_vectorlEpairlEintcOintgRsPgR(void *p = 0);
   static void *newArray_vectorlEpairlEintcOintgRsPgR(Long_t size, void *p);
   static void delete_vectorlEpairlEintcOintgRsPgR(void *p);
   static void deleteArray_vectorlEpairlEintcOintgRsPgR(void *p);
   static void destruct_vectorlEpairlEintcOintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<pair<int,int> >*)
   {
      vector<pair<int,int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<pair<int,int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<pair<int,int> >", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<pair<int,int> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEpairlEintcOintgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<pair<int,int> >) );
      instance.SetNew(&new_vectorlEpairlEintcOintgRsPgR);
      instance.SetNewArray(&newArray_vectorlEpairlEintcOintgRsPgR);
      instance.SetDelete(&delete_vectorlEpairlEintcOintgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEpairlEintcOintgRsPgR);
      instance.SetDestructor(&destruct_vectorlEpairlEintcOintgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<pair<int,int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<pair<int,int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEpairlEintcOintgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<pair<int,int> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEpairlEintcOintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<int,int> > : new vector<pair<int,int> >;
   }
   static void *newArray_vectorlEpairlEintcOintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<int,int> >[nElements] : new vector<pair<int,int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEpairlEintcOintgRsPgR(void *p) {
      delete ((vector<pair<int,int> >*)p);
   }
   static void deleteArray_vectorlEpairlEintcOintgRsPgR(void *p) {
      delete [] ((vector<pair<int,int> >*)p);
   }
   static void destruct_vectorlEpairlEintcOintgRsPgR(void *p) {
      typedef vector<pair<int,int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<pair<int,int> >

namespace ROOT {
   void vectorlEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPintgR_Dictionary();
   static void *new_vectorlEunsignedsPintgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPintgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPintgR(void *p);
   static void deleteArray_vectorlEunsignedsPintgR(void *p);
   static void destruct_vectorlEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned int>*)
   {
      vector<unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned int>", -2, "vector.dll", 0,
                  typeid(vector<unsigned int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned int>) );
      instance.SetNew(&new_vectorlEunsignedsPintgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPintgR);
      instance.SetDelete(&delete_vectorlEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPintgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<unsigned int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int> : new vector<unsigned int>;
   }
   static void *newArray_vectorlEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int>[nElements] : new vector<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPintgR(void *p) {
      delete ((vector<unsigned int>*)p);
   }
   static void deleteArray_vectorlEunsignedsPintgR(void *p) {
      delete [] ((vector<unsigned int>*)p);
   }
   static void destruct_vectorlEunsignedsPintgR(void *p) {
      typedef vector<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<unsigned int>

namespace ROOT {
   void vectorlEvectorlETClustermUgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlETClustermUgRsPgR_Dictionary();
   static void *new_vectorlEvectorlETClustermUgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlETClustermUgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlETClustermUgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlETClustermUgRsPgR(void *p);
   static void destruct_vectorlEvectorlETClustermUgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<TCluster*> >*)
   {
      vector<vector<TCluster*> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<TCluster*> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<TCluster*> >", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<TCluster*> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlETClustermUgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<TCluster*> >) );
      instance.SetNew(&new_vectorlEvectorlETClustermUgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlETClustermUgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlETClustermUgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlETClustermUgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlETClustermUgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<TCluster*> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<TCluster*> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlETClustermUgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<TCluster*> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlETClustermUgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<TCluster*> > : new vector<vector<TCluster*> >;
   }
   static void *newArray_vectorlEvectorlETClustermUgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<TCluster*> >[nElements] : new vector<vector<TCluster*> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlETClustermUgRsPgR(void *p) {
      delete ((vector<vector<TCluster*> >*)p);
   }
   static void deleteArray_vectorlEvectorlETClustermUgRsPgR(void *p) {
      delete [] ((vector<vector<TCluster*> >*)p);
   }
   static void destruct_vectorlEvectorlETClustermUgRsPgR(void *p) {
      typedef vector<vector<TCluster*> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<TCluster*> >

namespace ROOT {
   void vectorlEvectorlETClustergRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlETClustergRsPgR_Dictionary();
   static void *new_vectorlEvectorlETClustergRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlETClustergRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlETClustergRsPgR(void *p);
   static void deleteArray_vectorlEvectorlETClustergRsPgR(void *p);
   static void destruct_vectorlEvectorlETClustergRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<TCluster> >*)
   {
      vector<vector<TCluster> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<TCluster> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<TCluster> >", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<TCluster> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlETClustergRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<TCluster> >) );
      instance.SetNew(&new_vectorlEvectorlETClustergRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlETClustergRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlETClustergRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlETClustergRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlETClustergRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<TCluster> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<TCluster> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlETClustergRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<TCluster> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlETClustergRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<TCluster> > : new vector<vector<TCluster> >;
   }
   static void *newArray_vectorlEvectorlETClustergRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<TCluster> >[nElements] : new vector<vector<TCluster> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlETClustergRsPgR(void *p) {
      delete ((vector<vector<TCluster> >*)p);
   }
   static void deleteArray_vectorlEvectorlETClustergRsPgR(void *p) {
      delete [] ((vector<vector<TCluster> >*)p);
   }
   static void destruct_vectorlEvectorlETClustergRsPgR(void *p) {
      typedef vector<vector<TCluster> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<TCluster> >

namespace ROOT {
   void vectorlEvectorlEintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEintgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEintgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEintgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p);
   static void destruct_vectorlEvectorlEintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<int> >*)
   {
      vector<vector<int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<int> >", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<int> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEintgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<int> >) );
      instance.SetNew(&new_vectorlEvectorlEintgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEintgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEintgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEintgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEintgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEintgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<int> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> > : new vector<vector<int> >;
   }
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> >[nElements] : new vector<vector<int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEintgRsPgR(void *p) {
      delete ((vector<vector<int> >*)p);
   }
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p) {
      delete [] ((vector<vector<int> >*)p);
   }
   static void destruct_vectorlEvectorlEintgRsPgR(void *p) {
      typedef vector<vector<int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<int> >

/********************************************************
* TEventDict.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTEventDict();

extern "C" void G__set_cpp_environmentTEventDict() {
  G__cpp_reset_tagtableTEventDict();
}
#include <new>
extern "C" int G__cpp_dllrevTEventDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TPlaneProperties */
static int G__TEventDict_275_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPlaneProperties* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPlaneProperties[n];
     } else {
       p = new((void*) gvp) TPlaneProperties[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPlaneProperties;
     } else {
       p = new((void*) gvp) TPlaneProperties;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TPlaneProperties));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TPlaneProperties::startsWith(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) TPlaneProperties::getDetNo((TPlaneProperties::enumCoordinate) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TPlaneProperties::getStripDistance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) TPlaneProperties::getNChannelsSilicon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) TPlaneProperties::getNChannelsDiamond());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) TPlaneProperties::getNChannels((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) TPlaneProperties::getMaxSignalHeightSilicon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) TPlaneProperties::getMaxSignalHeightDiamond());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPlaneProperties::getMaxSignalHeight((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) TPlaneProperties::getPlaneNumber((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) TPlaneProperties::getNSiliconPlanes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) TPlaneProperties::getNPlanes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) TPlaneProperties::getNSiliconDetectors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) TPlaneProperties::getDetDiamond());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) TPlaneProperties::getDiamondPlane());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<UInt_t>* pobj;
         vector<UInt_t> xobj = TPlaneProperties::getSiliconPlaneVector();
         pobj = new vector<UInt_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) TPlaneProperties::getNDetectors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) TPlaneProperties::getMaxTransparentClusterSize((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = TPlaneProperties::getCoordinateString((TPlaneProperties::enumCoordinate) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = TPlaneProperties::getDetectortypeString((TPlaneProperties::enumDetectorType) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = TPlaneProperties::getDetectorNameString((UInt_t) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = TPlaneProperties::getStringForDetector((int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TPlaneProperties::isSiliconDetector((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TPlaneProperties::isSiliconPlane((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TPlaneProperties::isDiamondDetector((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TPlaneProperties::isDiamondPlane((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TPlaneProperties::isSaturated((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TPlaneProperties::AreAllSiliconPlanes(*((vector<UInt_t>*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) TPlaneProperties::GetMinInvalidSignal((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TPlaneProperties::IsValidChannel((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPlaneProperties::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPlaneProperties::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TPlaneProperties::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPlaneProperties::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPlaneProperties*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPlaneProperties::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPlaneProperties::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPlaneProperties::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_275_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPlaneProperties::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TEventDict_275_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TPlaneProperties* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TPlaneProperties(*(TPlaneProperties*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TPlaneProperties));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPlaneProperties G__TTPlaneProperties;
static int G__TEventDict_275_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TPlaneProperties*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TPlaneProperties*) (soff+(sizeof(TPlaneProperties)*i)))->~G__TTPlaneProperties();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TPlaneProperties*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TPlaneProperties*) (soff))->~G__TTPlaneProperties();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TEventDict_275_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPlaneProperties* dest = (TPlaneProperties*) G__getstructoffset();
   *dest = *(TPlaneProperties*) libp->para[0].ref;
   const TPlaneProperties& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCluster */
static int G__TEventDict_309_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) TCluster::TCLUSTER_REVISION());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCluster[n];
     } else {
       p = new((void*) gvp) TCluster[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCluster;
     } else {
       p = new((void*) gvp) TCluster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCluster(
(int) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]), (float) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) TCluster(
(int) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]), (float) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCluster(
(int) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TCluster(
(int) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCluster(
(int) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TCluster(
(int) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCluster(
(int) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TCluster(
(int) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCluster((int) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TCluster((int) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TCluster(*(TCluster*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TCluster(*(TCluster*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TCluster& obj = ((TCluster*) G__getstructoffset())->operator=(*(TCluster*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCluster*) G__getstructoffset())->addChannel(
(UInt_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (bool) G__int(libp->para[6]), (bool) G__int(libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getPosition((bool) G__int(libp->para[0]), (TCluster::calculationMode_t) G__int(libp->para[1])
, (TH1F*) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getPosition((bool) G__int(libp->para[0]), (TCluster::calculationMode_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getPosition((bool) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCluster*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TCluster*) G__getstructoffset())->isLumpyCluster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TCluster*) G__getstructoffset())->isGoldenGateCluster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TCluster*) G__getstructoffset())->hasSaturatedChannels());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TCluster*) G__getstructoffset())->getDetector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TCluster* pobj;
         TCluster xobj = ((TCluster*) G__getstructoffset())->getCrossTalkCorrectedCluster((Float_t) G__double(libp->para[0]));
         pobj = new TCluster(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getCharge((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getCharge((bool) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getCharge());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getCharge((UInt_t) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getCharge((UInt_t) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getCharge((UInt_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getCharge((int) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getCharge((int) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getCharge((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getPositiveCharge((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getPositiveCharge((bool) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getPositiveCharge());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getPositiveCharge((int) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getPositiveCharge((int) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getPositiveCharge((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getPositiveCharge((UInt_t) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getPositiveCharge((UInt_t) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getPositiveCharge((UInt_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getTransparentCharge((UInt_t) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 103, (long) ((TCluster*) G__getstructoffset())->hasNegativeCharge(*(Float_t*) G__Floatref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, (bool) G__int(libp->para[2]), (bool) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((TCluster*) G__getstructoffset())->hasNegativeCharge(*(Float_t*) G__Floatref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, (bool) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((TCluster*) G__getstructoffset())->hasNegativeCharge(*(Float_t*) G__Floatref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCluster*) G__getstructoffset())->setPositionCalulation((TCluster::calculationMode_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TCluster*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TCluster*) G__getstructoffset())->seedSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCluster*) G__getstructoffset())->UpdateHighestSignalChannel();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TCluster*) G__getstructoffset())->getHighestSignalChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TCluster*) G__getstructoffset())->GetHighestSignalChannelTransparentCluster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 104, (long) ((TCluster*) G__getstructoffset())->getHighestSignalNeighbourChannel((UInt_t) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 104, (long) ((TCluster*) G__getstructoffset())->getHighestSignalNeighbourChannel((UInt_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 104, (long) ((TCluster*) G__getstructoffset())->getHighestSignalNeighbourClusterPosition((UInt_t) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 104, (long) ((TCluster*) G__getstructoffset())->getHighestSignalNeighbourClusterPosition((UInt_t) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 104, (long) ((TCluster*) G__getstructoffset())->getHighestSignalNeighbourClusterPosition((UInt_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getChargeWeightedMean((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getChargeWeightedMean((bool) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getEtaPostion((bool) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getEtaPostion());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getPositionCorEta((bool) G__int(libp->para[0]), (TH1F*) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getPositionCorEta((bool) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCluster*) G__getstructoffset())->checkCluster();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TCluster*) G__getstructoffset())->isSeed((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TCluster*) G__getstructoffset())->isHit((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getSignalOfChannel((UInt_t) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getSignalOfChannel((UInt_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TCluster*) G__getstructoffset())->getSmallestChannelNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TCluster*) G__getstructoffset())->getHighestChannelNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getHighestSignal((bool) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getHighestSignal());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getSignal((UInt_t) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getSignal((UInt_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getSNR((UInt_t) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getSNR((UInt_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getCMN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getPedestalMean((UInt_t) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getPedestalMean((UInt_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getPedestalSigma((UInt_t) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getPedestalSigma((UInt_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TCluster*) G__getstructoffset())->getAdcValue((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TCluster*) G__getstructoffset())->getHighestHitClusterPosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TCluster*) G__getstructoffset())->getHighestHitClusterPositionTransparentCluster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TCluster*) G__getstructoffset())->getClusterPosition((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TCluster*) G__getstructoffset())->getChannel((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TCluster*) G__getstructoffset())->getFirstHitChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TCluster*) G__getstructoffset())->getLastHitChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TCluster*) G__getstructoffset())->getHitSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TCluster*) G__getstructoffset())->getSeedSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCluster*) G__getstructoffset())->setHitSigma((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCluster*) G__getstructoffset())->setSeedSigma((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TCluster*) G__getstructoffset())->isSaturatedCluster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TCluster*) G__getstructoffset())->isBadChannelCluster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TCluster*) G__getstructoffset())->isScreened());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TCluster*) G__getstructoffset())->isScreened((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getHighest2Centroid((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getHighest2Centroid((bool) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getHighest2Centroid());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TCluster*) G__getstructoffset())->Print((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TCluster*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = TCluster::Intent((UInt_t) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getReversedEta((bool) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getReversedEta());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getReversedEta(*(Int_t*) G__Intref(&libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getReversedEta(*(Int_t*) G__Intref(&libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getEta((bool) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getEta());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getEta(*(Int_t*) G__Intref(&libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getEta(*(Int_t*) G__Intref(&libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getEta((UInt_t) G__int(libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, (bool) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getEta((UInt_t) G__int(libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TCluster*) G__getstructoffset())->getClusterSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCluster*) G__getstructoffset())->setVerbosity((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getLeftEta((bool) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getLeftEta());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getRightEta((bool) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->getRightEta());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) TCluster::getValueOfHisto((Float_t) G__double(libp->para[0]), (TH1F*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TCluster*) G__getstructoffset())->getEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TCluster*) G__getstructoffset())->hasInvalidReadout());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TCluster*) G__getstructoffset())->IsTransparentCluster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TCluster*) G__getstructoffset())->GetTransparentHitPosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCluster*) G__getstructoffset())->SetTransparentCluster((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCluster*) G__getstructoffset())->SetTransparentClusterSize((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TCluster*) G__getstructoffset())->GetTransparentClusterSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TCluster*) G__getstructoffset())->GetMaxTransparentClusterSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((TCluster*) G__getstructoffset())->getTransparentClusterPosition((UInt_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((TCluster*) G__getstructoffset())->getTransparentClusterPosition());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TCluster*) G__getstructoffset())->IsValidTransparentClusterPosition((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_309_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCluster G__TTCluster;
static int G__TEventDict_309_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCluster*) (soff+(sizeof(TCluster)*i)))->~G__TTCluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCluster*) (soff))->~G__TTCluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* deque<bool,allocator<bool> > */
static int G__TEventDict_315_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<bool,allocator<bool> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<bool,allocator<bool> >[n];
     } else {
       p = new((void*) gvp) deque<bool,allocator<bool> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<bool,allocator<bool> >;
     } else {
       p = new((void*) gvp) deque<bool,allocator<bool> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_315_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<bool,allocator<bool> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<bool,allocator<bool> >((deque<bool,allocator<bool> >::size_type) G__int(libp->para[0]), *(bool*) G__Boolref(&libp->para[1]));
     } else {
       p = new((void*) gvp) deque<bool,allocator<bool> >((deque<bool,allocator<bool> >::size_type) G__int(libp->para[0]), *(bool*) G__Boolref(&libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<bool,allocator<bool> >((deque<bool,allocator<bool> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) deque<bool,allocator<bool> >((deque<bool,allocator<bool> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_315_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<bool,allocator<bool> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<bool,allocator<bool> >((const bool*) G__int(libp->para[0]), (const bool*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) deque<bool,allocator<bool> >((const bool*) G__int(libp->para[0]), (const bool*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_315_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<bool,allocator<bool> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<bool,allocator<bool> >(*((deque<bool,allocator<bool> >::const_iterator*) G__int(libp->para[0])), *((deque<bool,allocator<bool> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) deque<bool,allocator<bool> >(*((deque<bool,allocator<bool> >::const_iterator*) G__int(libp->para[0])), *((deque<bool,allocator<bool> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_315_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<bool,allocator<bool> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<bool,allocator<bool> >(*(deque<bool,allocator<bool> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) deque<bool,allocator<bool> >(*(deque<bool,allocator<bool> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_315_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<bool,allocator<bool> >& obj = ((deque<bool,allocator<bool> >*) G__getstructoffset())->operator=(*(deque<bool,allocator<bool> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_315_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<bool,allocator<bool> >::iterator* pobj;
         deque<bool,allocator<bool> >::iterator xobj = ((deque<bool,allocator<bool> >*) G__getstructoffset())->begin();
         pobj = new deque<bool,allocator<bool> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_315_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<bool,allocator<bool> >::iterator* pobj;
         deque<bool,allocator<bool> >::iterator xobj = ((deque<bool,allocator<bool> >*) G__getstructoffset())->end();
         pobj = new deque<bool,allocator<bool> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_315_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<bool,allocator<bool> >::reverse_iterator* pobj;
         deque<bool,allocator<bool> >::reverse_iterator xobj = ((deque<bool,allocator<bool> >*) G__getstructoffset())->rbegin();
         pobj = new deque<bool,allocator<bool> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_315_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<bool,allocator<bool> >::reverse_iterator* pobj;
         deque<bool,allocator<bool> >::reverse_iterator xobj = ((deque<bool,allocator<bool> >*) G__getstructoffset())->rend();
         pobj = new deque<bool,allocator<bool> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_315_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const deque<bool,allocator<bool> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_315_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const deque<bool,allocator<bool> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_315_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((deque<bool,allocator<bool> >*) G__getstructoffset())->resize((deque<bool,allocator<bool> >::size_type) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((deque<bool,allocator<bool> >*) G__getstructoffset())->resize((deque<bool,allocator<bool> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_315_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const deque<bool,allocator<bool> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_315_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const bool& obj = ((deque<bool,allocator<bool> >*) G__getstructoffset())->operator[]((deque<bool,allocator<bool> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'g', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_315_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const bool& obj = ((deque<bool,allocator<bool> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'g', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_315_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const bool& obj = ((deque<bool,allocator<bool> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'g', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_315_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<bool,allocator<bool> >*) G__getstructoffset())->push_front(*(bool*) G__Boolref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_315_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<bool,allocator<bool> >*) G__getstructoffset())->push_back(*(bool*) G__Boolref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_315_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<bool,allocator<bool> >::iterator* pobj;
         deque<bool,allocator<bool> >::iterator xobj = ((deque<bool,allocator<bool> >*) G__getstructoffset())->insert(*((deque<bool,allocator<bool> >::iterator*) G__int(libp->para[0])), *(bool*) G__Boolref(&libp->para[1]));
         pobj = new deque<bool,allocator<bool> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_315_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<bool,allocator<bool> >*) G__getstructoffset())->insert(*((deque<bool,allocator<bool> >::iterator*) G__int(libp->para[0])), (deque<bool,allocator<bool> >::size_type) G__int(libp->para[1])
, *(bool*) G__Boolref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_315_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<bool,allocator<bool> >*) G__getstructoffset())->pop_front();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_315_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<bool,allocator<bool> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_315_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<bool,allocator<bool> >::iterator* pobj;
         deque<bool,allocator<bool> >::iterator xobj = ((deque<bool,allocator<bool> >*) G__getstructoffset())->erase(*((deque<bool,allocator<bool> >::iterator*) G__int(libp->para[0])));
         pobj = new deque<bool,allocator<bool> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_315_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<bool,allocator<bool> >::iterator* pobj;
         deque<bool,allocator<bool> >::iterator xobj = ((deque<bool,allocator<bool> >*) G__getstructoffset())->erase(*((deque<bool,allocator<bool> >::iterator*) G__int(libp->para[0])), *((deque<bool,allocator<bool> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<bool,allocator<bool> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_315_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<bool,allocator<bool> >*) G__getstructoffset())->swap(*(deque<bool,allocator<bool> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_315_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<bool,allocator<bool> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef deque<bool,allocator<bool> > G__TdequelEboolcOallocatorlEboolgRsPgR;
static int G__TEventDict_315_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (deque<bool,allocator<bool> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((deque<bool,allocator<bool> >*) (soff+(sizeof(deque<bool,allocator<bool> >)*i)))->~G__TdequelEboolcOallocatorlEboolgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (deque<bool,allocator<bool> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((deque<bool,allocator<bool> >*) (soff))->~G__TdequelEboolcOallocatorlEboolgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPlane */
static int G__TEventDict_318_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPlane[n];
     } else {
       p = new((void*) gvp) TPlane[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPlane;
     } else {
       p = new((void*) gvp) TPlane;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPlane(
(UInt_t) G__int(libp->para[0]), *((vector<TCluster>*) G__int(libp->para[1]))
, *((vector<TCluster>*) G__int(libp->para[2])), (TPlaneProperties::enumDetectorType) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TPlane(
(UInt_t) G__int(libp->para[0]), *((vector<TCluster>*) G__int(libp->para[1]))
, *((vector<TCluster>*) G__int(libp->para[2])), (TPlaneProperties::enumDetectorType) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPlane(
(UInt_t) G__int(libp->para[0]), *((vector<TCluster>*) G__int(libp->para[1]))
, *((vector<TCluster>*) G__int(libp->para[2])));
     } else {
       p = new((void*) gvp) TPlane(
(UInt_t) G__int(libp->para[0]), *((vector<TCluster>*) G__int(libp->para[1]))
, *((vector<TCluster>*) G__int(libp->para[2])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPlane(
(UInt_t) G__int(libp->para[0]), *((vector<TCluster>*) G__int(libp->para[1]))
, (TPlaneProperties::enumDetectorType) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TPlane(
(UInt_t) G__int(libp->para[0]), *((vector<TCluster>*) G__int(libp->para[1]))
, (TPlaneProperties::enumDetectorType) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPlane((UInt_t) G__int(libp->para[0]), *((vector<TCluster>*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) TPlane((UInt_t) G__int(libp->para[0]), *((vector<TCluster>*) G__int(libp->para[1])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TPlane(*(TPlane*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TPlane(*(TPlane*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TPlane& obj = ((TPlane*) G__getstructoffset())->operator=(*(TPlane*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TCluster* pobj;
         TCluster xobj = ((TPlane*) G__getstructoffset())->getCluster((TPlaneProperties::enumCoordinate) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
         pobj = new TCluster(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TCluster* pobj;
         TCluster xobj = ((TPlane*) G__getstructoffset())->getXCluster((UInt_t) G__int(libp->para[0]));
         pobj = new TCluster(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TCluster* pobj;
         TCluster xobj = ((TPlane*) G__getstructoffset())->getYCluster((UInt_t) G__int(libp->para[0]));
         pobj = new TCluster(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 102, (double) ((TPlane*) G__getstructoffset())->getXPosition((UInt_t) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (TCluster::calculationMode_t) G__int(libp->para[2]), (TH1F*) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 102, (double) ((TPlane*) G__getstructoffset())->getXPosition((UInt_t) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (TCluster::calculationMode_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 102, (double) ((TPlane*) G__getstructoffset())->getXPosition((UInt_t) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 102, (double) ((TPlane*) G__getstructoffset())->getYPosition((UInt_t) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (TCluster::calculationMode_t) G__int(libp->para[2]), (TH1F*) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 102, (double) ((TPlane*) G__getstructoffset())->getYPosition((UInt_t) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (TCluster::calculationMode_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 102, (double) ((TPlane*) G__getstructoffset())->getYPosition((UInt_t) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 102, (double) ((TPlane*) G__getstructoffset())->getPosition((TPlaneProperties::enumCoordinate) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (bool) G__int(libp->para[2]), (TCluster::calculationMode_t) G__int(libp->para[3])
, (TH1F*) G__int(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 102, (double) ((TPlane*) G__getstructoffset())->getPosition((TPlaneProperties::enumCoordinate) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (bool) G__int(libp->para[2]), (TCluster::calculationMode_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 102, (double) ((TPlane*) G__getstructoffset())->getPosition((TPlaneProperties::enumCoordinate) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (bool) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TPlane*) G__getstructoffset())->getNXClusters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TPlane*) G__getstructoffset())->getNYClusters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TPlane*) G__getstructoffset())->isValidPlane());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPlane*) G__getstructoffset())->getDetectorType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPlane*) G__getstructoffset())->setDetectorType((TPlaneProperties::enumDetectorType) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TPlane*) G__getstructoffset())->Print((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TPlane*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPlane*) G__getstructoffset())->SetClusters(*((vector<TCluster>*) G__int(libp->para[0])), *((vector<TCluster>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPlane*) G__getstructoffset())->SetXClusters(*((vector<TCluster>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPlane*) G__getstructoffset())->SetYClusters(*((vector<TCluster>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TPlane*) G__getstructoffset())->hasInvalidReadout());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPlane::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPlane::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TPlane::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPlane::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPlane*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPlane::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPlane::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPlane::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_318_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPlane::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPlane G__TTPlane;
static int G__TEventDict_318_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TPlane*) (soff+(sizeof(TPlane)*i)))->~G__TTPlane();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TPlane*) (soff))->~G__TTPlane();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<TCluster,allocator<TCluster> > */
static int G__TEventDict_320_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TCluster,allocator<TCluster> >::reference obj = ((vector<TCluster,allocator<TCluster> >*) G__getstructoffset())->at((vector<TCluster,allocator<TCluster> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TCluster,allocator<TCluster> >::const_reference obj = ((const vector<TCluster,allocator<TCluster> >*) G__getstructoffset())->at((vector<TCluster,allocator<TCluster> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TCluster,allocator<TCluster> >::iterator* pobj;
         vector<TCluster,allocator<TCluster> >::iterator xobj = ((vector<TCluster,allocator<TCluster> >*) G__getstructoffset())->begin();
         pobj = new vector<TCluster,allocator<TCluster> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TCluster,allocator<TCluster> >::iterator* pobj;
         vector<TCluster,allocator<TCluster> >::iterator xobj = ((vector<TCluster,allocator<TCluster> >*) G__getstructoffset())->end();
         pobj = new vector<TCluster,allocator<TCluster> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TCluster,allocator<TCluster> >::reverse_iterator* pobj;
         vector<TCluster,allocator<TCluster> >::reverse_iterator xobj = ((vector<TCluster,allocator<TCluster> >*) G__getstructoffset())->rbegin();
         pobj = new vector<TCluster,allocator<TCluster> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TCluster,allocator<TCluster> >::reverse_iterator* pobj;
         vector<TCluster,allocator<TCluster> >::reverse_iterator xobj = ((vector<TCluster,allocator<TCluster> >*) G__getstructoffset())->rend();
         pobj = new vector<TCluster,allocator<TCluster> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TCluster,allocator<TCluster> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TCluster,allocator<TCluster> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCluster,allocator<TCluster> >*) G__getstructoffset())->resize((vector<TCluster,allocator<TCluster> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCluster,allocator<TCluster> >*) G__getstructoffset())->resize((vector<TCluster,allocator<TCluster> >::size_type) G__int(libp->para[0]), *((TCluster*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TCluster,allocator<TCluster> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<TCluster,allocator<TCluster> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TCluster,allocator<TCluster> >::reference obj = ((vector<TCluster,allocator<TCluster> >*) G__getstructoffset())->operator[]((vector<TCluster,allocator<TCluster> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TCluster,allocator<TCluster> >::const_reference obj = ((const vector<TCluster,allocator<TCluster> >*) G__getstructoffset())->operator[]((vector<TCluster,allocator<TCluster> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TCluster,allocator<TCluster> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TCluster,allocator<TCluster> >[n];
     } else {
       p = new((void*) gvp) vector<TCluster,allocator<TCluster> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TCluster,allocator<TCluster> >;
     } else {
       p = new((void*) gvp) vector<TCluster,allocator<TCluster> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TCluster,allocator<TCluster> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TCluster,allocator<TCluster> >((vector<TCluster,allocator<TCluster> >::size_type) G__int(libp->para[0]), *(TCluster*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<TCluster,allocator<TCluster> >((vector<TCluster,allocator<TCluster> >::size_type) G__int(libp->para[0]), *(TCluster*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TCluster,allocator<TCluster> >((vector<TCluster,allocator<TCluster> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<TCluster,allocator<TCluster> >((vector<TCluster,allocator<TCluster> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TCluster,allocator<TCluster> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TCluster,allocator<TCluster> >(*(vector<TCluster,allocator<TCluster> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<TCluster,allocator<TCluster> >(*(vector<TCluster,allocator<TCluster> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TCluster,allocator<TCluster> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TCluster,allocator<TCluster> >(*((vector<TCluster,allocator<TCluster> >::const_iterator*) G__int(libp->para[0])), *((vector<TCluster,allocator<TCluster> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<TCluster,allocator<TCluster> >(*((vector<TCluster,allocator<TCluster> >::const_iterator*) G__int(libp->para[0])), *((vector<TCluster,allocator<TCluster> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TCluster,allocator<TCluster> >& obj = ((vector<TCluster,allocator<TCluster> >*) G__getstructoffset())->operator=(*(vector<TCluster,allocator<TCluster> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCluster,allocator<TCluster> >*) G__getstructoffset())->reserve((vector<TCluster,allocator<TCluster> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TCluster& obj = ((vector<TCluster,allocator<TCluster> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TCluster& obj = ((vector<TCluster,allocator<TCluster> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCluster,allocator<TCluster> >*) G__getstructoffset())->push_back(*(TCluster*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCluster,allocator<TCluster> >*) G__getstructoffset())->swap(*(vector<TCluster,allocator<TCluster> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TCluster,allocator<TCluster> >::iterator* pobj;
         vector<TCluster,allocator<TCluster> >::iterator xobj = ((vector<TCluster,allocator<TCluster> >*) G__getstructoffset())->insert(*((vector<TCluster,allocator<TCluster> >::iterator*) G__int(libp->para[0])), *(TCluster*) libp->para[1].ref);
         pobj = new vector<TCluster,allocator<TCluster> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCluster,allocator<TCluster> >*) G__getstructoffset())->insert(*((vector<TCluster,allocator<TCluster> >::iterator*) G__int(libp->para[0])), *((vector<TCluster,allocator<TCluster> >::const_iterator*) G__int(libp->para[1]))
, *((vector<TCluster,allocator<TCluster> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCluster,allocator<TCluster> >*) G__getstructoffset())->insert(*((vector<TCluster,allocator<TCluster> >::iterator*) G__int(libp->para[0])), (vector<TCluster,allocator<TCluster> >::size_type) G__int(libp->para[1])
, *(TCluster*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCluster,allocator<TCluster> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCluster,allocator<TCluster> >*) G__getstructoffset())->erase(*((vector<TCluster,allocator<TCluster> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCluster,allocator<TCluster> >*) G__getstructoffset())->erase(*((vector<TCluster,allocator<TCluster> >::iterator*) G__int(libp->para[0])), *((vector<TCluster,allocator<TCluster> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_320_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCluster,allocator<TCluster> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<TCluster,allocator<TCluster> > G__TvectorlETClustercOallocatorlETClustergRsPgR;
static int G__TEventDict_320_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<TCluster,allocator<TCluster> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<TCluster,allocator<TCluster> >*) (soff+(sizeof(vector<TCluster,allocator<TCluster> >)*i)))->~G__TvectorlETClustercOallocatorlETClustergRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<TCluster,allocator<TCluster> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<TCluster,allocator<TCluster> >*) (soff))->~G__TvectorlETClustercOallocatorlETClustergRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDetectorAlignment */
static int G__TEventDict_323_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDetectorAlignment* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDetectorAlignment[n];
     } else {
       p = new((void*) gvp) TDetectorAlignment[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDetectorAlignment;
     } else {
       p = new((void*) gvp) TDetectorAlignment;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TDetectorAlignment));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TDetectorAlignment& obj = ((TDetectorAlignment*) G__getstructoffset())->operator=(*(TDetectorAlignment*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TDetectorAlignment*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TDetectorAlignment*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TDetectorAlignment*) G__getstructoffset())->GetXOffset((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TDetectorAlignment*) G__getstructoffset())->GetYOffset((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TDetectorAlignment*) G__getstructoffset())->GetZOffset((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDetectorAlignment*) G__getstructoffset())->SetXOffset((UInt_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDetectorAlignment*) G__getstructoffset())->SetYOffset((UInt_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDetectorAlignment*) G__getstructoffset())->SetZOffset((UInt_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDetectorAlignment*) G__getstructoffset())->AddToXOffset((UInt_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDetectorAlignment*) G__getstructoffset())->AddToYOffset((UInt_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDetectorAlignment*) G__getstructoffset())->AddToZOffset((UInt_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TDetectorAlignment*) G__getstructoffset())->GetPhiXOffset((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TDetectorAlignment*) G__getstructoffset())->GetPhiYOffset((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDetectorAlignment*) G__getstructoffset())->AddToPhiXOffset((UInt_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDetectorAlignment*) G__getstructoffset())->AddToPhiYOffset((UInt_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TDetectorAlignment*) G__getstructoffset())->GetLastXOffset((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TDetectorAlignment*) G__getstructoffset())->GetLastYOffset((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TDetectorAlignment*) G__getstructoffset())->GetLastPhiXOffset((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TDetectorAlignment*) G__getstructoffset())->GetLastPhiYOffset((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((TDetectorAlignment*) G__getstructoffset())->GetXOffsetHistory((UInt_t) G__int(libp->para[0]));
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((TDetectorAlignment*) G__getstructoffset())->GetYOffsetHistory((UInt_t) G__int(libp->para[0]));
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((TDetectorAlignment*) G__getstructoffset())->GetZOffsetHistory((UInt_t) G__int(libp->para[0]));
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((TDetectorAlignment*) G__getstructoffset())->GetPhiXOffsetHistory((UInt_t) G__int(libp->para[0]));
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((TDetectorAlignment*) G__getstructoffset())->GetPhiYOffsetHistory((UInt_t) G__int(libp->para[0]));
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TDetectorAlignment*) G__getstructoffset())->PrintXOffset((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TDetectorAlignment*) G__getstructoffset())->PrintYOffset((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TDetectorAlignment*) G__getstructoffset())->PrintZOffset((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TDetectorAlignment*) G__getstructoffset())->PrintPhiXOffset((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TDetectorAlignment*) G__getstructoffset())->PrintPhiYOffset((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TDetectorAlignment*) G__getstructoffset())->PrintResolution((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         string* pobj;
         string xobj = ((TDetectorAlignment*) G__getstructoffset())->PrintResults((UInt_t) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         string* pobj;
         string xobj = ((TDetectorAlignment*) G__getstructoffset())->PrintResults();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TDetectorAlignment*) G__getstructoffset())->ResetAlignment((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TDetectorAlignment*) G__getstructoffset())->ResetAlignment();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TDetectorAlignment*) G__getstructoffset())->getVerbosity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDetectorAlignment*) G__getstructoffset())->setVerbosity((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TDetectorAlignment*) G__getstructoffset())->getXResolution((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TDetectorAlignment*) G__getstructoffset())->getZResolution((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDetectorAlignment*) G__getstructoffset())->setXResolution((Double_t) G__double(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDetectorAlignment*) G__getstructoffset())->setResolution((Double_t) G__double(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (TPlaneProperties::enumCoordinate) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TDetectorAlignment*) G__getstructoffset())->getXMean((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDetectorAlignment*) G__getstructoffset())->setXMean((Double_t) G__double(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TDetectorAlignment*) G__getstructoffset())->getYResolution((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDetectorAlignment*) G__getstructoffset())->setYResolution((Double_t) G__double(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TDetectorAlignment*) G__getstructoffset())->getResolution((UInt_t) G__int(libp->para[0]), (TPlaneProperties::enumCoordinate) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TDetectorAlignment*) G__getstructoffset())->getYMean((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDetectorAlignment*) G__getstructoffset())->setYMean((Double_t) G__double(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TDetectorAlignment*) G__getstructoffset())->getNUsedEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDetectorAlignment*) G__getstructoffset())->setNUsedEvents((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((TDetectorAlignment*) G__getstructoffset())->isPreAligned((Float_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((TDetectorAlignment*) G__getstructoffset())->isPreAligned((Float_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((TDetectorAlignment*) G__getstructoffset())->isPreAligned());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDetectorAlignment*) G__getstructoffset())->addEventIntervall((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDetectorAlignment*) G__getstructoffset())->setAlignmentTrainingTrackFraction((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TDetectorAlignment*) G__getstructoffset())->getAlignmentTrainingTrackFraction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDetectorAlignment*) G__getstructoffset())->setDiamondDate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDetectorAlignment*) G__getstructoffset())->setSiliconDate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDetectorAlignment*) G__getstructoffset())->setRunNumber((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDetectorAlignment*) G__getstructoffset())->setDiaChi2((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TDetectorAlignment*) G__getstructoffset())->getDiaChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDetectorAlignment*) G__getstructoffset())->setNDiamondAlignmentEvents((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TDetectorAlignment*) G__getstructoffset())->getDiamondAlignmentEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TDetectorAlignment*) G__getstructoffset())->getLastUpdateTimeAsString();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TDetectorAlignment::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDetectorAlignment::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TDetectorAlignment::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TDetectorAlignment::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDetectorAlignment*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDetectorAlignment::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDetectorAlignment::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDetectorAlignment::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_323_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDetectorAlignment::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TEventDict_323_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TDetectorAlignment* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TDetectorAlignment(*(TDetectorAlignment*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TDetectorAlignment));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDetectorAlignment G__TTDetectorAlignment;
static int G__TEventDict_323_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TDetectorAlignment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TDetectorAlignment*) (soff+(sizeof(TDetectorAlignment)*i)))->~G__TTDetectorAlignment();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TDetectorAlignment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TDetectorAlignment*) (soff))->~G__TTDetectorAlignment();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TEvent */
static int G__TEventDict_324_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEvent((UInt_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TEvent((UInt_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TEvent[n];
       } else {
         p = new((void*) gvp) TEvent[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TEvent;
       } else {
         p = new((void*) gvp) TEvent;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TEvent(*(TEvent*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TEvent(*(TEvent*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TEvent& obj = ((TEvent*) G__getstructoffset())->operator=(*(TEvent*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TPlane* pobj;
         TPlane xobj = ((TEvent*) G__getstructoffset())->getPlane((int) G__int(libp->para[0]));
         pobj = new TPlane(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TEvent*) G__getstructoffset())->addPlane(*((TPlane*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TEvent*) G__getstructoffset())->addPlane(*((TPlane*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TEvent*) G__getstructoffset())->getNXClusters((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TEvent*) G__getstructoffset())->getNYClusters((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TEvent*) G__getstructoffset())->getNClusters((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TCluster* pobj;
         TCluster xobj = ((TEvent*) G__getstructoffset())->getCluster((UInt_t) G__int(libp->para[0]), (TPlaneProperties::enumCoordinate) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
         pobj = new TCluster(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TCluster* pobj;
         TCluster xobj = ((TEvent*) G__getstructoffset())->getCluster((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
         pobj = new TCluster(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TEvent*) G__getstructoffset())->getClusterSize((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TEvent*) G__getstructoffset())->getClusterSeedSize((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TEvent*) G__getstructoffset())->getClusterSize((UInt_t) G__int(libp->para[0]), (TPlaneProperties::enumCoordinate) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 102, (double) ((TEvent*) G__getstructoffset())->getPosition((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (bool) G__int(libp->para[2]), (TCluster::calculationMode_t) G__int(libp->para[3])
, (TH1F*) G__int(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 102, (double) ((TEvent*) G__getstructoffset())->getPosition((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (bool) G__int(libp->para[2]), (TCluster::calculationMode_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 102, (double) ((TEvent*) G__getstructoffset())->getPosition((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (bool) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TEvent*) G__getstructoffset())->getNPlanes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TEvent*) G__getstructoffset())->isValidSiliconEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TEvent*) G__getstructoffset())->isMasked());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TEvent*) G__getstructoffset())->getEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEvent*) G__getstructoffset())->setVerbosity((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEvent*) G__getstructoffset())->Print((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEvent*) G__getstructoffset())->getPlanePointer((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TEvent*) G__getstructoffset())->hasInvalidReadout());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_324_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEvent G__TTEvent;
static int G__TEventDict_324_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TEvent*) (soff+(sizeof(TEvent)*i)))->~G__TTEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TEvent*) (soff))->~G__TTEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<TPlane,allocator<TPlane> > */
static int G__TEventDict_326_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TPlane,allocator<TPlane> >::reference obj = ((vector<TPlane,allocator<TPlane> >*) G__getstructoffset())->at((vector<TPlane,allocator<TPlane> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TPlane,allocator<TPlane> >::const_reference obj = ((const vector<TPlane,allocator<TPlane> >*) G__getstructoffset())->at((vector<TPlane,allocator<TPlane> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TPlane,allocator<TPlane> >::iterator* pobj;
         vector<TPlane,allocator<TPlane> >::iterator xobj = ((vector<TPlane,allocator<TPlane> >*) G__getstructoffset())->begin();
         pobj = new vector<TPlane,allocator<TPlane> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TPlane,allocator<TPlane> >::iterator* pobj;
         vector<TPlane,allocator<TPlane> >::iterator xobj = ((vector<TPlane,allocator<TPlane> >*) G__getstructoffset())->end();
         pobj = new vector<TPlane,allocator<TPlane> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TPlane,allocator<TPlane> >::reverse_iterator* pobj;
         vector<TPlane,allocator<TPlane> >::reverse_iterator xobj = ((vector<TPlane,allocator<TPlane> >*) G__getstructoffset())->rbegin();
         pobj = new vector<TPlane,allocator<TPlane> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TPlane,allocator<TPlane> >::reverse_iterator* pobj;
         vector<TPlane,allocator<TPlane> >::reverse_iterator xobj = ((vector<TPlane,allocator<TPlane> >*) G__getstructoffset())->rend();
         pobj = new vector<TPlane,allocator<TPlane> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TPlane,allocator<TPlane> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TPlane,allocator<TPlane> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TPlane,allocator<TPlane> >*) G__getstructoffset())->resize((vector<TPlane,allocator<TPlane> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TPlane,allocator<TPlane> >*) G__getstructoffset())->resize((vector<TPlane,allocator<TPlane> >::size_type) G__int(libp->para[0]), *((TPlane*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TPlane,allocator<TPlane> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<TPlane,allocator<TPlane> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TPlane,allocator<TPlane> >::reference obj = ((vector<TPlane,allocator<TPlane> >*) G__getstructoffset())->operator[]((vector<TPlane,allocator<TPlane> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TPlane,allocator<TPlane> >::const_reference obj = ((const vector<TPlane,allocator<TPlane> >*) G__getstructoffset())->operator[]((vector<TPlane,allocator<TPlane> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TPlane,allocator<TPlane> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TPlane,allocator<TPlane> >[n];
     } else {
       p = new((void*) gvp) vector<TPlane,allocator<TPlane> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TPlane,allocator<TPlane> >;
     } else {
       p = new((void*) gvp) vector<TPlane,allocator<TPlane> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TPlane,allocator<TPlane> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TPlane,allocator<TPlane> >((vector<TPlane,allocator<TPlane> >::size_type) G__int(libp->para[0]), *(TPlane*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<TPlane,allocator<TPlane> >((vector<TPlane,allocator<TPlane> >::size_type) G__int(libp->para[0]), *(TPlane*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TPlane,allocator<TPlane> >((vector<TPlane,allocator<TPlane> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<TPlane,allocator<TPlane> >((vector<TPlane,allocator<TPlane> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TPlane,allocator<TPlane> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TPlane,allocator<TPlane> >(*(vector<TPlane,allocator<TPlane> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<TPlane,allocator<TPlane> >(*(vector<TPlane,allocator<TPlane> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TPlane,allocator<TPlane> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TPlane,allocator<TPlane> >(*((vector<TPlane,allocator<TPlane> >::const_iterator*) G__int(libp->para[0])), *((vector<TPlane,allocator<TPlane> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<TPlane,allocator<TPlane> >(*((vector<TPlane,allocator<TPlane> >::const_iterator*) G__int(libp->para[0])), *((vector<TPlane,allocator<TPlane> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TPlane,allocator<TPlane> >& obj = ((vector<TPlane,allocator<TPlane> >*) G__getstructoffset())->operator=(*(vector<TPlane,allocator<TPlane> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TPlane,allocator<TPlane> >*) G__getstructoffset())->reserve((vector<TPlane,allocator<TPlane> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TPlane& obj = ((vector<TPlane,allocator<TPlane> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TPlane& obj = ((vector<TPlane,allocator<TPlane> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TPlane,allocator<TPlane> >*) G__getstructoffset())->push_back(*(TPlane*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TPlane,allocator<TPlane> >*) G__getstructoffset())->swap(*(vector<TPlane,allocator<TPlane> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TPlane,allocator<TPlane> >::iterator* pobj;
         vector<TPlane,allocator<TPlane> >::iterator xobj = ((vector<TPlane,allocator<TPlane> >*) G__getstructoffset())->insert(*((vector<TPlane,allocator<TPlane> >::iterator*) G__int(libp->para[0])), *(TPlane*) libp->para[1].ref);
         pobj = new vector<TPlane,allocator<TPlane> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TPlane,allocator<TPlane> >*) G__getstructoffset())->insert(*((vector<TPlane,allocator<TPlane> >::iterator*) G__int(libp->para[0])), *((vector<TPlane,allocator<TPlane> >::const_iterator*) G__int(libp->para[1]))
, *((vector<TPlane,allocator<TPlane> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TPlane,allocator<TPlane> >*) G__getstructoffset())->insert(*((vector<TPlane,allocator<TPlane> >::iterator*) G__int(libp->para[0])), (vector<TPlane,allocator<TPlane> >::size_type) G__int(libp->para[1])
, *(TPlane*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TPlane,allocator<TPlane> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TPlane,allocator<TPlane> >*) G__getstructoffset())->erase(*((vector<TPlane,allocator<TPlane> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TPlane,allocator<TPlane> >*) G__getstructoffset())->erase(*((vector<TPlane,allocator<TPlane> >::iterator*) G__int(libp->para[0])), *((vector<TPlane,allocator<TPlane> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_326_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TPlane,allocator<TPlane> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<TPlane,allocator<TPlane> > G__TvectorlETPlanecOallocatorlETPlanegRsPgR;
static int G__TEventDict_326_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<TPlane,allocator<TPlane> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<TPlane,allocator<TPlane> >*) (soff+(sizeof(vector<TPlane,allocator<TPlane> >)*i)))->~G__TvectorlETPlanecOallocatorlETPlanegRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<TPlane,allocator<TPlane> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<TPlane,allocator<TPlane> >*) (soff))->~G__TvectorlETPlanecOallocatorlETPlanegRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ChannelScreen */
static int G__TEventDict_438_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ChannelScreen* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ChannelScreen((UInt_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) ChannelScreen((UInt_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ChannelScreen[n];
       } else {
         p = new((void*) gvp) ChannelScreen[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ChannelScreen;
       } else {
         p = new((void*) gvp) ChannelScreen;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_ChannelScreen));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_438_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ChannelScreen*) G__getstructoffset())->setDetectorNumber((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_438_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ChannelScreen*) G__getstructoffset())->ScreenChannels(*((vector<int>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_438_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ChannelScreen*) G__getstructoffset())->ScreenRegions(*((vector<int>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_438_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ChannelScreen*) G__getstructoffset())->ChannelOff((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_438_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ChannelScreen*) G__getstructoffset())->PrintScreenedChannels();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_438_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ChannelScreen*) G__getstructoffset())->CheckChannel((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_438_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ChannelScreen*) G__getstructoffset())->isScreened((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_438_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ChannelScreen::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_438_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ChannelScreen::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_438_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ChannelScreen::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_438_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ChannelScreen::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_438_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ChannelScreen*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_438_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ChannelScreen::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_438_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ChannelScreen::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_438_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ChannelScreen::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_438_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ChannelScreen::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TEventDict_438_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ChannelScreen* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ChannelScreen(*(ChannelScreen*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_ChannelScreen));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ChannelScreen G__TChannelScreen;
static int G__TEventDict_438_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ChannelScreen*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ChannelScreen*) (soff+(sizeof(ChannelScreen)*i)))->~G__TChannelScreen();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ChannelScreen*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ChannelScreen*) (soff))->~G__TChannelScreen();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TEventDict_438_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ChannelScreen* dest = (ChannelScreen*) G__getstructoffset();
   *dest = *(ChannelScreen*) libp->para[0].ref;
   const ChannelScreen& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TChannelMapping */
static int G__TEventDict_667_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TChannelMapping* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TChannelMapping((UInt_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TChannelMapping((UInt_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TChannelMapping[n];
       } else {
         p = new((void*) gvp) TChannelMapping[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TChannelMapping;
       } else {
         p = new((void*) gvp) TChannelMapping;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TChannelMapping));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_667_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TChannelMapping* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TChannelMapping(*((vector<UInt_t>*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) TChannelMapping(*((vector<UInt_t>*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TChannelMapping));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_667_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TChannelMapping* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TChannelMapping(*((vector<int>*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) TChannelMapping(*((vector<int>*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TChannelMapping));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_667_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TChannelMapping* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TChannelMapping(*(TChannelMapping*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TChannelMapping(*(TChannelMapping*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TChannelMapping));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_667_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TChannelMapping*) G__getstructoffset())->changeMapping((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_667_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TChannelMapping*) G__getstructoffset())->changeMapping(*((vector<UInt_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_667_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TChannelMapping*) G__getstructoffset())->getDetChannelNo((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_667_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TChannelMapping*) G__getstructoffset())->getVAChannelNo((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_667_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TChannelMapping*) G__getstructoffset())->PrintMapping();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_667_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TChannelMapping::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_667_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TChannelMapping::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_667_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TChannelMapping::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_667_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TChannelMapping::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_667_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TChannelMapping*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_667_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TChannelMapping::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_667_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TChannelMapping::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_667_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TChannelMapping::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_667_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TChannelMapping::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TChannelMapping G__TTChannelMapping;
static int G__TEventDict_667_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TChannelMapping*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TChannelMapping*) (soff+(sizeof(TChannelMapping)*i)))->~G__TTChannelMapping();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TChannelMapping*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TChannelMapping*) (soff))->~G__TTChannelMapping();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TEventDict_667_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TChannelMapping* dest = (TChannelMapping*) G__getstructoffset();
   *dest = *(TChannelMapping*) libp->para[0].ref;
   const TChannelMapping& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > > */
static int G__TEventDict_672_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >[n];
     } else {
       p = new((void*) gvp) map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >;
     } else {
       p = new((void*) gvp) map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_672_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >(*((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator*) G__int(libp->para[0])), *((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >(*((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator*) G__int(libp->para[0])), *((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_672_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >(*((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::reverse_iterator*) G__int(libp->para[0])), *((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >(*((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::reverse_iterator*) G__int(libp->para[0])), *((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_672_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >(*(map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >(*(map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_672_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >& obj = ((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) G__getstructoffset())->operator=(*(map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_672_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator* pobj;
         map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator xobj = ((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) G__getstructoffset())->begin();
         pobj = new map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_672_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator* pobj;
         map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator xobj = ((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) G__getstructoffset())->end();
         pobj = new map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_672_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::reverse_iterator* pobj;
         map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::reverse_iterator xobj = ((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) G__getstructoffset())->rbegin();
         pobj = new map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_672_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::reverse_iterator* pobj;
         map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::reverse_iterator xobj = ((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) G__getstructoffset())->rend();
         pobj = new map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_672_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_672_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_672_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_672_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned int& obj = ((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) G__getstructoffset())->operator[](*(unsigned int*) G__UIntref(&libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'h', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_672_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator,bool>* pobj;
         pair<map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator,bool> xobj = ((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) G__getstructoffset())->insert(*(map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_672_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator* pobj;
         map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator xobj = ((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) G__getstructoffset())->insert(*((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator*) G__int(libp->para[0])), *(map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::value_type*) libp->para[1].ref);
         pobj = new map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_672_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) G__getstructoffset())->insert(*((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator*) G__int(libp->para[0])), *((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_672_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) G__getstructoffset())->insert(*((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::reverse_iterator*) G__int(libp->para[0])), *((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_672_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) G__getstructoffset())->erase(*((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_672_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) G__getstructoffset())->erase(*(unsigned int*) G__UIntref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_672_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) G__getstructoffset())->erase(*((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator*) G__int(libp->para[0])), *((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_672_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) G__getstructoffset())->swap(*(map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_672_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_672_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator* pobj;
         map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator xobj = ((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) G__getstructoffset())->find(*(unsigned int*) G__UIntref(&libp->para[0]));
         pobj = new map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_672_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) G__getstructoffset())->count(*(unsigned int*) G__UIntref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_672_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator* pobj;
         map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator xobj = ((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) G__getstructoffset())->lower_bound(*(unsigned int*) G__UIntref(&libp->para[0]));
         pobj = new map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_672_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator* pobj;
         map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator xobj = ((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) G__getstructoffset())->upper_bound(*(unsigned int*) G__UIntref(&libp->para[0]));
         pobj = new map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > > G__TmaplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR;
static int G__TEventDict_672_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) (soff+(sizeof(map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >)*i)))->~G__TmaplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*) (soff))->~G__TmaplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<unsigned int,unsigned int> */
static int G__TEventDict_673_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<unsigned int,unsigned int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<unsigned int,unsigned int>[n];
     } else {
       p = new((void*) gvp) pair<unsigned int,unsigned int>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<unsigned int,unsigned int>;
     } else {
       p = new((void*) gvp) pair<unsigned int,unsigned int>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPintcOunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_673_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<unsigned int,unsigned int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new pair<unsigned int,unsigned int>(*(unsigned int*) G__UIntref(&libp->para[0]), *(unsigned int*) G__UIntref(&libp->para[1]));
   } else {
     p = new((void*) gvp) pair<unsigned int,unsigned int>(*(unsigned int*) G__UIntref(&libp->para[0]), *(unsigned int*) G__UIntref(&libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPintcOunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TEventDict_673_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pair<unsigned int,unsigned int>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pair<unsigned int,unsigned int>(*(pair<unsigned int,unsigned int>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPintcOunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<unsigned int,unsigned int> G__TpairlEunsignedsPintcOunsignedsPintgR;
static int G__TEventDict_673_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pair<unsigned int,unsigned int>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pair<unsigned int,unsigned int>*) (soff+(sizeof(pair<unsigned int,unsigned int>)*i)))->~G__TpairlEunsignedsPintcOunsignedsPintgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pair<unsigned int,unsigned int>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pair<unsigned int,unsigned int>*) (soff))->~G__TpairlEunsignedsPintcOunsignedsPintgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDiamondPattern */
static int G__TEventDict_677_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDiamondPattern* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDiamondPattern[n];
     } else {
       p = new((void*) gvp) TDiamondPattern[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDiamondPattern;
     } else {
       p = new((void*) gvp) TDiamondPattern;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TDiamondPattern));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDiamondPattern*) G__getstructoffset())->loadStandardPitchWidthSettings();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TDiamondPattern*) G__getstructoffset())->addPattern((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TDiamondPattern*) G__getstructoffset())->convertChannelToMetric((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TDiamondPattern*) G__getstructoffset())->convertMetricToIntChannel((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TDiamondPattern*) G__getstructoffset())->convertMetricToChannel((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TDiamondPattern*) G__getstructoffset())->convertMetricToRelativeMetric((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TDiamondPattern*) G__getstructoffset())->convertMetricToRelativeMetric((Float_t) G__double(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TDiamondPattern*) G__getstructoffset())->getChannel((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TDiamondPattern*) G__getstructoffset())->getPatternOfHit((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TDiamondPattern*) G__getstructoffset())->convertMetricToChannel((Float_t) G__double(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TDiamondPattern*) G__getstructoffset())->getPitchWidth((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TDiamondPattern*) G__getstructoffset())->getNPatterns());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDiamondPattern*) G__getstructoffset())->loadPitchWidthSettings((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDiamondPattern*) G__getstructoffset())->resetPattern();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDiamondPattern*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDiamondPattern*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDiamondPattern*) G__getstructoffset())->showPatterns();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TDiamondPattern*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TDiamondPattern*) G__getstructoffset())->isStandardPitchWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<int,int>* pobj;
         pair<int,int> xobj = ((TDiamondPattern*) G__getstructoffset())->getPatternChannels((UInt_t) G__int(libp->para[0]));
         pobj = new pair<int,int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<Int_t,Int_t>* pobj;
         pair<Int_t,Int_t> xobj = ((TDiamondPattern*) G__getstructoffset())->getInterval((UInt_t) G__int(libp->para[0]));
         pobj = new pair<Int_t,Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<Int_t,Int_t>* pobj;
         pair<Int_t,Int_t> xobj = ((TDiamondPattern*) G__getstructoffset())->getIntervalOfDiamond(*((TString*) G__int(libp->para[0])));
         pobj = new pair<Int_t,Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TDiamondPattern*) G__getstructoffset())->hasInvalidIntervals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TDiamondPattern*) G__getstructoffset())->isValidChannelPosition((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TDiamondPattern*) G__getstructoffset())->isValidCluster((TCluster*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TDiamondPattern*) G__getstructoffset())->isValidCluster(*((TCluster*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TDiamondPattern*) G__getstructoffset())->getClusterPattern((TCluster*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TDiamondPattern*) G__getstructoffset())->getPatternOfChannel((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TDiamondPattern*) G__getstructoffset())->getNIntervals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<Int_t,Int_t>* pobj;
         pair<Int_t,Int_t> xobj = ((TDiamondPattern*) G__getstructoffset())->getTotalInterval();
         pobj = new pair<Int_t,Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDiamondPattern*) G__getstructoffset())->setVerbosity((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TDiamondPattern::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDiamondPattern::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TDiamondPattern::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TDiamondPattern::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDiamondPattern*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDiamondPattern::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDiamondPattern::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDiamondPattern::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_677_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDiamondPattern::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TEventDict_677_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TDiamondPattern* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TDiamondPattern(*(TDiamondPattern*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TDiamondPattern));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDiamondPattern G__TTDiamondPattern;
static int G__TEventDict_677_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TDiamondPattern*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TDiamondPattern*) (soff+(sizeof(TDiamondPattern)*i)))->~G__TTDiamondPattern();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TDiamondPattern*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TDiamondPattern*) (soff))->~G__TTDiamondPattern();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TEventDict_677_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDiamondPattern* dest = (TDiamondPattern*) G__getstructoffset();
   *dest = *(TDiamondPattern*) libp->para[0].ref;
   const TDiamondPattern& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TFiducialCut */
static int G__TEventDict_727_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((TFiducialCut*) G__getstructoffset())->GetFiducialAreaCut((bool) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((TFiducialCut*) G__getstructoffset())->GetFiducialAreaCut());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFiducialCut* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TFiducialCut(
(int) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]));
   } else {
     p = new((void*) gvp) TFiducialCut(
(int) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TFiducialCut));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFiducialCut* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFiducialCut((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TFiducialCut((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TFiducialCut[n];
       } else {
         p = new((void*) gvp) TFiducialCut[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TFiducialCut;
       } else {
         p = new((void*) gvp) TFiducialCut;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TFiducialCut));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TFiducialCut*) G__getstructoffset())->IsInFiducialCut((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFiducialCut*) G__getstructoffset())->SetName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TFiducialCut*) G__getstructoffset())->GetName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFiducialCut*) G__getstructoffset())->SetAllValuesZero();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFiducialCut*) G__getstructoffset())->SetXLow((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFiducialCut*) G__getstructoffset())->SetXHigh((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFiducialCut*) G__getstructoffset())->SetYLow((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFiducialCut*) G__getstructoffset())->SetYHigh((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TFiducialCut*) G__getstructoffset())->Print((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TFiducialCut*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFiducialCut*) G__getstructoffset())->SetActive((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TFiducialCut*) G__getstructoffset())->GetActive());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TFiducialCut*) G__getstructoffset())->GetXLow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TFiducialCut*) G__getstructoffset())->GetXHigh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TFiducialCut*) G__getstructoffset())->GetYLow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TFiducialCut*) G__getstructoffset())->GetYHigh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFiducialCut*) G__getstructoffset())->SetAllValues((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFiducialCut*) G__getstructoffset())->DrawFiducialCutToCanvas((TCanvas*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TFiducialCut::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFiducialCut::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TFiducialCut::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TFiducialCut::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFiducialCut*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFiducialCut::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFiducialCut::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFiducialCut::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_727_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFiducialCut::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TEventDict_727_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TFiducialCut* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TFiducialCut(*(TFiducialCut*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TFiducialCut));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TFiducialCut G__TTFiducialCut;
static int G__TEventDict_727_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TFiducialCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TFiducialCut*) (soff+(sizeof(TFiducialCut)*i)))->~G__TTFiducialCut();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TFiducialCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TFiducialCut*) (soff))->~G__TTFiducialCut();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TEventDict_727_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFiducialCut* dest = (TFiducialCut*) G__getstructoffset();
   *dest = *(TFiducialCut*) libp->para[0].ref;
   const TFiducialCut& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TFidCutRegions */
static int G__TEventDict_737_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFidCutRegions* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFidCutRegions[n];
     } else {
       p = new((void*) gvp) TFidCutRegions[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFidCutRegions;
     } else {
       p = new((void*) gvp) TFidCutRegions;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TFidCutRegions));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFidCutRegions* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TFidCutRegions(
*((vector<std::pair<Float_t,Float_t> >*) G__int(libp->para[0])), *((vector<std::pair<Float_t,Float_t> >*) G__int(libp->para[1]))
, (UInt_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TFidCutRegions(
*((vector<std::pair<Float_t,Float_t> >*) G__int(libp->para[0])), *((vector<std::pair<Float_t,Float_t> >*) G__int(libp->para[1]))
, (UInt_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TFidCutRegions));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFidCutRegions* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TFidCutRegions(
(Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (UInt_t) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) TFidCutRegions(
(Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (UInt_t) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TFidCutRegions));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFidCutRegions* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TFidCutRegions(
(TH2F*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) TFidCutRegions(
(TH2F*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TFidCutRegions));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFidCutRegions*) G__getstructoffset())->SetName(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TFidCutRegions*) G__getstructoffset())->getFiducialCutCanvas((TPlaneProperties::enumCoordinate) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TFidCutRegions*) G__getstructoffset())->getFidCut(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TFidCutRegions*) G__getstructoffset())->getFidCut((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFidCutRegions*) G__getstructoffset())->addFiducialCut((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFidCutRegions*) G__getstructoffset())->addFiducialCut((TFiducialCut*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((TFidCutRegions*) G__getstructoffset())->getXLow((UInt_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((TFidCutRegions*) G__getstructoffset())->getXLow());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((TFidCutRegions*) G__getstructoffset())->getYLow((UInt_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((TFidCutRegions*) G__getstructoffset())->getYLow());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((TFidCutRegions*) G__getstructoffset())->getXHigh((UInt_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((TFidCutRegions*) G__getstructoffset())->getXHigh());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((TFidCutRegions*) G__getstructoffset())->getYHigh((UInt_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((TFidCutRegions*) G__getstructoffset())->getYHigh());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TFidCutRegions*) G__getstructoffset())->getHigh((TPlaneProperties::enumCoordinate) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TFidCutRegions*) G__getstructoffset())->getLow((TPlaneProperties::enumCoordinate) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TFidCutRegions*) G__getstructoffset())->Print((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TFidCutRegions*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TFidCutRegions*) G__getstructoffset())->setRunDescription(*((string*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TFidCutRegions*) G__getstructoffset())->setRunDescription(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TFidCutRegions*) G__getstructoffset())->getFiducialCutIndex((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TFidCutRegions*) G__getstructoffset())->IsInFiducialCut((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TFidCutRegions*) G__getstructoffset())->getFidCutRegion((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((TFidCutRegions*) G__getstructoffset())->getAllFiducialCutsCanvas((TH2F*) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((TFidCutRegions*) G__getstructoffset())->getAllFiducialCutsCanvas((TH2F*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((TFidCutRegions*) G__getstructoffset())->getAllFiducialCutsCanvas());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFidCutRegions*) G__getstructoffset())->setHistogramm((TH2F*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TFidCutRegions*) G__getstructoffset())->getNFidCuts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((TFidCutRegions*) G__getstructoffset())->getMaxFiducialX((UInt_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((TFidCutRegions*) G__getstructoffset())->getMaxFiducialX());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((TFidCutRegions*) G__getstructoffset())->getMinFiducialX((UInt_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((TFidCutRegions*) G__getstructoffset())->getMinFiducialX());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((TFidCutRegions*) G__getstructoffset())->getMaxFiducialY((UInt_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((TFidCutRegions*) G__getstructoffset())->getMaxFiducialY());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((TFidCutRegions*) G__getstructoffset())->getMinFiducialY((UInt_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((TFidCutRegions*) G__getstructoffset())->getMinFiducialY());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TFidCutRegions*) G__getstructoffset())->DrawFiducialCutsToCanvas((TCanvas*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TFidCutRegions*) G__getstructoffset())->DrawFiducialCutsToCanvas((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TFidCutRegions*) G__getstructoffset())->getFiducialAreaCut((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TFidCutRegions*) G__getstructoffset())->getCutG(*((TString*) G__int(libp->para[0])), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFidCutRegions*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TFidCutRegions*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TFidCutRegions*) G__getstructoffset())->getAddionalCutXHigh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFidCutRegions*) G__getstructoffset())->setAddionalCutXHigh((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TFidCutRegions*) G__getstructoffset())->getAddionalCutXLow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFidCutRegions*) G__getstructoffset())->setAddionalCutXLow((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TFidCutRegions*) G__getstructoffset())->getAddionalCutYHigh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFidCutRegions*) G__getstructoffset())->setAddionalCutYHigh((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TFidCutRegions*) G__getstructoffset())->getAddionalCutYLow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFidCutRegions*) G__getstructoffset())->setAddionalCutYLow((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TFidCutRegions*) G__getstructoffset())->getActiveIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TFidCutRegions::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFidCutRegions::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TFidCutRegions::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TFidCutRegions::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFidCutRegions*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFidCutRegions::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFidCutRegions::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFidCutRegions::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_737_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFidCutRegions::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TEventDict_737_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TFidCutRegions* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TFidCutRegions(*(TFidCutRegions*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TFidCutRegions));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TFidCutRegions G__TTFidCutRegions;
static int G__TEventDict_737_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TFidCutRegions*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TFidCutRegions*) (soff+(sizeof(TFidCutRegions)*i)))->~G__TTFidCutRegions();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TFidCutRegions*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TFidCutRegions*) (soff))->~G__TTFidCutRegions();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TEventDict_737_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFidCutRegions* dest = (TFidCutRegions*) G__getstructoffset();
   *dest = *(TFidCutRegions*) libp->para[0].ref;
   const TFidCutRegions& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<float,float> */
static int G__TEventDict_738_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<float,float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<float,float>[n];
     } else {
       p = new((void*) gvp) pair<float,float>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<float,float>;
     } else {
       p = new((void*) gvp) pair<float,float>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_738_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<float,float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new pair<float,float>(*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1]));
   } else {
     p = new((void*) gvp) pair<float,float>(*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TEventDict_738_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pair<float,float>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pair<float,float>(*(pair<float,float>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<float,float> G__TpairlEfloatcOfloatgR;
static int G__TEventDict_738_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pair<float,float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pair<float,float>*) (soff+(sizeof(pair<float,float>)*i)))->~G__TpairlEfloatcOfloatgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pair<float,float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pair<float,float>*) (soff))->~G__TpairlEfloatcOfloatgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<pair<float,float>,allocator<pair<float,float> > > */
static int G__TEventDict_740_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<pair<float,float>,allocator<pair<float,float> > >::reference obj = ((vector<pair<float,float>,allocator<pair<float,float> > >*) G__getstructoffset())->at((vector<pair<float,float>,allocator<pair<float,float> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<float,float>,allocator<pair<float,float> > >::const_reference obj = ((const vector<pair<float,float>,allocator<pair<float,float> > >*) G__getstructoffset())->at((vector<pair<float,float>,allocator<pair<float,float> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<float,float>,allocator<pair<float,float> > >::iterator* pobj;
         vector<pair<float,float>,allocator<pair<float,float> > >::iterator xobj = ((vector<pair<float,float>,allocator<pair<float,float> > >*) G__getstructoffset())->begin();
         pobj = new vector<pair<float,float>,allocator<pair<float,float> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<float,float>,allocator<pair<float,float> > >::iterator* pobj;
         vector<pair<float,float>,allocator<pair<float,float> > >::iterator xobj = ((vector<pair<float,float>,allocator<pair<float,float> > >*) G__getstructoffset())->end();
         pobj = new vector<pair<float,float>,allocator<pair<float,float> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<float,float>,allocator<pair<float,float> > >::reverse_iterator* pobj;
         vector<pair<float,float>,allocator<pair<float,float> > >::reverse_iterator xobj = ((vector<pair<float,float>,allocator<pair<float,float> > >*) G__getstructoffset())->rbegin();
         pobj = new vector<pair<float,float>,allocator<pair<float,float> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<float,float>,allocator<pair<float,float> > >::reverse_iterator* pobj;
         vector<pair<float,float>,allocator<pair<float,float> > >::reverse_iterator xobj = ((vector<pair<float,float>,allocator<pair<float,float> > >*) G__getstructoffset())->rend();
         pobj = new vector<pair<float,float>,allocator<pair<float,float> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<pair<float,float>,allocator<pair<float,float> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<pair<float,float>,allocator<pair<float,float> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<float,float>,allocator<pair<float,float> > >*) G__getstructoffset())->resize((vector<pair<float,float>,allocator<pair<float,float> > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<float,float>,allocator<pair<float,float> > >*) G__getstructoffset())->resize((vector<pair<float,float>,allocator<pair<float,float> > >::size_type) G__int(libp->para[0]), *((pair<float,float>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<pair<float,float>,allocator<pair<float,float> > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<pair<float,float>,allocator<pair<float,float> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<pair<float,float>,allocator<pair<float,float> > >::reference obj = ((vector<pair<float,float>,allocator<pair<float,float> > >*) G__getstructoffset())->operator[]((vector<pair<float,float>,allocator<pair<float,float> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<float,float>,allocator<pair<float,float> > >::const_reference obj = ((const vector<pair<float,float>,allocator<pair<float,float> > >*) G__getstructoffset())->operator[]((vector<pair<float,float>,allocator<pair<float,float> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<float,float>,allocator<pair<float,float> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<float,float>,allocator<pair<float,float> > >[n];
     } else {
       p = new((void*) gvp) vector<pair<float,float>,allocator<pair<float,float> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<float,float>,allocator<pair<float,float> > >;
     } else {
       p = new((void*) gvp) vector<pair<float,float>,allocator<pair<float,float> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<float,float>,allocator<pair<float,float> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<float,float>,allocator<pair<float,float> > >((vector<pair<float,float>,allocator<pair<float,float> > >::size_type) G__int(libp->para[0]), *(pair<float,float>*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<pair<float,float>,allocator<pair<float,float> > >((vector<pair<float,float>,allocator<pair<float,float> > >::size_type) G__int(libp->para[0]), *(pair<float,float>*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<float,float>,allocator<pair<float,float> > >((vector<pair<float,float>,allocator<pair<float,float> > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<pair<float,float>,allocator<pair<float,float> > >((vector<pair<float,float>,allocator<pair<float,float> > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<float,float>,allocator<pair<float,float> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<pair<float,float>,allocator<pair<float,float> > >(*(vector<pair<float,float>,allocator<pair<float,float> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<pair<float,float>,allocator<pair<float,float> > >(*(vector<pair<float,float>,allocator<pair<float,float> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<float,float>,allocator<pair<float,float> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<pair<float,float>,allocator<pair<float,float> > >(*((vector<pair<float,float>,allocator<pair<float,float> > >::const_iterator*) G__int(libp->para[0])), *((vector<pair<float,float>,allocator<pair<float,float> > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<pair<float,float>,allocator<pair<float,float> > >(*((vector<pair<float,float>,allocator<pair<float,float> > >::const_iterator*) G__int(libp->para[0])), *((vector<pair<float,float>,allocator<pair<float,float> > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<pair<float,float>,allocator<pair<float,float> > >& obj = ((vector<pair<float,float>,allocator<pair<float,float> > >*) G__getstructoffset())->operator=(*(vector<pair<float,float>,allocator<pair<float,float> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<float,float>,allocator<pair<float,float> > >*) G__getstructoffset())->reserve((vector<pair<float,float>,allocator<pair<float,float> > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<float,float>& obj = ((vector<pair<float,float>,allocator<pair<float,float> > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<float,float>& obj = ((vector<pair<float,float>,allocator<pair<float,float> > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<float,float>,allocator<pair<float,float> > >*) G__getstructoffset())->push_back(*(pair<float,float>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<float,float>,allocator<pair<float,float> > >*) G__getstructoffset())->swap(*(vector<pair<float,float>,allocator<pair<float,float> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<float,float>,allocator<pair<float,float> > >::iterator* pobj;
         vector<pair<float,float>,allocator<pair<float,float> > >::iterator xobj = ((vector<pair<float,float>,allocator<pair<float,float> > >*) G__getstructoffset())->insert(*((vector<pair<float,float>,allocator<pair<float,float> > >::iterator*) G__int(libp->para[0])), *(pair<float,float>*) libp->para[1].ref);
         pobj = new vector<pair<float,float>,allocator<pair<float,float> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<float,float>,allocator<pair<float,float> > >*) G__getstructoffset())->insert(*((vector<pair<float,float>,allocator<pair<float,float> > >::iterator*) G__int(libp->para[0])), *((vector<pair<float,float>,allocator<pair<float,float> > >::const_iterator*) G__int(libp->para[1]))
, *((vector<pair<float,float>,allocator<pair<float,float> > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<float,float>,allocator<pair<float,float> > >*) G__getstructoffset())->insert(*((vector<pair<float,float>,allocator<pair<float,float> > >::iterator*) G__int(libp->para[0])), (vector<pair<float,float>,allocator<pair<float,float> > >::size_type) G__int(libp->para[1])
, *(pair<float,float>*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<float,float>,allocator<pair<float,float> > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<float,float>,allocator<pair<float,float> > >*) G__getstructoffset())->erase(*((vector<pair<float,float>,allocator<pair<float,float> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<float,float>,allocator<pair<float,float> > >*) G__getstructoffset())->erase(*((vector<pair<float,float>,allocator<pair<float,float> > >::iterator*) G__int(libp->para[0])), *((vector<pair<float,float>,allocator<pair<float,float> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_740_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<float,float>,allocator<pair<float,float> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<pair<float,float>,allocator<pair<float,float> > > G__TvectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR;
static int G__TEventDict_740_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<pair<float,float>,allocator<pair<float,float> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<pair<float,float>,allocator<pair<float,float> > >*) (soff+(sizeof(vector<pair<float,float>,allocator<pair<float,float> > >)*i)))->~G__TvectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<pair<float,float>,allocator<pair<float,float> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<pair<float,float>,allocator<pair<float,float> > >*) (soff))->~G__TvectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<TFiducialCut*,allocator<TFiducialCut*> > */
static int G__TEventDict_744_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TFiducialCut*,allocator<TFiducialCut*> >::reference obj = ((vector<TFiducialCut*,allocator<TFiducialCut*> >*) G__getstructoffset())->at((vector<TFiducialCut*,allocator<TFiducialCut*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TFiducialCut*,allocator<TFiducialCut*> >::const_reference obj = ((const vector<TFiducialCut*,allocator<TFiducialCut*> >*) G__getstructoffset())->at((vector<TFiducialCut*,allocator<TFiducialCut*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TFiducialCut*,allocator<TFiducialCut*> >::iterator* pobj;
         vector<TFiducialCut*,allocator<TFiducialCut*> >::iterator xobj = ((vector<TFiducialCut*,allocator<TFiducialCut*> >*) G__getstructoffset())->begin();
         pobj = new vector<TFiducialCut*,allocator<TFiducialCut*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TFiducialCut*,allocator<TFiducialCut*> >::iterator* pobj;
         vector<TFiducialCut*,allocator<TFiducialCut*> >::iterator xobj = ((vector<TFiducialCut*,allocator<TFiducialCut*> >*) G__getstructoffset())->end();
         pobj = new vector<TFiducialCut*,allocator<TFiducialCut*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TFiducialCut*,allocator<TFiducialCut*> >::reverse_iterator* pobj;
         vector<TFiducialCut*,allocator<TFiducialCut*> >::reverse_iterator xobj = ((vector<TFiducialCut*,allocator<TFiducialCut*> >*) G__getstructoffset())->rbegin();
         pobj = new vector<TFiducialCut*,allocator<TFiducialCut*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TFiducialCut*,allocator<TFiducialCut*> >::reverse_iterator* pobj;
         vector<TFiducialCut*,allocator<TFiducialCut*> >::reverse_iterator xobj = ((vector<TFiducialCut*,allocator<TFiducialCut*> >*) G__getstructoffset())->rend();
         pobj = new vector<TFiducialCut*,allocator<TFiducialCut*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TFiducialCut*,allocator<TFiducialCut*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TFiducialCut*,allocator<TFiducialCut*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TFiducialCut*,allocator<TFiducialCut*> >*) G__getstructoffset())->resize((vector<TFiducialCut*,allocator<TFiducialCut*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TFiducialCut*,allocator<TFiducialCut*> >*) G__getstructoffset())->resize((vector<TFiducialCut*,allocator<TFiducialCut*> >::size_type) G__int(libp->para[0]), (TFiducialCut*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TFiducialCut*,allocator<TFiducialCut*> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<TFiducialCut*,allocator<TFiducialCut*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TFiducialCut*,allocator<TFiducialCut*> >::reference obj = ((vector<TFiducialCut*,allocator<TFiducialCut*> >*) G__getstructoffset())->operator[]((vector<TFiducialCut*,allocator<TFiducialCut*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TFiducialCut*,allocator<TFiducialCut*> >::const_reference obj = ((const vector<TFiducialCut*,allocator<TFiducialCut*> >*) G__getstructoffset())->operator[]((vector<TFiducialCut*,allocator<TFiducialCut*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TFiducialCut*,allocator<TFiducialCut*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TFiducialCut*,allocator<TFiducialCut*> >[n];
     } else {
       p = new((void*) gvp) vector<TFiducialCut*,allocator<TFiducialCut*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TFiducialCut*,allocator<TFiducialCut*> >;
     } else {
       p = new((void*) gvp) vector<TFiducialCut*,allocator<TFiducialCut*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TFiducialCut*,allocator<TFiducialCut*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TFiducialCut*,allocator<TFiducialCut*> >((vector<TFiducialCut*,allocator<TFiducialCut*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(TFiducialCut**) libp->para[1].ref : *(TFiducialCut**) (void*) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) vector<TFiducialCut*,allocator<TFiducialCut*> >((vector<TFiducialCut*,allocator<TFiducialCut*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(TFiducialCut**) libp->para[1].ref : *(TFiducialCut**) (void*) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TFiducialCut*,allocator<TFiducialCut*> >((vector<TFiducialCut*,allocator<TFiducialCut*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<TFiducialCut*,allocator<TFiducialCut*> >((vector<TFiducialCut*,allocator<TFiducialCut*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TFiducialCut*,allocator<TFiducialCut*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TFiducialCut*,allocator<TFiducialCut*> >(*(vector<TFiducialCut*,allocator<TFiducialCut*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<TFiducialCut*,allocator<TFiducialCut*> >(*(vector<TFiducialCut*,allocator<TFiducialCut*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TFiducialCut*,allocator<TFiducialCut*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TFiducialCut*,allocator<TFiducialCut*> >(*((vector<TFiducialCut*,allocator<TFiducialCut*> >::const_iterator*) G__int(libp->para[0])), *((vector<TFiducialCut*,allocator<TFiducialCut*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<TFiducialCut*,allocator<TFiducialCut*> >(*((vector<TFiducialCut*,allocator<TFiducialCut*> >::const_iterator*) G__int(libp->para[0])), *((vector<TFiducialCut*,allocator<TFiducialCut*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TFiducialCut*,allocator<TFiducialCut*> >& obj = ((vector<TFiducialCut*,allocator<TFiducialCut*> >*) G__getstructoffset())->operator=(*(vector<TFiducialCut*,allocator<TFiducialCut*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TFiducialCut*,allocator<TFiducialCut*> >*) G__getstructoffset())->reserve((vector<TFiducialCut*,allocator<TFiducialCut*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TFiducialCut*& obj = ((vector<TFiducialCut*,allocator<TFiducialCut*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TFiducialCut*& obj = ((vector<TFiducialCut*,allocator<TFiducialCut*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TFiducialCut*,allocator<TFiducialCut*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(TFiducialCut**) libp->para[0].ref : *(TFiducialCut**) (void*) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TFiducialCut*,allocator<TFiducialCut*> >*) G__getstructoffset())->swap(*(vector<TFiducialCut*,allocator<TFiducialCut*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TFiducialCut*,allocator<TFiducialCut*> >::iterator* pobj;
         vector<TFiducialCut*,allocator<TFiducialCut*> >::iterator xobj = ((vector<TFiducialCut*,allocator<TFiducialCut*> >*) G__getstructoffset())->insert(*((vector<TFiducialCut*,allocator<TFiducialCut*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(TFiducialCut**) libp->para[1].ref : *(TFiducialCut**) (void*) (&G__Mlong(libp->para[1])));
         pobj = new vector<TFiducialCut*,allocator<TFiducialCut*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TFiducialCut*,allocator<TFiducialCut*> >*) G__getstructoffset())->insert(*((vector<TFiducialCut*,allocator<TFiducialCut*> >::iterator*) G__int(libp->para[0])), *((vector<TFiducialCut*,allocator<TFiducialCut*> >::const_iterator*) G__int(libp->para[1]))
, *((vector<TFiducialCut*,allocator<TFiducialCut*> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TFiducialCut*,allocator<TFiducialCut*> >*) G__getstructoffset())->insert(*((vector<TFiducialCut*,allocator<TFiducialCut*> >::iterator*) G__int(libp->para[0])), (vector<TFiducialCut*,allocator<TFiducialCut*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(TFiducialCut**) libp->para[2].ref : *(TFiducialCut**) (void*) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TFiducialCut*,allocator<TFiducialCut*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TFiducialCut*,allocator<TFiducialCut*> >*) G__getstructoffset())->erase(*((vector<TFiducialCut*,allocator<TFiducialCut*> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TFiducialCut*,allocator<TFiducialCut*> >*) G__getstructoffset())->erase(*((vector<TFiducialCut*,allocator<TFiducialCut*> >::iterator*) G__int(libp->para[0])), *((vector<TFiducialCut*,allocator<TFiducialCut*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_744_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TFiducialCut*,allocator<TFiducialCut*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<TFiducialCut*,allocator<TFiducialCut*> > G__TvectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR;
static int G__TEventDict_744_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<TFiducialCut*,allocator<TFiducialCut*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<TFiducialCut*,allocator<TFiducialCut*> >*) (soff+(sizeof(vector<TFiducialCut*,allocator<TFiducialCut*> >)*i)))->~G__TvectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<TFiducialCut*,allocator<TFiducialCut*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<TFiducialCut*,allocator<TFiducialCut*> >*) (soff))->~G__TvectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSettings */
static int G__TEventDict_748_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSettings*) G__getstructoffset())->GetMacro());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) TSettings::GetColor((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TSettings::existsDirectory(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSettings* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSettings((TRunInfo*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSettings((TRunInfo*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TSettings));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSettings* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSettings((UInt_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TSettings((UInt_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TSettings[n];
       } else {
         p = new((void*) gvp) TSettings[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TSettings;
       } else {
         p = new((void*) gvp) TSettings;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TSettings));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSettings* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSettings(*((string*) G__int(libp->para[0])), (UInt_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TSettings(*((string*) G__int(libp->para[0])), (UInt_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSettings(*((string*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TSettings(*((string*) G__int(libp->para[0])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TSettings));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TSettings*) G__getstructoffset())->GetCurrentBegin();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TSettings*) G__getstructoffset())->GetCurrentEnd();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         string* pobj;
         string xobj = ((TSettings*) G__getstructoffset())->getAbsoluteOuputPath((bool) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         string* pobj;
         string xobj = ((TSettings*) G__getstructoffset())->getAbsoluteOuputPath();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TSettings*) G__getstructoffset())->getAbsoluteInputPath();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TSettings*) G__getstructoffset())->getRawTreeFilePath();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TSettings*) G__getstructoffset())->getPedestalTreeFilePath();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TSettings*) G__getstructoffset())->getClusterTreeFilePath();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         string* pobj;
         string xobj = ((TSettings*) G__getstructoffset())->getAlignmentFilePath((TSettings::alignmentMode) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         string* pobj;
         string xobj = ((TSettings*) G__getstructoffset())->getAlignmentFilePath();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TSettings*) G__getstructoffset())->getSelectionTreeFilePath();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TSettings*) G__getstructoffset())->getSelectionAnalysisPath();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TSettings*) G__getstructoffset())->getCrossTalkFactorsFileName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TSettings*) G__getstructoffset())->getSelectionPath();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         string* pobj;
         string xobj = ((TSettings*) G__getstructoffset())->getEtaDistributionPath((Int_t) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         string* pobj;
         string xobj = ((TSettings*) G__getstructoffset())->getEtaDistributionPath();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TSettings*) G__getstructoffset())->get3dDiamondTreeFilePath();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TSettings*) G__getstructoffset())->get3dDiamondAnalysisPath();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TSettings*) G__getstructoffset())->getResultsRootFilePath();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSettings*) G__getstructoffset())->doCommonModeNoiseCorrection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->goToRawTreeDir();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->goToClusterTreeDir();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->goToSelectionTreeDir();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->goToOutputDir();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->goToPedestalTreeDir();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TSettings*) G__getstructoffset())->goToAlignmentRootDir((TSettings::alignmentMode) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TSettings*) G__getstructoffset())->goToAlignmentRootDir();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getNegativeChargeCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getNegativeChargeCutStrip());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setNegativeChargeCut((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->goTo3dDiamondTreeDir();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->goTo3dDiamondAnalysisDir();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->goToPedestalAnalysisDir();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->goToClusterAnalysisDir();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->goToSelectionDir();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->goToSelectionAnalysisDir();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TSettings*) G__getstructoffset())->goToAlignmentDir((TSettings::alignmentMode) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TSettings*) G__getstructoffset())->goToAlignmentDir();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->goToAlignmentAnalysisDir();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->goToTransparentAnalysisDir();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         string* pobj;
         string xobj = ((TSettings*) G__getstructoffset())->getTransparentAnalysisDir((TSettings::alignmentMode) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         string* pobj;
         string xobj = ((TSettings*) G__getstructoffset())->getTransparentAnalysisDir();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TSettings*) G__getstructoffset())->getClusterAnalysisDir();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TSettings*) G__getstructoffset())->getToPedestalAnalysisDir();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         string* pobj;
         string xobj = ((TSettings*) G__getstructoffset())->getAlignmentDir((TSettings::alignmentMode) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         string* pobj;
         string xobj = ((TSettings*) G__getstructoffset())->getAlignmentDir();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TSettings*) G__getstructoffset())->getAlignmentAnalysisFilePath();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->isSpecialAnalysis());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSettings*) G__getstructoffset())->getAnalysedDiamond());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSettings*) G__getstructoffset())->GetCell((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->DrawMetallisationGrid((TCanvas*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TH1*>* pobj;
         vector<TH1*> xobj = ((TSettings*) G__getstructoffset())->sortHistosByPulseHeight(*((vector<TH1*>*) G__int(libp->para[0])));
         pobj = new vector<TH1*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TSettings::SorterForPulseHeightOfHisto((TH1*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->IsValidChannel((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setFidCut((TFiducialCut*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->saveSettings();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->loadSettingsFromRootFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->compareSettings();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->createSettingsRootFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setRunDescription(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setOutputDir(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setInputDir(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->is3dDiamond());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSettings*) G__getstructoffset())->doTransparentAlignment());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getAlignmentMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getDetectorsToAlign());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const TSettings*) G__getstructoffset())->getInputDir();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const TSettings*) G__getstructoffset())->getOutputDir();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const TSettings*) G__getstructoffset())->getRunDescription();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSettings*) G__getstructoffset())->getRepeaterCard());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getPHinSigmaPlotFactor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getClusterSeedFactor((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getClusterHitFactor((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getAlignment_chi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->IgnoreStripForAlignment((UInt_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setAlignment_chi2((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getTransparentChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setTransparentChi2((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getFix_dia_noise());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getIter_Size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSettings*) G__getstructoffset())->getPedestalSildingLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getTaylor_speed_throttle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getDia_input());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getDi_Pedestal_Hit_Factor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getSi_Pedestal_Hit_Factor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getDO_CMC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getCMN_cut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getDi_Cluster_Hit_Factor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getDi_Cluster_Seed_Factor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getSi_Cluster_Hit_Factor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getSi_Cluster_Seed_Factor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getSi_avg_fidcut_xhigh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getSi_avg_fidcut_xlow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getSi_avg_fidcut_yhigh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getSi_avg_fidcut_ylow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getClosePlotsOnSave());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getIndexProduceSwitch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getPulse_height_di_max());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getPulse_height_num_bins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getPulse_height_si_max());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getPulse_height_max((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getSaveAllFilesSwitch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getSnr_distribution_di_max());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getSnr_distribution_si_max());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getEta_hiq_slice_hi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getEta_hiq_slice_low());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getEta_lowq_slice_hi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getEta_lowq_slice_low());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TSettings*) G__getstructoffset())->getMaxAllowedClustersize((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSettings*) G__getstructoffset())->doAnalyseAlignmentEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSettings*) G__getstructoffset())->getEventBinWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSettings*) G__getstructoffset())->getEventwiseStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSettings*) G__getstructoffset())->getEventwiseStop());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSettings*) G__getstructoffset())->getDoEventwise());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::pair<Int_t,Int_t> >* pobj;
         const vector<std::pair<Int_t,Int_t> > xobj = ((const TSettings*) G__getstructoffset())->getSkipEvents();
         pobj = new vector<std::pair<Int_t,Int_t> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->isEventSkip());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setAsymmetricSample((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Float_t>* pobj;
         const vector<Float_t> xobj = ((const TSettings*) G__getstructoffset())->getAlignment_phi_offsets();
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Float_t>* pobj;
         const vector<Float_t> xobj = ((const TSettings*) G__getstructoffset())->getAlignment_x_offsets();
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Float_t>* pobj;
         const vector<Float_t> xobj = ((const TSettings*) G__getstructoffset())->getAlignment_y_offsets();
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Float_t>* pobj;
         const vector<Float_t> xobj = ((const TSettings*) G__getstructoffset())->getAlignment_z_offsets();
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getEtavsq_n_landau_slices());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getSnr_plots_enable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getAlignment_training_track_fraction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ChannelScreen* pobj;
         ChannelScreen xobj = ((TSettings*) G__getstructoffset())->getDet_channel_screen((int) G__int(libp->para[0]));
         pobj = new ChannelScreen(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->isDet_channel_screened((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->IsMasked((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->IsMasked((UInt_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_131(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TSettings*) G__getstructoffset())->getNoisePlotChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int>* pobj;
         const vector<int> xobj = ((const TSettings*) G__getstructoffset())->getDet_channel_screen_channels((int) G__int(libp->para[0]));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSettings*) G__getstructoffset())->getAlternativeClustering());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSettings*) G__getstructoffset())->getUseAutoFidCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_135(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getAutoFidCutPercentage());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_136(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSettings*) G__getstructoffset())->getAutoFidCutEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_137(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSettings*) G__getstructoffset())->getNDiamonds());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_138(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const TSettings*) G__getstructoffset())->getFileName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_139(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->getSingle_channel_analysis_enable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_140(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSettings*) G__getstructoffset())->getSingle_channel_analysis_eventwindow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_141(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSettings*) G__getstructoffset())->getCMN_corr_low());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_142(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSettings*) G__getstructoffset())->getCMN_corr_high());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_143(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((TSettings*) G__getstructoffset())->getSingle_channel_analysis_channels();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_144(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getStore_threshold());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_145(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TSettings*) G__getstructoffset())->getRunNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_146(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->isAsymmetricSample());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_147(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setAlignment_training_track_fraction((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_148(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setFix_dia_noise((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_149(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setIter_Size((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_150(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setTaylor_speed_throttle((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_151(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setDi_Pedestal_Hit_Factor((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_152(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setDia_input((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_153(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setSi_Pedestal_Hit_Factor((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_154(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setDO_CMC((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_155(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setCMN_cut((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_156(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setDi_Cluster_Hit_Factor((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_157(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setDi_Cluster_Seed_Factor((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_158(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setSi_Cluster_Hit_Factor((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_159(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setSi_Cluster_Seed_Factor((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_160(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setSi_avg_fidcut_xhigh((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_161(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setSi_avg_fidcut_xlow((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_162(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setSi_avg_fidcut_yhigh((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_163(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setSi_avg_fidcut_ylow((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_164(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setClosePlotsOnSave((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_165(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setIndexProduceSwitch((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_166(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setPulse_height_di_max((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_167(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setPulse_height_num_bins((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_168(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setPulse_height_si_max((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_169(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setSaveAllFilesSwitch((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_170(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setSnr_distribution_di_max((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_171(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setSnr_distribution_si_max((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_172(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setEta_hiq_slice_hi((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_173(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setEta_hiq_slice_low((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_174(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setEta_lowq_slice_hi((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_175(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setEta_lowq_slice_low((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_176(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setAlignment_phi_offsets(*((vector<Float_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_177(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setAlignment_x_offsets(*((vector<Float_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_178(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setAlignment_y_offsets(*((vector<Float_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_179(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setAlignment_z_offsets(*((vector<Float_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_180(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setEtavsq_n_landau_slices((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_181(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setSnr_plots_enable((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_182(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setDet_channel_screen((int) G__int(libp->para[0]), *((ChannelScreen*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_183(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setDet_channel_screen_channels((int) G__int(libp->para[0]), *((vector<int>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_184(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setAlternativeClustering((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_185(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setUseAutoFidCut((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_186(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setSingle_channel_analysis_enable((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_187(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setSingle_channel_analysis_eventwindow((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_188(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setCMN_corr_low((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_189(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setCMN_corr_high((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_190(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setStore_threshold((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_191(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setNDiamonds((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_192(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getPlotChannelOn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_193(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setPlotChannelOn((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_194(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getMakeBufferPlots());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_195(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getPlotDiamond());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_196(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setMakeBufferPlots((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_197(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setPlotDiamond((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_198(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getEventPrintHex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_199(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getMakeDiamondPlots());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_200(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getMakeHits2D());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_201(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getMakeNoise2D());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_202(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getMakePedRmsTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_203(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getMakePullDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_204(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getSingleChannel2000plots());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_205(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setEventPrintHex((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_206(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setMakeDiamondPlots((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_207(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setMakeHits2D((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_208(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setMakeNoise2D((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_209(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setMakePedRmsTree((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_210(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setMakePullDist((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_211(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setSingleChannel2000plots((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_212(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSettings*) G__getstructoffset())->getPlottedChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_213(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setPlottedChannel((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_214(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getMaxBufferPlots());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_215(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setMaxBufferPlots((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_216(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getRmsSigmaDifferenceCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_217(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setRmsSigmaDifferenceCut((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_218(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getHighRmsCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_219(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getRmsCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_220(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setHighRmsCut((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_221(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setRmsCut((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_222(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getMaxNoise2D());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_223(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getSingleTrack2D());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_224(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getSingleTrack2DmaxClusterSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_225(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getZoomDiamondPlots());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_226(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setMaxNoise2D((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_227(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setSingleTrack2D((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_228(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setSingleTrack2DmaxClusterSize((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_229(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setZoomDiamondPlots((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_230(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getRes_keep_factor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_231(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TSettings*) G__getstructoffset())->GetSiliconAlignmentSteps());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_232(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TSettings*) G__getstructoffset())->GetDiamondAlignmentSteps());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_233(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->doAllAlignmentPlots());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_234(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSettings*) G__getstructoffset())->getTrainingMethod());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_235(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setTrainingMethod((TSettings::enumAlignmentTrainingMethod) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_236(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_237(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TSettings*) G__getstructoffset())->getDetChannelNo((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_238(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TSettings*) G__getstructoffset())->getVaChannelNo((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_239(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSettings*) G__getstructoffset())->getVerbosity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_240(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->useForAlignment((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->useForAlignment((UInt_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_241(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->isInAlignmentFiducialRegion((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_242(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->isInRoughFiducialCut((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_243(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSettings*) G__getstructoffset())->getAlignmentTrainingTrackNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_244(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getAlignmentPrecisionOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_245(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSettings*) G__getstructoffset())->getAlignmentPrecisionAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_246(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TSettings*) G__getstructoffset())->getAlignmentEvents((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_247(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSettings*) G__getstructoffset())->resetAlignment());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_248(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TSettings*) G__getstructoffset())->getNDiaDetectorAreas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_249(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSettings*) G__getstructoffset())->getSelectionFidCuts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_250(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSettings*) G__getstructoffset())->get3dEdgeFidCuts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_251(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSettings*) G__getstructoffset())->get3dMetallisationFidCuts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_252(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getMinDiamondChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_253(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getMaxDiamondChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_254(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<Int_t,Int_t>* pobj;
         pair<Int_t,Int_t> xobj = ((TSettings*) G__getstructoffset())->getDiaDetectorArea((Int_t) G__int(libp->para[0]));
         pobj = new pair<Int_t,Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_255(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->isInDiaDetectorArea((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_256(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->isClusterInDiaDetectorArea(*((TCluster*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_257(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->isClusterInDiaDetectorArea((TCluster*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_258(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->isValidCellNo((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_259(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TSettings*) G__getstructoffset())->getDiaDetectorAreaOfChannel((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TSettings*) G__getstructoffset())->getDiaDetectorAreaOfChannel((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_260(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->isDiaDetectorAreaBorderChannel((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_261(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->isMaskedCluster((UInt_t) G__int(libp->para[0]), *((TCluster*) G__int(libp->para[1]))
, (bool) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->isMaskedCluster((UInt_t) G__int(libp->para[0]), *((TCluster*) G__int(libp->para[1]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_262(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->checkAdjacentChannelsMasked());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_263(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->hasBorderSeed((UInt_t) G__int(libp->para[0]), *((TCluster*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_264(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->hasBorderHit((UInt_t) G__int(libp->para[0]), *((TCluster*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_265(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getSiliconPitchWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_266(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getDiamondPitchWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_267(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getPitchWidth((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getPitchWidth((UInt_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_268(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->convertChannelToMetric((UInt_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_269(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->convertMetricToChannelSpace((UInt_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_270(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TSettings*) G__getstructoffset())->PrintPatterns((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TSettings*) G__getstructoffset())->PrintPatterns();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_271(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getChi2Cut3D());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_272(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getChi2Cut3D_X());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_273(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getChi2Cut3D_Y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_274(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getMinimalAbsoluteEtaValue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_275(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setMinimalAbsoluteEtaValue((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_276(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSettings*) G__getstructoffset())->isUseUserResolutionInput());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_277(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setUseUserResolutionInput((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_278(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->GetDefaultResolutionX((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_279(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->GetDefaultResolutionY((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_280(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->get3DYOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_281(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((TSettings*) G__getstructoffset())->getstripAnalysisFidCut();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_282(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((TSettings*) G__getstructoffset())->get3DnHAnalysisFidCut();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_283(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((TSettings*) G__getstructoffset())->get3DwHAnalysisFidCut();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_284(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TSettings*) G__getstructoffset())->getAlignmentFidCuts();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_285(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TSettings*) G__getstructoffset())->getDiamond();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_286(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSettings*) G__getstructoffset())->getVoltage());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_287(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int>& obj = ((const TSettings*) G__getstructoffset())->getDiaChannelNoisy();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_288(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int>& obj = ((const TSettings*) G__getstructoffset())->getDiaChannelNotConnected();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_289(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->IsNotConnectedChannel((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_290(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->IsNoisyChannel((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_291(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TSettings*) G__getstructoffset())->getNEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_292(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((TSettings*) G__getstructoffset())->get3DOverlayRange();
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_293(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->RerunSelection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_331(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getLowResponseThreshold());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_332(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((TSettings*) G__getstructoffset())->GetOverlayHisto(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((TSettings*) G__getstructoffset())->GetOverlayHisto(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((TSettings*) G__getstructoffset())->GetOverlayHisto(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((TSettings*) G__getstructoffset())->GetOverlayHisto(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_333(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((TSettings*) G__getstructoffset())->GetOverlayProfile(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((TSettings*) G__getstructoffset())->GetOverlayProfile(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((TSettings*) G__getstructoffset())->GetOverlayProfile(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((TSettings*) G__getstructoffset())->GetOverlayProfile(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_334(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<Float_t,Float_t>* pobj;
         pair<Float_t,Float_t> xobj = ((TSettings*) G__getstructoffset())->getResponseWindow();
         pobj = new pair<Float_t,Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_335(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->GetCellHeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_336(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->GetResolutionSNR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_337(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->GetCellWidth((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_338(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TSettings*) G__getstructoffset())->getEdgePositionName((UInt_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_339(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSettings*) G__getstructoffset())->getEdgePositionType((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_340(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSettings*) G__getstructoffset())->getEdgePosition((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_341(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSettings*) G__getstructoffset())->do3dShortAnalysis());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_342(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSettings*) G__getstructoffset())->do3dLongAnalysis());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_343(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSettings*) G__getstructoffset())->do3dTransparentAnalysis());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_344(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->set3dTransparentAnalysis((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_345(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->PrintCellPosition((UInt_t) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_346(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<Float_t,Float_t>* pobj;
         pair<Float_t,Float_t> xobj = ((TSettings*) G__getstructoffset())->getCellPositionX((UInt_t) G__int(libp->para[0]), (int) G__int(libp->para[1]));
         pobj = new pair<Float_t,Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_347(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<Float_t,Float_t>* pobj;
         pair<Float_t,Float_t> xobj = ((TSettings*) G__getstructoffset())->getCellPositionY((UInt_t) G__int(libp->para[0]), (int) G__int(libp->para[1]));
         pobj = new pair<Float_t,Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_348(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<Float_t,Float_t>* pobj;
         pair<Float_t,Float_t> xobj = ((TSettings*) G__getstructoffset())->getCellPositionX((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
         pobj = new pair<Float_t,Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_349(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<Float_t,Float_t>* pobj;
         pair<Float_t,Float_t> xobj = ((TSettings*) G__getstructoffset())->getCellPositionY((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
         pobj = new pair<Float_t,Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_350(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setNRows3d((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_351(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TSettings*) G__getstructoffset())->getNRows3d());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_352(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->setNColumns3d((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_353(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TSettings*) G__getstructoffset())->getNColumns3d());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_354(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TSettings*) G__getstructoffset())->GetNCells3d());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_355(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TSettings*) G__getstructoffset())->getNQuarters3d());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_356(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<Int_t> >* pobj;
         vector<vector<Int_t> > xobj = ((TSettings*) G__getstructoffset())->getGoodCellRegions3d();
         pobj = new vector<vector<Int_t> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_357(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Int_t>* pobj;
         vector<Int_t> xobj = ((TSettings*) G__getstructoffset())->getBadCells3D();
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_358(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Int_t>* pobj;
         vector<Int_t> xobj = ((TSettings*) G__getstructoffset())->getBadCells3DnH();
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_359(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Int_t>* pobj;
         vector<Int_t> xobj = ((TSettings*) G__getstructoffset())->getDeadCell3D();
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_360(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<Float_t,Float_t>* pobj;
         pair<Float_t,Float_t> xobj = ((TSettings*) G__getstructoffset())->getAllGoodCellsXpos();
         pobj = new pair<Float_t,Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_361(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<Float_t,Float_t>* pobj;
         pair<Float_t,Float_t> xobj = ((TSettings*) G__getstructoffset())->getAllGoodCellsYpos();
         pobj = new pair<Float_t,Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_362(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->isDeadCell((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_363(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->isBadCell((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_364(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->isBadCell((UInt_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_365(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->IsGoodCell((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_366(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSettings*) G__getstructoffset())->get3DQuarterNo((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_367(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSettings*) G__getstructoffset())->get3DCellNo((char) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_368(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSettings*) G__getstructoffset())->get3DCellNo((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_369(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSettings*) G__getstructoffset())->get3DCellNo(*((pair<char,int>*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_370(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSettings*) G__getstructoffset())->getCellNo((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_371(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<int,int>* pobj;
         pair<int,int> xobj = ((TSettings*) G__getstructoffset())->getCellAndQuarterNo((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
         pobj = new pair<int,int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_372(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSettings*) G__getstructoffset())->getMaxOverlayClusterSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_373(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getCentralColumnOverlayXLow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_374(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getCentralColumnOverlayXHigh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_375(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getCentralColumnOverlayYLow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_376(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getCentralColumnOverlayYHigh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_377(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getCentralColumnOverlayXBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_378(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getCentralColumnOverlayYBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_379(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getBiasColumnOverlayXLow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_380(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getBiasColumnOverlayXHigh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_381(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getBiasColumnOverlayYLow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_382(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getBiasColumnOverlayYHigh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_383(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getOverlayOffsetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_384(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getOverlayOffsetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_385(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getOverlayColumnPulseHeightCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_386(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSettings*) G__getstructoffset())->getRowOfCell((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_387(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSettings*) G__getstructoffset())->getColumnOfCell((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_388(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 99, (long) ((TSettings*) G__getstructoffset())->getColumnChar((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_389(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 99, (long) ((TSettings*) G__getstructoffset())->getColumnCharOfCell((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_390(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<Float_t,Float_t>* pobj;
         pair<Float_t,Float_t> xobj = ((TSettings*) G__getstructoffset())->getRelativePositionInCell((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
         pobj = new pair<Float_t,Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_391(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TSettings*) G__getstructoffset())->get3dWithHolesDiamondPattern());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_392(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->IsWithInTheColumnRadius((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_393(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->IsOnTheEdgeOfCell((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_394(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->IsOnTheEdgeOfCell((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_395(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->IsOnTheEdgeOfCell(*((pair<Float_t,Float_t>*) G__int(libp->para[0])), (Float_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_396(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->IsOnTheEdgeOfCell(*((pair<Float_t,Float_t>*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_397(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->GetMinimumEdgeDistance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_398(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSettings*) G__getstructoffset())->IsPaperMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_399(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSettings*) G__getstructoffset())->getAdcToElectronConversion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_400(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSettings::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_401(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSettings::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_402(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSettings::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_403(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSettings::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_407(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSettings*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_408(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSettings::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_409(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSettings::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_410(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSettings::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_748_0_411(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSettings::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TEventDict_748_0_412(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSettings* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSettings(*(TSettings*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TSettings));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSettings G__TTSettings;
static int G__TEventDict_748_0_413(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSettings*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSettings*) (soff+(sizeof(TSettings)*i)))->~G__TTSettings();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSettings*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSettings*) (soff))->~G__TTSettings();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > */
static int G__TEventDict_777_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >[n];
     } else {
       p = new((void*) gvp) map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >;
     } else {
       p = new((void*) gvp) map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_777_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >(*((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator*) G__int(libp->para[0])), *((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >(*((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator*) G__int(libp->para[0])), *((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_777_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >(*((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::reverse_iterator*) G__int(libp->para[0])), *((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >(*((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::reverse_iterator*) G__int(libp->para[0])), *((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_777_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >(*(map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >(*(map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_777_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >& obj = ((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) G__getstructoffset())->operator=(*(map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_777_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator* pobj;
         map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator xobj = ((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) G__getstructoffset())->begin();
         pobj = new map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_777_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator* pobj;
         map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator xobj = ((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) G__getstructoffset())->end();
         pobj = new map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_777_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::reverse_iterator* pobj;
         map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::reverse_iterator xobj = ((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) G__getstructoffset())->rbegin();
         pobj = new map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_777_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::reverse_iterator* pobj;
         map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::reverse_iterator xobj = ((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) G__getstructoffset())->rend();
         pobj = new map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_777_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_777_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_777_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_777_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) G__getstructoffset())->operator[](*(TString*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_777_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator,bool>* pobj;
         pair<map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator,bool> xobj = ((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) G__getstructoffset())->insert(*(map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_777_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator* pobj;
         map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator xobj = ((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) G__getstructoffset())->insert(*((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator*) G__int(libp->para[0])), *(map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::value_type*) libp->para[1].ref);
         pobj = new map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_777_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) G__getstructoffset())->insert(*((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator*) G__int(libp->para[0])), *((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_777_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) G__getstructoffset())->insert(*((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::reverse_iterator*) G__int(libp->para[0])), *((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_777_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) G__getstructoffset())->erase(*((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_777_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) G__getstructoffset())->erase(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_777_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) G__getstructoffset())->erase(*((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator*) G__int(libp->para[0])), *((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_777_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) G__getstructoffset())->swap(*(map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_777_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_777_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator* pobj;
         map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator xobj = ((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) G__getstructoffset())->find(*(TString*) libp->para[0].ref);
         pobj = new map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_777_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) G__getstructoffset())->count(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_777_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator* pobj;
         map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator xobj = ((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) G__getstructoffset())->lower_bound(*(TString*) libp->para[0].ref);
         pobj = new map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_777_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator* pobj;
         map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator xobj = ((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) G__getstructoffset())->upper_bound(*(TString*) libp->para[0].ref);
         pobj = new map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > G__TmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR;
static int G__TEventDict_777_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) (soff+(sizeof(map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >)*i)))->~G__TmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*) (soff))->~G__TmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > > */
static int G__TEventDict_784_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >[n];
     } else {
       p = new((void*) gvp) map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >;
     } else {
       p = new((void*) gvp) map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_784_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >(*((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator*) G__int(libp->para[0])), *((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >(*((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator*) G__int(libp->para[0])), *((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_784_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >(*((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >(*((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_784_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >(*(map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >(*(map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_784_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >& obj = ((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) G__getstructoffset())->operator=(*(map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_784_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator* pobj;
         map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator xobj = ((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) G__getstructoffset())->begin();
         pobj = new map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_784_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator* pobj;
         map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator xobj = ((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) G__getstructoffset())->end();
         pobj = new map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_784_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::reverse_iterator* pobj;
         map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::reverse_iterator xobj = ((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) G__getstructoffset())->rbegin();
         pobj = new map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_784_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::reverse_iterator* pobj;
         map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::reverse_iterator xobj = ((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) G__getstructoffset())->rend();
         pobj = new map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_784_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_784_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_784_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_784_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >& obj = ((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) G__getstructoffset())->operator[](*(TString*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_784_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator,bool>* pobj;
         pair<map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator,bool> xobj = ((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) G__getstructoffset())->insert(*(map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_784_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator* pobj;
         map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator xobj = ((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) G__getstructoffset())->insert(*((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator*) G__int(libp->para[0])), *(map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::value_type*) libp->para[1].ref);
         pobj = new map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_784_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) G__getstructoffset())->insert(*((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator*) G__int(libp->para[0])), *((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_784_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) G__getstructoffset())->insert(*((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_784_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) G__getstructoffset())->erase(*((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_784_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) G__getstructoffset())->erase(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_784_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) G__getstructoffset())->erase(*((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator*) G__int(libp->para[0])), *((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_784_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) G__getstructoffset())->swap(*(map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_784_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_784_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator* pobj;
         map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator xobj = ((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) G__getstructoffset())->find(*(TString*) libp->para[0].ref);
         pobj = new map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_784_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) G__getstructoffset())->count(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_784_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator* pobj;
         map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator xobj = ((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) G__getstructoffset())->lower_bound(*(TString*) libp->para[0].ref);
         pobj = new map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_784_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator* pobj;
         map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator xobj = ((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) G__getstructoffset())->upper_bound(*(TString*) libp->para[0].ref);
         pobj = new map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > > G__TmaplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR;
static int G__TEventDict_784_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) (soff+(sizeof(map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >)*i)))->~G__TmaplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*) (soff))->~G__TmaplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TResults */
static int G__TEventDict_789_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TResults* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TResults((UInt_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TResults((UInt_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TResults[n];
       } else {
         p = new((void*) gvp) TResults[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TResults;
       } else {
         p = new((void*) gvp) TResults;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TResults));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TResults* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TResults((TSettings*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TResults((TSettings*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TResults));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TResults* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TResults(*(TResults*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TResults(*(TResults*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_TResults));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->createResultFiles();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->saveResults(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->openResults((TSettings*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setAlignment((TDetectorAlignment*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TDatime* pobj;
         TDatime xobj = ((TResults*) G__getstructoffset())->getLastUpdateDate();
         pobj = new TDatime(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setNoise((UInt_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setDiaNoiseCMcorrected((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setCMN((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TResults*) G__getstructoffset())->getAllEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TResults*) G__getstructoffset())->getExactlyOneDiamondHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TResults*) G__getstructoffset())->getMoreThanOneDiamondHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TResults*) G__getstructoffset())->getNoDiamondHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TResults*) G__getstructoffset())->getNoSiliconHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TResults*) G__getstructoffset())->getOneAndOnlyOneSiliconNotFiducialCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TResults*) G__getstructoffset())->getValidSiliconTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TResults*) G__getstructoffset())->getUseForAlignment());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TResults*) G__getstructoffset())->getUseForAnalysis());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<Float_t,Float_t>* pobj;
         pair<Float_t,Float_t> xobj = ((TResults*) G__getstructoffset())->getAvergSiliconCorrection();
         pobj = new pair<Float_t,Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TResults*) G__getstructoffset())->getAvergDiamondCorrection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setAllEvents((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setExactlyOneDiamondHit((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setMoreThanOneDiamondHit((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setNoDiamondHit((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setNoSiliconHit((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setOneAndOnlyOneSiliconNotFiducialCut((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setValidSiliconTrack((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setUseForAlignment((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setUseForAnalysis((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setSeedSigma((UInt_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setHitSigma((UInt_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TResults*) G__getstructoffset())->getRunNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setRunNumber((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setDoubleGaussianResolution((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (TSettings::alignmentMode) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setSingleGaussianResolution((Float_t) G__double(libp->para[0]), (TSettings::alignmentMode) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setSingleGaussianShortResolution((Float_t) G__double(libp->para[0]), (TSettings::alignmentMode) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setSingleGaussianFWTMResolution((Float_t) G__double(libp->para[0]), (TSettings::alignmentMode) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setSingleGaussianFixedResolution((Float_t) G__double(libp->para[0]), (TSettings::alignmentMode) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setSignalFeedOverCorrection((UInt_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setPH_clustered((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (TSettings::alignmentMode) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->updated();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TResults*) G__getstructoffset())->getChannelsStringList(*((set<Int_t>*) G__int(libp->para[0])));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->writeFiles();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setFloatValue(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setIntValue(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setStringValue(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TResults*) G__getstructoffset())->getMaskedChannels();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->initialiseResults();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->inheritOldResults(*(TResults*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setPH_2outOf10((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (TSettings::alignmentMode) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setPH_NoutOfN(*((vector<Float_t>*) G__int(libp->para[0])), (TSettings::alignmentMode) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->createOutputTextFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->createOutputResultFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<Float_t,Float_t>* pobj;
         pair<Float_t,Float_t> xobj = ((TResults*) G__getstructoffset())->getAvrgSilNoise();
         pobj = new pair<Float_t,Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TResults*) G__getstructoffset())->createSection(*((TString*) G__int(libp->para[0])), *((map<TString,TString>*) G__int(libp->para[1])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->setResultsFromSettings((TSettings*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TResults::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TResults::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TResults::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TResults::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TResults*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TResults::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TResults::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TResults::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_789_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TResults::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TResults G__TTResults;
static int G__TEventDict_789_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TResults*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TResults*) (soff+(sizeof(TResults)*i)))->~G__TTResults();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TResults*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TResults*) (soff))->~G__TTResults();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TEventDict_789_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TResults* dest = (TResults*) G__getstructoffset();
   *dest = *(TResults*) libp->para[0].ref;
   const TResults& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<TString,int,less<TString>,allocator<pair<const TString,int> > > */
static int G__TEventDict_792_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<TString,int,less<TString>,allocator<pair<const TString,int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<TString,int,less<TString>,allocator<pair<const TString,int> > >[n];
     } else {
       p = new((void*) gvp) map<TString,int,less<TString>,allocator<pair<const TString,int> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<TString,int,less<TString>,allocator<pair<const TString,int> > >;
     } else {
       p = new((void*) gvp) map<TString,int,less<TString>,allocator<pair<const TString,int> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_792_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<TString,int,less<TString>,allocator<pair<const TString,int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<TString,int,less<TString>,allocator<pair<const TString,int> > >(*((map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator*) G__int(libp->para[0])), *((map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<TString,int,less<TString>,allocator<pair<const TString,int> > >(*((map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator*) G__int(libp->para[0])), *((map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_792_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<TString,int,less<TString>,allocator<pair<const TString,int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<TString,int,less<TString>,allocator<pair<const TString,int> > >(*((map<TString,int,less<TString>,allocator<pair<const TString,int> > >::reverse_iterator*) G__int(libp->para[0])), *((map<TString,int,less<TString>,allocator<pair<const TString,int> > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<TString,int,less<TString>,allocator<pair<const TString,int> > >(*((map<TString,int,less<TString>,allocator<pair<const TString,int> > >::reverse_iterator*) G__int(libp->para[0])), *((map<TString,int,less<TString>,allocator<pair<const TString,int> > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_792_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<TString,int,less<TString>,allocator<pair<const TString,int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<TString,int,less<TString>,allocator<pair<const TString,int> > >(*(map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<TString,int,less<TString>,allocator<pair<const TString,int> > >(*(map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_792_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<TString,int,less<TString>,allocator<pair<const TString,int> > >& obj = ((map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) G__getstructoffset())->operator=(*(map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_792_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator* pobj;
         map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator xobj = ((map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) G__getstructoffset())->begin();
         pobj = new map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_792_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator* pobj;
         map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator xobj = ((map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) G__getstructoffset())->end();
         pobj = new map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_792_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,int,less<TString>,allocator<pair<const TString,int> > >::reverse_iterator* pobj;
         map<TString,int,less<TString>,allocator<pair<const TString,int> > >::reverse_iterator xobj = ((map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) G__getstructoffset())->rbegin();
         pobj = new map<TString,int,less<TString>,allocator<pair<const TString,int> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_792_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,int,less<TString>,allocator<pair<const TString,int> > >::reverse_iterator* pobj;
         map<TString,int,less<TString>,allocator<pair<const TString,int> > >::reverse_iterator xobj = ((map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) G__getstructoffset())->rend();
         pobj = new map<TString,int,less<TString>,allocator<pair<const TString,int> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_792_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_792_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_792_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_792_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const int& obj = ((map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) G__getstructoffset())->operator[](*(TString*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_792_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator,bool>* pobj;
         pair<map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator,bool> xobj = ((map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) G__getstructoffset())->insert(*(map<TString,int,less<TString>,allocator<pair<const TString,int> > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_792_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator* pobj;
         map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator xobj = ((map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) G__getstructoffset())->insert(*((map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator*) G__int(libp->para[0])), *(map<TString,int,less<TString>,allocator<pair<const TString,int> > >::value_type*) libp->para[1].ref);
         pobj = new map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_792_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) G__getstructoffset())->insert(*((map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator*) G__int(libp->para[0])), *((map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_792_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) G__getstructoffset())->insert(*((map<TString,int,less<TString>,allocator<pair<const TString,int> > >::reverse_iterator*) G__int(libp->para[0])), *((map<TString,int,less<TString>,allocator<pair<const TString,int> > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_792_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) G__getstructoffset())->erase(*((map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_792_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) G__getstructoffset())->erase(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_792_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) G__getstructoffset())->erase(*((map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator*) G__int(libp->para[0])), *((map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_792_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) G__getstructoffset())->swap(*(map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_792_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_792_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator* pobj;
         map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator xobj = ((map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) G__getstructoffset())->find(*(TString*) libp->para[0].ref);
         pobj = new map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_792_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) G__getstructoffset())->count(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_792_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator* pobj;
         map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator xobj = ((map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) G__getstructoffset())->lower_bound(*(TString*) libp->para[0].ref);
         pobj = new map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_792_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator* pobj;
         map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator xobj = ((map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) G__getstructoffset())->upper_bound(*(TString*) libp->para[0].ref);
         pobj = new map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<TString,int,less<TString>,allocator<pair<const TString,int> > > G__TmaplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR;
static int G__TEventDict_792_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) (soff+(sizeof(map<TString,int,less<TString>,allocator<pair<const TString,int> > >)*i)))->~G__TmaplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<TString,int,less<TString>,allocator<pair<const TString,int> > >*) (soff))->~G__TmaplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<TString,float,less<TString>,allocator<pair<const TString,float> > > */
static int G__TEventDict_799_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<TString,float,less<TString>,allocator<pair<const TString,float> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<TString,float,less<TString>,allocator<pair<const TString,float> > >[n];
     } else {
       p = new((void*) gvp) map<TString,float,less<TString>,allocator<pair<const TString,float> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<TString,float,less<TString>,allocator<pair<const TString,float> > >;
     } else {
       p = new((void*) gvp) map<TString,float,less<TString>,allocator<pair<const TString,float> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_799_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<TString,float,less<TString>,allocator<pair<const TString,float> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<TString,float,less<TString>,allocator<pair<const TString,float> > >(*((map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator*) G__int(libp->para[0])), *((map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<TString,float,less<TString>,allocator<pair<const TString,float> > >(*((map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator*) G__int(libp->para[0])), *((map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_799_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<TString,float,less<TString>,allocator<pair<const TString,float> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<TString,float,less<TString>,allocator<pair<const TString,float> > >(*((map<TString,float,less<TString>,allocator<pair<const TString,float> > >::reverse_iterator*) G__int(libp->para[0])), *((map<TString,float,less<TString>,allocator<pair<const TString,float> > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<TString,float,less<TString>,allocator<pair<const TString,float> > >(*((map<TString,float,less<TString>,allocator<pair<const TString,float> > >::reverse_iterator*) G__int(libp->para[0])), *((map<TString,float,less<TString>,allocator<pair<const TString,float> > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_799_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<TString,float,less<TString>,allocator<pair<const TString,float> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<TString,float,less<TString>,allocator<pair<const TString,float> > >(*(map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<TString,float,less<TString>,allocator<pair<const TString,float> > >(*(map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_799_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<TString,float,less<TString>,allocator<pair<const TString,float> > >& obj = ((map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) G__getstructoffset())->operator=(*(map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_799_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator* pobj;
         map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator xobj = ((map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) G__getstructoffset())->begin();
         pobj = new map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_799_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator* pobj;
         map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator xobj = ((map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) G__getstructoffset())->end();
         pobj = new map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_799_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,float,less<TString>,allocator<pair<const TString,float> > >::reverse_iterator* pobj;
         map<TString,float,less<TString>,allocator<pair<const TString,float> > >::reverse_iterator xobj = ((map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) G__getstructoffset())->rbegin();
         pobj = new map<TString,float,less<TString>,allocator<pair<const TString,float> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_799_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,float,less<TString>,allocator<pair<const TString,float> > >::reverse_iterator* pobj;
         map<TString,float,less<TString>,allocator<pair<const TString,float> > >::reverse_iterator xobj = ((map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) G__getstructoffset())->rend();
         pobj = new map<TString,float,less<TString>,allocator<pair<const TString,float> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_799_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_799_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_799_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_799_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) G__getstructoffset())->operator[](*(TString*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_799_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator,bool>* pobj;
         pair<map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator,bool> xobj = ((map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) G__getstructoffset())->insert(*(map<TString,float,less<TString>,allocator<pair<const TString,float> > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_799_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator* pobj;
         map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator xobj = ((map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) G__getstructoffset())->insert(*((map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator*) G__int(libp->para[0])), *(map<TString,float,less<TString>,allocator<pair<const TString,float> > >::value_type*) libp->para[1].ref);
         pobj = new map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_799_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) G__getstructoffset())->insert(*((map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator*) G__int(libp->para[0])), *((map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_799_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) G__getstructoffset())->insert(*((map<TString,float,less<TString>,allocator<pair<const TString,float> > >::reverse_iterator*) G__int(libp->para[0])), *((map<TString,float,less<TString>,allocator<pair<const TString,float> > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_799_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) G__getstructoffset())->erase(*((map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_799_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) G__getstructoffset())->erase(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_799_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) G__getstructoffset())->erase(*((map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator*) G__int(libp->para[0])), *((map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_799_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) G__getstructoffset())->swap(*(map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_799_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_799_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator* pobj;
         map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator xobj = ((map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) G__getstructoffset())->find(*(TString*) libp->para[0].ref);
         pobj = new map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_799_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) G__getstructoffset())->count(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_799_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator* pobj;
         map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator xobj = ((map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) G__getstructoffset())->lower_bound(*(TString*) libp->para[0].ref);
         pobj = new map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_799_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator* pobj;
         map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator xobj = ((map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) G__getstructoffset())->upper_bound(*(TString*) libp->para[0].ref);
         pobj = new map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<TString,float,less<TString>,allocator<pair<const TString,float> > > G__TmaplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR;
static int G__TEventDict_799_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) (soff+(sizeof(map<TString,float,less<TString>,allocator<pair<const TString,float> > >)*i)))->~G__TmaplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<TString,float,less<TString>,allocator<pair<const TString,float> > >*) (soff))->~G__TmaplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<unsigned short,float> */
static int G__TEventDict_804_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<unsigned short,float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<unsigned short,float>[n];
     } else {
       p = new((void*) gvp) pair<unsigned short,float>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<unsigned short,float>;
     } else {
       p = new((void*) gvp) pair<unsigned short,float>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPshortcOfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_804_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<unsigned short,float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new pair<unsigned short,float>(*(unsigned short*) G__UShortref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1]));
   } else {
     p = new((void*) gvp) pair<unsigned short,float>(*(unsigned short*) G__UShortref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPshortcOfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TEventDict_804_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pair<unsigned short,float>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pair<unsigned short,float>(*(pair<unsigned short,float>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPshortcOfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<unsigned short,float> G__TpairlEunsignedsPshortcOfloatgR;
static int G__TEventDict_804_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pair<unsigned short,float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pair<unsigned short,float>*) (soff+(sizeof(pair<unsigned short,float>)*i)))->~G__TpairlEunsignedsPshortcOfloatgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pair<unsigned short,float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pair<unsigned short,float>*) (soff))->~G__TpairlEunsignedsPshortcOfloatgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<int,float> */
static int G__TEventDict_805_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<int,float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<int,float>[n];
     } else {
       p = new((void*) gvp) pair<int,float>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<int,float>;
     } else {
       p = new((void*) gvp) pair<int,float>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_pairlEintcOfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_805_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<int,float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new pair<int,float>(*(int*) G__Intref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1]));
   } else {
     p = new((void*) gvp) pair<int,float>(*(int*) G__Intref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_pairlEintcOfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TEventDict_805_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pair<int,float>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pair<int,float>(*(pair<int,float>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_pairlEintcOfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<int,float> G__TpairlEintcOfloatgR;
static int G__TEventDict_805_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pair<int,float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pair<int,float>*) (soff+(sizeof(pair<int,float>)*i)))->~G__TpairlEintcOfloatgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pair<int,float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pair<int,float>*) (soff))->~G__TpairlEintcOfloatgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* deque<pair<int,float>,allocator<pair<int,float> > > */
static int G__TEventDict_807_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<pair<int,float>,allocator<pair<int,float> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<pair<int,float>,allocator<pair<int,float> > >[n];
     } else {
       p = new((void*) gvp) deque<pair<int,float>,allocator<pair<int,float> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<pair<int,float>,allocator<pair<int,float> > >;
     } else {
       p = new((void*) gvp) deque<pair<int,float>,allocator<pair<int,float> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_807_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<pair<int,float>,allocator<pair<int,float> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<pair<int,float>,allocator<pair<int,float> > >((deque<pair<int,float>,allocator<pair<int,float> > >::size_type) G__int(libp->para[0]), *(pair<int,float>*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) deque<pair<int,float>,allocator<pair<int,float> > >((deque<pair<int,float>,allocator<pair<int,float> > >::size_type) G__int(libp->para[0]), *(pair<int,float>*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<pair<int,float>,allocator<pair<int,float> > >((deque<pair<int,float>,allocator<pair<int,float> > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) deque<pair<int,float>,allocator<pair<int,float> > >((deque<pair<int,float>,allocator<pair<int,float> > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_807_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<pair<int,float>,allocator<pair<int,float> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<pair<int,float>,allocator<pair<int,float> > >((pair<int,float>*) G__int(libp->para[0]), (pair<int,float>*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) deque<pair<int,float>,allocator<pair<int,float> > >((pair<int,float>*) G__int(libp->para[0]), (pair<int,float>*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_807_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<pair<int,float>,allocator<pair<int,float> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<pair<int,float>,allocator<pair<int,float> > >(*((deque<pair<int,float>,allocator<pair<int,float> > >::const_iterator*) G__int(libp->para[0])), *((deque<pair<int,float>,allocator<pair<int,float> > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) deque<pair<int,float>,allocator<pair<int,float> > >(*((deque<pair<int,float>,allocator<pair<int,float> > >::const_iterator*) G__int(libp->para[0])), *((deque<pair<int,float>,allocator<pair<int,float> > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_807_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<pair<int,float>,allocator<pair<int,float> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<pair<int,float>,allocator<pair<int,float> > >(*(deque<pair<int,float>,allocator<pair<int,float> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) deque<pair<int,float>,allocator<pair<int,float> > >(*(deque<pair<int,float>,allocator<pair<int,float> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_807_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<pair<int,float>,allocator<pair<int,float> > >& obj = ((deque<pair<int,float>,allocator<pair<int,float> > >*) G__getstructoffset())->operator=(*(deque<pair<int,float>,allocator<pair<int,float> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_807_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<pair<int,float>,allocator<pair<int,float> > >::iterator* pobj;
         deque<pair<int,float>,allocator<pair<int,float> > >::iterator xobj = ((deque<pair<int,float>,allocator<pair<int,float> > >*) G__getstructoffset())->begin();
         pobj = new deque<pair<int,float>,allocator<pair<int,float> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_807_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<pair<int,float>,allocator<pair<int,float> > >::iterator* pobj;
         deque<pair<int,float>,allocator<pair<int,float> > >::iterator xobj = ((deque<pair<int,float>,allocator<pair<int,float> > >*) G__getstructoffset())->end();
         pobj = new deque<pair<int,float>,allocator<pair<int,float> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_807_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<pair<int,float>,allocator<pair<int,float> > >::reverse_iterator* pobj;
         deque<pair<int,float>,allocator<pair<int,float> > >::reverse_iterator xobj = ((deque<pair<int,float>,allocator<pair<int,float> > >*) G__getstructoffset())->rbegin();
         pobj = new deque<pair<int,float>,allocator<pair<int,float> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_807_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<pair<int,float>,allocator<pair<int,float> > >::reverse_iterator* pobj;
         deque<pair<int,float>,allocator<pair<int,float> > >::reverse_iterator xobj = ((deque<pair<int,float>,allocator<pair<int,float> > >*) G__getstructoffset())->rend();
         pobj = new deque<pair<int,float>,allocator<pair<int,float> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_807_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const deque<pair<int,float>,allocator<pair<int,float> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_807_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const deque<pair<int,float>,allocator<pair<int,float> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_807_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((deque<pair<int,float>,allocator<pair<int,float> > >*) G__getstructoffset())->resize((deque<pair<int,float>,allocator<pair<int,float> > >::size_type) G__int(libp->para[0]), *((pair<int,float>*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((deque<pair<int,float>,allocator<pair<int,float> > >*) G__getstructoffset())->resize((deque<pair<int,float>,allocator<pair<int,float> > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_807_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const deque<pair<int,float>,allocator<pair<int,float> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_807_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<int,float>& obj = ((deque<pair<int,float>,allocator<pair<int,float> > >*) G__getstructoffset())->operator[]((deque<pair<int,float>,allocator<pair<int,float> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_807_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<int,float>& obj = ((deque<pair<int,float>,allocator<pair<int,float> > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_807_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<int,float>& obj = ((deque<pair<int,float>,allocator<pair<int,float> > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_807_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<pair<int,float>,allocator<pair<int,float> > >*) G__getstructoffset())->push_front(*(pair<int,float>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_807_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<pair<int,float>,allocator<pair<int,float> > >*) G__getstructoffset())->push_back(*(pair<int,float>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_807_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<pair<int,float>,allocator<pair<int,float> > >::iterator* pobj;
         deque<pair<int,float>,allocator<pair<int,float> > >::iterator xobj = ((deque<pair<int,float>,allocator<pair<int,float> > >*) G__getstructoffset())->insert(*((deque<pair<int,float>,allocator<pair<int,float> > >::iterator*) G__int(libp->para[0])), *(pair<int,float>*) libp->para[1].ref);
         pobj = new deque<pair<int,float>,allocator<pair<int,float> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_807_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<pair<int,float>,allocator<pair<int,float> > >*) G__getstructoffset())->insert(*((deque<pair<int,float>,allocator<pair<int,float> > >::iterator*) G__int(libp->para[0])), (deque<pair<int,float>,allocator<pair<int,float> > >::size_type) G__int(libp->para[1])
, *(pair<int,float>*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_807_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<pair<int,float>,allocator<pair<int,float> > >*) G__getstructoffset())->pop_front();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_807_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<pair<int,float>,allocator<pair<int,float> > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_807_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<pair<int,float>,allocator<pair<int,float> > >::iterator* pobj;
         deque<pair<int,float>,allocator<pair<int,float> > >::iterator xobj = ((deque<pair<int,float>,allocator<pair<int,float> > >*) G__getstructoffset())->erase(*((deque<pair<int,float>,allocator<pair<int,float> > >::iterator*) G__int(libp->para[0])));
         pobj = new deque<pair<int,float>,allocator<pair<int,float> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_807_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<pair<int,float>,allocator<pair<int,float> > >::iterator* pobj;
         deque<pair<int,float>,allocator<pair<int,float> > >::iterator xobj = ((deque<pair<int,float>,allocator<pair<int,float> > >*) G__getstructoffset())->erase(*((deque<pair<int,float>,allocator<pair<int,float> > >::iterator*) G__int(libp->para[0])), *((deque<pair<int,float>,allocator<pair<int,float> > >::iterator*) G__int(libp->para[1])));
         pobj = new deque<pair<int,float>,allocator<pair<int,float> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_807_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<pair<int,float>,allocator<pair<int,float> > >*) G__getstructoffset())->swap(*(deque<pair<int,float>,allocator<pair<int,float> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_807_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<pair<int,float>,allocator<pair<int,float> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef deque<pair<int,float>,allocator<pair<int,float> > > G__TdequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR;
static int G__TEventDict_807_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (deque<pair<int,float>,allocator<pair<int,float> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((deque<pair<int,float>,allocator<pair<int,float> > >*) (soff+(sizeof(deque<pair<int,float>,allocator<pair<int,float> > >)*i)))->~G__TdequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (deque<pair<int,float>,allocator<pair<int,float> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((deque<pair<int,float>,allocator<pair<int,float> > >*) (soff))->~G__TdequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > > */
static int G__TEventDict_811_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >[n];
     } else {
       p = new((void*) gvp) deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >;
     } else {
       p = new((void*) gvp) deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_811_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::size_type) G__int(libp->para[0]), *(pair<unsigned short,float>*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::size_type) G__int(libp->para[0]), *(pair<unsigned short,float>*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_811_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >((pair<unsigned short,float>*) G__int(libp->para[0]), (pair<unsigned short,float>*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >((pair<unsigned short,float>*) G__int(libp->para[0]), (pair<unsigned short,float>*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_811_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >(*((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::const_iterator*) G__int(libp->para[0])), *((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >(*((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::const_iterator*) G__int(libp->para[0])), *((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_811_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >(*(deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >(*(deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_811_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >& obj = ((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) G__getstructoffset())->operator=(*(deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_811_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator* pobj;
         deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator xobj = ((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) G__getstructoffset())->begin();
         pobj = new deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_811_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator* pobj;
         deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator xobj = ((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) G__getstructoffset())->end();
         pobj = new deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_811_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::reverse_iterator* pobj;
         deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::reverse_iterator xobj = ((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) G__getstructoffset())->rbegin();
         pobj = new deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_811_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::reverse_iterator* pobj;
         deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::reverse_iterator xobj = ((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) G__getstructoffset())->rend();
         pobj = new deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_811_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_811_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_811_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) G__getstructoffset())->resize((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::size_type) G__int(libp->para[0]), *((pair<unsigned short,float>*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) G__getstructoffset())->resize((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_811_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_811_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<unsigned short,float>& obj = ((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) G__getstructoffset())->operator[]((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_811_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<unsigned short,float>& obj = ((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_811_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<unsigned short,float>& obj = ((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_811_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) G__getstructoffset())->push_front(*(pair<unsigned short,float>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_811_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) G__getstructoffset())->push_back(*(pair<unsigned short,float>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_811_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator* pobj;
         deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator xobj = ((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) G__getstructoffset())->insert(*((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator*) G__int(libp->para[0])), *(pair<unsigned short,float>*) libp->para[1].ref);
         pobj = new deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_811_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) G__getstructoffset())->insert(*((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator*) G__int(libp->para[0])), (deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::size_type) G__int(libp->para[1])
, *(pair<unsigned short,float>*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_811_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) G__getstructoffset())->pop_front();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_811_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_811_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator* pobj;
         deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator xobj = ((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) G__getstructoffset())->erase(*((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator*) G__int(libp->para[0])));
         pobj = new deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_811_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator* pobj;
         deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator xobj = ((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) G__getstructoffset())->erase(*((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator*) G__int(libp->para[0])), *((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator*) G__int(libp->para[1])));
         pobj = new deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_811_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) G__getstructoffset())->swap(*(deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_811_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > > G__TdequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR;
static int G__TEventDict_811_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) (soff+(sizeof(deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >)*i)))->~G__TdequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*) (soff))->~G__TdequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > > */
static int G__TEventDict_815_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::reference obj = ((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) G__getstructoffset())->at((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::const_reference obj = ((const vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) G__getstructoffset())->at((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::iterator* pobj;
         vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::iterator xobj = ((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::iterator* pobj;
         vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::iterator xobj = ((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::reverse_iterator* pobj;
         vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::reverse_iterator xobj = ((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::reverse_iterator* pobj;
         vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::reverse_iterator xobj = ((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) G__getstructoffset())->resize((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) G__getstructoffset())->resize((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::size_type) G__int(libp->para[0]), *((vector<TCluster,allocator<TCluster> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::reference obj = ((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) G__getstructoffset())->operator[]((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::const_reference obj = ((const vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) G__getstructoffset())->operator[]((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >;
     } else {
       p = new((void*) gvp) vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::size_type) G__int(libp->para[0]), *(vector<TCluster,allocator<TCluster> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::size_type) G__int(libp->para[0]), *(vector<TCluster,allocator<TCluster> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >(*(vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >(*(vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >(*((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >(*((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >& obj = ((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) G__getstructoffset())->operator=(*(vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) G__getstructoffset())->reserve((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TCluster,allocator<TCluster> >& obj = ((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TCluster,allocator<TCluster> >& obj = ((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) G__getstructoffset())->push_back(*(vector<TCluster,allocator<TCluster> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) G__getstructoffset())->swap(*(vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::iterator* pobj;
         vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::iterator xobj = ((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) G__getstructoffset())->insert(*((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::iterator*) G__int(libp->para[0])), *(vector<TCluster,allocator<TCluster> >*) libp->para[1].ref);
         pobj = new vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) G__getstructoffset())->insert(*((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) G__getstructoffset())->insert(*((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::iterator*) G__int(libp->para[0])), (vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::size_type) G__int(libp->para[1])
, *(vector<TCluster,allocator<TCluster> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) G__getstructoffset())->erase(*((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) G__getstructoffset())->erase(*((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_815_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > > G__TvectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR;
static int G__TEventDict_815_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) (soff+(sizeof(vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >)*i)))->~G__TvectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*) (soff))->~G__TvectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<TCluster*,allocator<TCluster*> > */
static int G__TEventDict_819_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TCluster*,allocator<TCluster*> >::reference obj = ((vector<TCluster*,allocator<TCluster*> >*) G__getstructoffset())->at((vector<TCluster*,allocator<TCluster*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TCluster*,allocator<TCluster*> >::const_reference obj = ((const vector<TCluster*,allocator<TCluster*> >*) G__getstructoffset())->at((vector<TCluster*,allocator<TCluster*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TCluster*,allocator<TCluster*> >::iterator* pobj;
         vector<TCluster*,allocator<TCluster*> >::iterator xobj = ((vector<TCluster*,allocator<TCluster*> >*) G__getstructoffset())->begin();
         pobj = new vector<TCluster*,allocator<TCluster*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TCluster*,allocator<TCluster*> >::iterator* pobj;
         vector<TCluster*,allocator<TCluster*> >::iterator xobj = ((vector<TCluster*,allocator<TCluster*> >*) G__getstructoffset())->end();
         pobj = new vector<TCluster*,allocator<TCluster*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TCluster*,allocator<TCluster*> >::reverse_iterator* pobj;
         vector<TCluster*,allocator<TCluster*> >::reverse_iterator xobj = ((vector<TCluster*,allocator<TCluster*> >*) G__getstructoffset())->rbegin();
         pobj = new vector<TCluster*,allocator<TCluster*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TCluster*,allocator<TCluster*> >::reverse_iterator* pobj;
         vector<TCluster*,allocator<TCluster*> >::reverse_iterator xobj = ((vector<TCluster*,allocator<TCluster*> >*) G__getstructoffset())->rend();
         pobj = new vector<TCluster*,allocator<TCluster*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TCluster*,allocator<TCluster*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TCluster*,allocator<TCluster*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCluster*,allocator<TCluster*> >*) G__getstructoffset())->resize((vector<TCluster*,allocator<TCluster*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCluster*,allocator<TCluster*> >*) G__getstructoffset())->resize((vector<TCluster*,allocator<TCluster*> >::size_type) G__int(libp->para[0]), (TCluster*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TCluster*,allocator<TCluster*> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<TCluster*,allocator<TCluster*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TCluster*,allocator<TCluster*> >::reference obj = ((vector<TCluster*,allocator<TCluster*> >*) G__getstructoffset())->operator[]((vector<TCluster*,allocator<TCluster*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TCluster*,allocator<TCluster*> >::const_reference obj = ((const vector<TCluster*,allocator<TCluster*> >*) G__getstructoffset())->operator[]((vector<TCluster*,allocator<TCluster*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TCluster*,allocator<TCluster*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TCluster*,allocator<TCluster*> >[n];
     } else {
       p = new((void*) gvp) vector<TCluster*,allocator<TCluster*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TCluster*,allocator<TCluster*> >;
     } else {
       p = new((void*) gvp) vector<TCluster*,allocator<TCluster*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TCluster*,allocator<TCluster*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TCluster*,allocator<TCluster*> >((vector<TCluster*,allocator<TCluster*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(TCluster**) libp->para[1].ref : *(TCluster**) (void*) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) vector<TCluster*,allocator<TCluster*> >((vector<TCluster*,allocator<TCluster*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(TCluster**) libp->para[1].ref : *(TCluster**) (void*) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TCluster*,allocator<TCluster*> >((vector<TCluster*,allocator<TCluster*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<TCluster*,allocator<TCluster*> >((vector<TCluster*,allocator<TCluster*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TCluster*,allocator<TCluster*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TCluster*,allocator<TCluster*> >(*(vector<TCluster*,allocator<TCluster*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<TCluster*,allocator<TCluster*> >(*(vector<TCluster*,allocator<TCluster*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TCluster*,allocator<TCluster*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TCluster*,allocator<TCluster*> >(*((vector<TCluster*,allocator<TCluster*> >::const_iterator*) G__int(libp->para[0])), *((vector<TCluster*,allocator<TCluster*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<TCluster*,allocator<TCluster*> >(*((vector<TCluster*,allocator<TCluster*> >::const_iterator*) G__int(libp->para[0])), *((vector<TCluster*,allocator<TCluster*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TCluster*,allocator<TCluster*> >& obj = ((vector<TCluster*,allocator<TCluster*> >*) G__getstructoffset())->operator=(*(vector<TCluster*,allocator<TCluster*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCluster*,allocator<TCluster*> >*) G__getstructoffset())->reserve((vector<TCluster*,allocator<TCluster*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TCluster*& obj = ((vector<TCluster*,allocator<TCluster*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TCluster*& obj = ((vector<TCluster*,allocator<TCluster*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCluster*,allocator<TCluster*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(TCluster**) libp->para[0].ref : *(TCluster**) (void*) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCluster*,allocator<TCluster*> >*) G__getstructoffset())->swap(*(vector<TCluster*,allocator<TCluster*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TCluster*,allocator<TCluster*> >::iterator* pobj;
         vector<TCluster*,allocator<TCluster*> >::iterator xobj = ((vector<TCluster*,allocator<TCluster*> >*) G__getstructoffset())->insert(*((vector<TCluster*,allocator<TCluster*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(TCluster**) libp->para[1].ref : *(TCluster**) (void*) (&G__Mlong(libp->para[1])));
         pobj = new vector<TCluster*,allocator<TCluster*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCluster*,allocator<TCluster*> >*) G__getstructoffset())->insert(*((vector<TCluster*,allocator<TCluster*> >::iterator*) G__int(libp->para[0])), *((vector<TCluster*,allocator<TCluster*> >::const_iterator*) G__int(libp->para[1]))
, *((vector<TCluster*,allocator<TCluster*> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCluster*,allocator<TCluster*> >*) G__getstructoffset())->insert(*((vector<TCluster*,allocator<TCluster*> >::iterator*) G__int(libp->para[0])), (vector<TCluster*,allocator<TCluster*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(TCluster**) libp->para[2].ref : *(TCluster**) (void*) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCluster*,allocator<TCluster*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCluster*,allocator<TCluster*> >*) G__getstructoffset())->erase(*((vector<TCluster*,allocator<TCluster*> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCluster*,allocator<TCluster*> >*) G__getstructoffset())->erase(*((vector<TCluster*,allocator<TCluster*> >::iterator*) G__int(libp->para[0])), *((vector<TCluster*,allocator<TCluster*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_819_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TCluster*,allocator<TCluster*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<TCluster*,allocator<TCluster*> > G__TvectorlETClustermUcOallocatorlETClustermUgRsPgR;
static int G__TEventDict_819_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<TCluster*,allocator<TCluster*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<TCluster*,allocator<TCluster*> >*) (soff+(sizeof(vector<TCluster*,allocator<TCluster*> >)*i)))->~G__TvectorlETClustermUcOallocatorlETClustermUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<TCluster*,allocator<TCluster*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<TCluster*,allocator<TCluster*> >*) (soff))->~G__TvectorlETClustermUcOallocatorlETClustermUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > > */
static int G__TEventDict_823_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::reference obj = ((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) G__getstructoffset())->at((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::const_reference obj = ((const vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) G__getstructoffset())->at((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::iterator* pobj;
         vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::iterator xobj = ((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::iterator* pobj;
         vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::iterator xobj = ((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::reverse_iterator* pobj;
         vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::reverse_iterator xobj = ((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::reverse_iterator* pobj;
         vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::reverse_iterator xobj = ((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) G__getstructoffset())->resize((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) G__getstructoffset())->resize((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::size_type) G__int(libp->para[0]), *((vector<TCluster*,allocator<TCluster*> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::reference obj = ((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) G__getstructoffset())->operator[]((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::const_reference obj = ((const vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) G__getstructoffset())->operator[]((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >;
     } else {
       p = new((void*) gvp) vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::size_type) G__int(libp->para[0]), *(vector<TCluster*,allocator<TCluster*> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::size_type) G__int(libp->para[0]), *(vector<TCluster*,allocator<TCluster*> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >(*(vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >(*(vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >(*((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >(*((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >& obj = ((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) G__getstructoffset())->operator=(*(vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) G__getstructoffset())->reserve((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TCluster*,allocator<TCluster*> >& obj = ((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TCluster*,allocator<TCluster*> >& obj = ((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) G__getstructoffset())->push_back(*(vector<TCluster*,allocator<TCluster*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) G__getstructoffset())->swap(*(vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::iterator* pobj;
         vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::iterator xobj = ((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) G__getstructoffset())->insert(*((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::iterator*) G__int(libp->para[0])), *(vector<TCluster*,allocator<TCluster*> >*) libp->para[1].ref);
         pobj = new vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) G__getstructoffset())->insert(*((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) G__getstructoffset())->insert(*((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::iterator*) G__int(libp->para[0])), (vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::size_type) G__int(libp->para[1])
, *(vector<TCluster*,allocator<TCluster*> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) G__getstructoffset())->erase(*((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) G__getstructoffset())->erase(*((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEventDict_823_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > > G__TvectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR;
static int G__TEventDict_823_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) (soff+(sizeof(vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >)*i)))->~G__TvectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*) (soff))->~G__TvectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TPlaneProperties */

/* TCluster */

/* deque<bool,allocator<bool> > */

/* TPlane */

/* vector<TCluster,allocator<TCluster> > */

/* TDetectorAlignment */

/* TEvent */

/* vector<TPlane,allocator<TPlane> > */

/* ChannelScreen */

/* TChannelMapping */

/* map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > > */

/* pair<unsigned int,unsigned int> */

/* TDiamondPattern */

/* TFiducialCut */

/* TFidCutRegions */

/* pair<float,float> */

/* vector<pair<float,float>,allocator<pair<float,float> > > */

/* vector<TFiducialCut*,allocator<TFiducialCut*> > */

/* TSettings */

/* map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > */

/* map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > > */

/* TResults */

/* map<TString,int,less<TString>,allocator<pair<const TString,int> > > */

/* map<TString,float,less<TString>,allocator<pair<const TString,float> > > */

/* pair<unsigned short,float> */

/* pair<int,float> */

/* deque<pair<int,float>,allocator<pair<int,float> > > */

/* deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > > */

/* vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > > */

/* vector<TCluster*,allocator<TCluster*> > */

/* vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTEventDict {
 public:
  G__Sizep2memfuncTEventDict(): p(&G__Sizep2memfuncTEventDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTEventDict::*p)();
};

size_t G__get_sizep2memfuncTEventDict()
{
  G__Sizep2memfuncTEventDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTEventDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TEventDictLN_TPlaneProperties))) {
     TPlaneProperties *G__Lderived;
     G__Lderived=(TPlaneProperties*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEventDictLN_TPlaneProperties),G__get_linked_tagnum(&G__TEventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TEventDictLN_TCluster))) {
     TCluster *G__Lderived;
     G__Lderived=(TCluster*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEventDictLN_TCluster),G__get_linked_tagnum(&G__TEventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TEventDictLN_TPlane))) {
     TPlane *G__Lderived;
     G__Lderived=(TPlane*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEventDictLN_TPlane),G__get_linked_tagnum(&G__TEventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TEventDictLN_TDetectorAlignment))) {
     TDetectorAlignment *G__Lderived;
     G__Lderived=(TDetectorAlignment*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEventDictLN_TDetectorAlignment),G__get_linked_tagnum(&G__TEventDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEventDictLN_TDetectorAlignment),G__get_linked_tagnum(&G__TEventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TEventDictLN_TEvent))) {
     TEvent *G__Lderived;
     G__Lderived=(TEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEventDictLN_TEvent),G__get_linked_tagnum(&G__TEventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TEventDictLN_ChannelScreen))) {
     ChannelScreen *G__Lderived;
     G__Lderived=(ChannelScreen*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEventDictLN_ChannelScreen),G__get_linked_tagnum(&G__TEventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TEventDictLN_TChannelMapping))) {
     TChannelMapping *G__Lderived;
     G__Lderived=(TChannelMapping*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEventDictLN_TChannelMapping),G__get_linked_tagnum(&G__TEventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TEventDictLN_TDiamondPattern))) {
     TDiamondPattern *G__Lderived;
     G__Lderived=(TDiamondPattern*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEventDictLN_TDiamondPattern),G__get_linked_tagnum(&G__TEventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TEventDictLN_TFiducialCut))) {
     TFiducialCut *G__Lderived;
     G__Lderived=(TFiducialCut*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEventDictLN_TFiducialCut),G__get_linked_tagnum(&G__TEventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TEventDictLN_TFidCutRegions))) {
     TFidCutRegions *G__Lderived;
     G__Lderived=(TFidCutRegions*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEventDictLN_TFidCutRegions),G__get_linked_tagnum(&G__TEventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TEventDictLN_TSettings))) {
     TSettings *G__Lderived;
     G__Lderived=(TSettings*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEventDictLN_TSettings),G__get_linked_tagnum(&G__TEventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TEventDictLN_TResults))) {
     TResults *G__Lderived;
     G__Lderived=(TResults*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEventDictLN_TResults),G__get_linked_tagnum(&G__TEventDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEventDictLN_TResults),G__get_linked_tagnum(&G__TEventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTEventDict() {

   /* Setting up typedef entry */
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",70,-1,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",70,-1,256,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",102,-1,1,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",102,-1,257,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",68,-1,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",68,-1,256,G__get_linked_tagnum(&G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",100,-1,1,G__get_linked_tagnum(&G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",100,-1,257,G__get_linked_tagnum(&G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",103,-1,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEboolcOallocatorlEboolgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEboolcOallocatorlEboolgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TEventDictLN_vectorlEboolcOallocatorlEboolgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEboolcOallocatorlEboolgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEboolcOallocatorlEboolgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",103,-1,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEboolcOallocatorlEboolgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",103,-1,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEboolcOallocatorlEboolgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEboolcOallocatorlEboolgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__TEventDictLN_vectorlEboolcOallocatorlEboolgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__TEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__TEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__TEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__TEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__TEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__TEventDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__TEventDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<UInt_t>",117,G__get_linked_tagnum(&G__TEventDictLN_dequelEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<unsigned int>",117,G__get_linked_tagnum(&G__TEventDictLN_dequelEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<Float_t>",117,G__get_linked_tagnum(&G__TEventDictLN_dequelEfloatcOallocatorlEfloatgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<Int_t>",117,G__get_linked_tagnum(&G__TEventDictLN_dequelEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<bool>",117,G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",103,-1,0,G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__TEventDictLN_allocatorlEboolgR),0,G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",71,-1,0,G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",71,-1,256,G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",103,-1,1,G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",103,-1,257,G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TCluster>",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__TEventDictLN_TCluster),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__TEventDictLN_TCluster),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__TEventDictLN_TCluster),256,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__TEventDictLN_TCluster),1,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__TEventDictLN_TCluster),257,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETClustercOallocatorlETClustergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETClustercOallocatorlETClustergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETClustercOallocatorlETClustergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETClustercOallocatorlETClustergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TPlane>",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__TEventDictLN_TPlane),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__TEventDictLN_TPlane),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__TEventDictLN_TPlane),256,G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__TEventDictLN_TPlane),1,G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__TEventDictLN_TPlane),257,G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETPlanecOallocatorlETPlanegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETPlanecOallocatorlETPlanegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETPlanecOallocatorlETPlanegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETPlanecOallocatorlETPlanegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__TEventDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__TEventDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<UInt_t,UInt_t>",117,G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",104,-1,0,G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",104,-1,0,G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPintcOunsignedsPintgR),0,G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__TEventDictLN_lesslEunsignedsPintgR),0,G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__TEventDictLN_allocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgR),0,G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,unsigned int>",117,G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,unsigned int,less<unsigned int> >",117,G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("channelContainer",117,G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR),0,G__get_linked_tagnum(&G__TEventDictLN_TChannelMapping));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,UInt_t>",117,G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPintcOunsignedsPintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<Int_t,Int_t>",117,G__get_linked_tagnum(&G__TEventDictLN_pairlEintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Float_t>",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<Float_t,Float_t>",117,G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<Float_t,Float_t> >",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<Float_t,Float_t> >",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR),256,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR),1,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR),257,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<float,float> >",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TFiducialCut*>",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",85,G__get_linked_tagnum(&G__TEventDictLN_TFiducialCut),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__TEventDictLN_TFiducialCut),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__TEventDictLN_TFiducialCut),256,G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",85,G__get_linked_tagnum(&G__TEventDictLN_TFiducialCut),1,G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",85,G__get_linked_tagnum(&G__TEventDictLN_TFiducialCut),257,G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TH1*>",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETH1mUcOallocatorlETH1mUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETH1mUcOallocatorlETH1mUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<Int_t,Int_t> >",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<Int_t,Int_t> >",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<int,int> >",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<std::string,std::string>",117,G__get_linked_tagnum(&G__TEventDictLN_pairlEstringcOstringgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<string,std::string>",117,G__get_linked_tagnum(&G__TEventDictLN_pairlEstringcOstringgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int> >",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<Int_t> >",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Int_t> >",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Int_t> >",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TPlaneProperties::enumCoordinate>",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanePropertiescLcLenumCoordinatecOallocatorlETPlanePropertiescLcLenumCoordinategRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETPlanePropertiescLcLenumCoordinatecOallocatorlETPlanePropertiescLcLenumCoordinategRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanePropertiescLcLenumCoordinatecOallocatorlETPlanePropertiescLcLenumCoordinategRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETPlanePropertiescLcLenumCoordinatecOallocatorlETPlanePropertiescLcLenumCoordinategRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanePropertiescLcLenumCoordinatecOallocatorlETPlanePropertiescLcLenumCoordinategRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TString>",117,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",117,G__get_linked_tagnum(&G__TEventDictLN_TString),0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",117,G__get_linked_tagnum(&G__TEventDictLN_TString),0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__TEventDictLN_pairlETStringcOTStringgR),0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__TEventDictLN_lesslETStringgR),0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__TEventDictLN_allocatorlEpairlEconstsPTStringcOTStringgRsPgR),0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TString,less<TString> >",117,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,inner_map>",117,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",117,G__get_linked_tagnum(&G__TEventDictLN_TString),0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",117,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__TEventDictLN_pairlETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgR),0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__TEventDictLN_lesslETStringgR),0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__TEventDictLN_allocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgR),0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > >",117,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString> >",117,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<Int_t>",117,G__get_linked_tagnum(&G__TEventDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,Int_t>",117,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",117,G__get_linked_tagnum(&G__TEventDictLN_TString),0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",105,-1,0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__TEventDictLN_pairlETStringcOintgR),0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__TEventDictLN_lesslETStringgR),0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__TEventDictLN_allocatorlEpairlEconstsPTStringcOintgRsPgR),0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,int>",117,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,int,less<TString> >",117,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,Float_t>",117,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",117,G__get_linked_tagnum(&G__TEventDictLN_TString),0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",102,-1,0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__TEventDictLN_pairlETStringcOfloatgR),0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__TEventDictLN_lesslETStringgR),0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__TEventDictLN_allocatorlEpairlEconstsPTStringcOfloatgRsPgR),0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,float>",117,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,float,less<TString> >",117,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,map<TString,TString> >",117,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UShort_t,Float_t>",117,G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPshortcOfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<int,Float_t>",117,G__get_linked_tagnum(&G__TEventDictLN_pairlEintcOfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<pair<int,Float_t> >",117,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__TEventDictLN_pairlEintcOfloatgR),0,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__TEventDictLN_allocatorlEpairlEintcOfloatgRsPgR),0,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__TEventDictLN_pairlEintcOfloatgR),0,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__TEventDictLN_pairlEintcOfloatgR),256,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__TEventDictLN_pairlEintcOfloatgR),1,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__TEventDictLN_pairlEintcOfloatgR),257,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<pair<int,float> >",117,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<pair<UShort_t,Float_t> >",117,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPshortcOfloatgR),0,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__TEventDictLN_allocatorlEpairlEunsignedsPshortcOfloatgRsPgR),0,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPshortcOfloatgR),0,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPshortcOfloatgR),256,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPshortcOfloatgR),1,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPshortcOfloatgR),257,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<pair<unsigned short,float> >",117,G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<Float_t,Float_t> >",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<TCluster> >",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR),256,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR),1,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR),257,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<TCluster,allocator<TCluster> > >",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TCluster*>",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",85,G__get_linked_tagnum(&G__TEventDictLN_TCluster),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__TEventDictLN_TCluster),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__TEventDictLN_TCluster),256,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",85,G__get_linked_tagnum(&G__TEventDictLN_TCluster),1,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",85,G__get_linked_tagnum(&G__TEventDictLN_TCluster),257,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<TCluster*> >",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR),256,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR),1,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR),257,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<TCluster*,allocator<TCluster*> > >",117,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TPlaneProperties */
static void G__setup_memvarTPlaneProperties(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_TPlaneProperties));
   { TPlaneProperties *p; p=(TPlaneProperties*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TEventDictLN_TPlanePropertiescLcLenumCoordinate),-1,-2,1,G__FastAllocString(2048).Format("X_COR=%lldLL",(long long)TPlaneProperties::X_COR).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TEventDictLN_TPlanePropertiescLcLenumCoordinate),-1,-2,1,G__FastAllocString(2048).Format("Y_COR=%lldLL",(long long)TPlaneProperties::Y_COR).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TEventDictLN_TPlanePropertiescLcLenumCoordinate),-1,-2,1,G__FastAllocString(2048).Format("Z_COR=%lldLL",(long long)TPlaneProperties::Z_COR).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TEventDictLN_TPlanePropertiescLcLenumCoordinate),-1,-2,1,G__FastAllocString(2048).Format("XY_COR=%lldLL",(long long)TPlaneProperties::XY_COR).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TEventDictLN_TPlanePropertiescLcLenumCoordinate),-1,-2,1,G__FastAllocString(2048).Format("UNKOWN_COR=%lldLL",(long long)TPlaneProperties::UNKOWN_COR).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TEventDictLN_TPlanePropertiescLcLenumDetectorType),-1,-2,1,G__FastAllocString(2048).Format("kUndefined=%lldLL",(long long)TPlaneProperties::kUndefined).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TEventDictLN_TPlanePropertiescLcLenumDetectorType),-1,-2,1,G__FastAllocString(2048).Format("kSilicon=%lldLL",(long long)TPlaneProperties::kSilicon).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TEventDictLN_TPlanePropertiescLcLenumDetectorType),-1,-2,1,G__FastAllocString(2048).Format("kDiamond=%lldLL",(long long)TPlaneProperties::kDiamond).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEventDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCluster */
static void G__setup_memvarTCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_TCluster));
   { TCluster *p; p=(TCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TEventDictLN_TClustercLcLcalculationMode_t),-1,-2,1,G__FastAllocString(2048).Format("maxValue=%lldLL",(long long)TCluster::maxValue).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TEventDictLN_TClustercLcLcalculationMode_t),-1,-2,1,G__FastAllocString(2048).Format("chargeWeighted=%lldLL",(long long)TCluster::chargeWeighted).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TEventDictLN_TClustercLcLcalculationMode_t),-1,-2,1,G__FastAllocString(2048).Format("highest2Centroid=%lldLL",(long long)TCluster::highest2Centroid).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TEventDictLN_TClustercLcLcalculationMode_t),-1,-2,1,G__FastAllocString(2048).Format("eta=%lldLL",(long long)TCluster::eta).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TEventDictLN_TClustercLcLcalculationMode_t),-1,-2,1,G__FastAllocString(2048).Format("corEta=%lldLL",(long long)TCluster::corEta).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TEventDictLN_TClustercLcLcalculationMode_t),-1,-2,1,G__FastAllocString(2048).Format("highest2CentroidNoSmallHits=%lldLL",(long long)TCluster::highest2CentroidNoSmallHits).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TEventDictLN_TClustercLcLdirection_t),-1,-2,1,G__FastAllocString(2048).Format("left=%lldLL",(long long)TCluster::left).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TEventDictLN_TClustercLcLdirection_t),-1,-2,1,G__FastAllocString(2048).Format("right=%lldLL",(long long)TCluster::right).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_dequelEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("deque<UInt_t>"),-1,4,"clusterChannel=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_dequelEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("deque<Float_t>"),-1,4,"clusterPedMean=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_dequelEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("deque<Float_t>"),-1,4,"clusterPedMeanCMN=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_dequelEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("deque<Float_t>"),-1,4,"clusterPedSigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_dequelEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("deque<Float_t>"),-1,4,"clusterPedSigmaCMN=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_dequelEintcOallocatorlEintgRsPgR),G__defined_typename("deque<Int_t>"),-1,4,"clusterADC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_dequelEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("deque<Float_t>"),-1,4,"clusterSignal=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_dequelEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("deque<Float_t>"),-1,4,"clusterSignalCMN=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_dequelEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("deque<Float_t>"),-1,4,"clusterSignalInSigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_dequelEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("deque<Float_t>"),-1,4,"clusterSignalInSigmaCMN=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR),G__defined_typename("deque<bool>"),-1,4,"clusterChannelScreened=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"numberOfSeeds=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"numberOfHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"numberOfNoHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"seedSigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"hitSigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isSaturated=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isGoldenGate=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isLumpy=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isChecked=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"hasBadChannel=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__TEventDictLN_TClustercLcLcalculationMode_t),-1,-1,4,"mode=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"verbosity=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"maximumSignal=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"maxChannel=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"revisionNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"nChannels=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"det=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"eventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"cmNoise=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"isTransparentCluster=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"transparentClusterSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEventDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* deque<bool,allocator<bool> > */
static void G__setup_memvardequelEboolcOallocatorlEboolgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR));
   { deque<bool,allocator<bool> > *p; p=(deque<bool,allocator<bool> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* TPlane */
static void G__setup_memvarTPlane(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_TPlane));
   { TPlane *p; p=(TPlane*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__TEventDictLN_TPlanePropertiescLcLenumDetectorType),-1,-1,4,"type=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"planeNo=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"verbosity=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR),G__defined_typename("vector<TCluster>"),-1,4,"xClusters=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR),G__defined_typename("vector<TCluster>"),-1,4,"yClusters=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEventDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<TCluster,allocator<TCluster> > */
static void G__setup_memvarvectorlETClustercOallocatorlETClustergRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR));
   { vector<TCluster,allocator<TCluster> > *p; p=(vector<TCluster,allocator<TCluster> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* TDetectorAlignment */
static void G__setup_memvarTDetectorAlignment(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_TDetectorAlignment));
   { TDetectorAlignment *p; p=(TDetectorAlignment*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"xResolution[6]=",0,"Planes");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"yResolution[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"xMean[6]=",0,"Planes");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"yMean[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"det_x_offset[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"det_y_offset[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"det_z_offset[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"vecDetXOffset[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"vecDetYOffset[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"vecDetZOffset[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"det_phix_offset[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"det_phiy_offset[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"vecDetPhiXOffset[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"vecDetPhiYOffset[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"nDetectors=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"runNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_TDatime),-1,-1,4,"diaTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_TDatime),-1,-1,4,"silTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"nUsedEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"alignmentTrainingTrackFraction=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"diaChi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<UInt_t>"),-1,4,"intervallBeginEventNo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<UInt_t>"),-1,4,"intervallEndEventNo=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"nDiamondAlignmentEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"nEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"verbosity=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEventDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TEvent */
static void G__setup_memvarTEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_TEvent));
   { TEvent *p; p=(TEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR),G__defined_typename("vector<TPlane>"),-1,4,"planes=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"eventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"verbosity=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEventDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<TPlane,allocator<TPlane> > */
static void G__setup_memvarvectorlETPlanecOallocatorlETPlanegRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR));
   { vector<TPlane,allocator<TPlane> > *p; p=(vector<TPlane,allocator<TPlane> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ChannelScreen */
static void G__setup_memvarChannelScreen(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_ChannelScreen));
   { ChannelScreen *p; p=(ChannelScreen*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"channel_switch[256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"det=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEventDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TChannelMapping */
static void G__setup_memvarTChannelMapping(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_TChannelMapping));
   { TChannelMapping *p; p=(TChannelMapping*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR),G__defined_typename("channelContainer"),-1,4,"mapVaToDet=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<UInt_t>"),-1,4,"vecVAChNo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<UInt_t>"),-1,4,"vecdetChNo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEventDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > > */
static void G__setup_memvarmaplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR));
   { map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > > *p; p=(map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* pair<unsigned int,unsigned int> */
static void G__setup_memvarpairlEunsignedsPintcOunsignedsPintgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPintcOunsignedsPintgR));
   { pair<unsigned int,unsigned int> *p; p=(pair<unsigned int,unsigned int>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),104,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),104,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDiamondPattern */
static void G__setup_memvarTDiamondPattern(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_TDiamondPattern));
   { TDiamondPattern *p; p=(TDiamondPattern*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"channelToMetricConversion=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"beginOfInterval=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"endOfInterval=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"firstChannelOfInterval=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"nChannelsOfInterval=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"pitchWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"bLoadedStandardPitchWidthSettings=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"standardPW=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"verbosity=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEventDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TFiducialCut */
static void G__setup_memvarTFiducialCut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_TFiducialCut));
   { TFiducialCut *p; p=(TFiducialCut*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"index=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"active=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"x_low=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"x_high=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"y_low=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"y_high=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_TString),-1,-1,4,"name=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEventDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TFidCutRegions */
static void G__setup_memvarTFidCutRegions(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_TFidCutRegions));
   { TFidCutRegions *p; p=(TFidCutRegions*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_string),-1,-1,4,"name=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"index=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR),G__defined_typename("vector<std::pair<Float_t,Float_t> >"),-1,4,"xInt=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR),G__defined_typename("vector<std::pair<Float_t,Float_t> >"),-1,4,"yInt=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"nDiamonds=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"nFidCuts=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR),G__defined_typename("vector<TFiducialCut*>"),-1,4,"fidCuts=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_string),-1,-1,4,"runDescription=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEventDictLN_TH2F),-1,-1,4,"hEventScatterPlot=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"verbosity=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"addionalCut_xLow=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"addionalCut_xHigh=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"addionalCut_yLow=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"addionalCut_yHigh=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEventDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<float,float> */
static void G__setup_memvarpairlEfloatcOfloatgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR));
   { pair<float,float> *p; p=(pair<float,float>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),102,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),102,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<pair<float,float>,allocator<pair<float,float> > > */
static void G__setup_memvarvectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR));
   { vector<pair<float,float>,allocator<pair<float,float> > > *p; p=(vector<pair<float,float>,allocator<pair<float,float> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<TFiducialCut*,allocator<TFiducialCut*> > */
static void G__setup_memvarvectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR));
   { vector<TFiducialCut*,allocator<TFiducialCut*> > *p; p=(vector<TFiducialCut*,allocator<TFiducialCut*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* TSettings */
static void G__setup_memvarTSettings(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_TSettings));
   { TSettings *p; p=(TSettings*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TEventDictLN_TSettingscLcLalignmentMode),-1,-2,1,G__FastAllocString(2048).Format("normalMode=%lldLL",(long long)TSettings::normalMode).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TEventDictLN_TSettingscLcLalignmentMode),-1,-2,1,G__FastAllocString(2048).Format("transparentMode=%lldLL",(long long)TSettings::transparentMode).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TEventDictLN_TSettingscLcLenumRunDescription),-1,-2,1,G__FastAllocString(2048).Format("leftDia=%lldLL",(long long)TSettings::leftDia).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TEventDictLN_TSettingscLcLenumRunDescription),-1,-2,1,G__FastAllocString(2048).Format("rightDia=%lldLL",(long long)TSettings::rightDia).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TEventDictLN_TSettingscLcLenumRunDescription),-1,-2,1,G__FastAllocString(2048).Format("allDia=%lldLL",(long long)TSettings::allDia).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TEventDictLN_TSettingscLcLenumRunDescription),-1,-2,1,G__FastAllocString(2048).Format("unknown=%lldLL",(long long)TSettings::unknown).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_string),-1,-1,4,"runDescription=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_string),-1,-1,4,"outputDir=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_string),-1,-1,4,"inputDir=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->b3dDiamond)-(long)(p)),103,0,0,-1,-1,-1,1,"b3dDiamond=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TEventDictLN_TSettingscLcLenumAlignmentTrainingMethod),-1,-2,1,G__FastAllocString(2048).Format("enumFraction=%lldLL",(long long)TSettings::enumFraction).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TEventDictLN_TSettingscLcLenumAlignmentTrainingMethod),-1,-2,1,G__FastAllocString(2048).Format("enumEvents=%lldLL",(long long)TSettings::enumEvents).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_TString),-1,-1,4,"diamondName=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"voltage=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEventDictLN_TFidCutRegions),-1,-1,4,"fidCutsSelection=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEventDictLN_TFidCutRegions),-1,-1,4,"fidCuts3DEdge=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEventDictLN_TFidCutRegions),-1,-1,4,"fidCuts3DMetallisation=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR),-1,-1,4,"OverlayRange3d=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEventDictLN_TMacro),-1,-1,4,"macro=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"store_threshold=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"minAbsEtaVal=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isStandardSelectionFidCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isStandardArea=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isStandard3dEdgeFidCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isStandard3dMetallisationFidCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isEventSkipCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_string),-1,-1,4,"path=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_string),-1,-1,4,"fileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEventDictLN_TSystem),-1,-1,4,"sys=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEventDictLN_TFile),-1,-1,4,"settingsFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"bRerunSelection=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"bUseUserResolutionInput=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"bTransparentAlignment=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"detectorsToAlign=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"bAsymmetricSample=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"chi2Cut3D=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"chi2Cut3D_X=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"chi2Cut3D_Y=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"transparentChi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR),G__defined_typename("vector<std::pair<Int_t,Int_t> >"),-1,4,"vecDiaDetectorAreasInChannel=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Int_t> >"),-1,4,"vecAlignmentIgnoreChannels=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"bResetAlignment=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"alignmentPrecision_Offset=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"alignmentPrecision_Angle=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"bDoAllAlignmentPlots=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"siliconAlignmentSteps=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"diamondAlignmentSteps=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nDiamonds=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"SaveAllFilesSwitch=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ClosePlotsOnSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"IndexProduceSwitch=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fix_dia_noise=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Iter_Size=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Taylor_speed_throttle=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"dia_input=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Si_Pedestal_Hit_Factor=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Di_Pedestal_Hit_Factor=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"single_channel_analysis_enable=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"single_channel_analysis_eventwindow=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"single_channel_analysis_channels=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"DO_CMC=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"CMN_cut=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"CMN_corr_low=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"CMN_corr_high=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Si_Cluster_Seed_Factor=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Si_Cluster_Hit_Factor=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Di_Cluster_Seed_Factor=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Di_Cluster_Hit_Factor=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"si_avg_fidcut_xlow=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"si_avg_fidcut_xhigh=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"si_avg_fidcut_ylow=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"si_avg_fidcut_yhigh=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"pulse_height_num_bins=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"pulse_height_si_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"pulse_height_di_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"snr_distribution_si_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"snr_distribution_di_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eta_lowq_slice_low=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eta_lowq_slice_hi=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eta_hiq_slice_low=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eta_hiq_slice_hi=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"etavsq_n_landau_slices=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"snr_plots_enable=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"bAnalyseAlignmentEvents=",0,"DA:");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"bEventBinWidth=",0,"DA:");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"bEventwiseStart=",0,"DA:");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"bEventwiseStop=",0,"DA:");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"bDoEventwise=",0,"DA:");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR),G__defined_typename("vector<std::pair<Int_t,Int_t> >"),-1,4,"bSkipEvents=",0,"DA:");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"alignment_x_offsets=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"alignment_y_offsets=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"alignment_phi_offsets=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"alignment_z_offsets=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"alignment_resolutions=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"alignmentFidCuts=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"alignment_training_track_fraction=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"alignment_training_track_number=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__TEventDictLN_TSettingscLcLenumAlignmentTrainingMethod),-1,-1,4,"trainingMethod=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"Det_channel_screen_channels[9]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"Dia_channel_not_connected=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"Dia_channel_noisy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_ChannelScreen),-1,-1,4,"Det_channel_screen[9]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"dia_x_aligned=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"eta_correction=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"alignment_chi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"UseAutoFidCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"AlternativeClustering=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"plotChannel_on=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"res_keep_factor=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"plotDiamond=",0,"make Buffer Noise plots for the diamond instead");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"makeBufferPlots=",0,"make Buffer Plot whenever sigma and rms differ by rms_sigma_difference_cut");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"SingleChannel2000plots=",0,"make SC_Pedestal plots for all silicon detectors and channels");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"makeDiamondPlots=",0,"make DC_Pedestal plots for all diamond channels");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"makeHits2D=",0,"make 2D histogram of hits and seeds");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"makeNoise2D=",0,"make 2D histogram of noise per channel");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"makePullDist=",0,"make pull distribution");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"makePedRMSTree=",0,"make .root file of pedestal and rms values");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eventPrintHex=",0,"print hex (should match .rz data)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"plottedChannel=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"maxBufferPlots=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"rms_sigma_difference_cut=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"high_rms_cut=",0,"cut on absolute rms value instead of comparing to Gaussian");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"rms_cut=",0,"value to use if high_rms_cut");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"zoomDiamondPlots=",0,"zoom in on DC_Pedestal (100 event / window)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"singleTrack2D=",0,"plot single tracks only in 2D hits histogram");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"singleTrack2DmaxClusterSize=",0,"max size of clusters in silicon track (cluster = Di_Hit_Factor hits; no check for seeds/shoulders)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"maxNoise2D=",0,"highest noise value plotted in 2D noise histogram");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"runNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"clusterHitFactors=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"clusterSeedFactors=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"vecClusterSeedFactorsDia=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"vecClusterHitFactorsDia=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEventDictLN_TChannelMapping),-1,-1,4,"diamondMapping=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"pitchWidthSil=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"pitchWidthDia=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_TString),-1,-1,4,"currentBegin=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_TString),-1,-1,4,"currentEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"repeaterCardNo=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"bPaperMode=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"align_sil_fid_xlow=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"align_sil_fid_xhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"align_sil_fid_ylow=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"align_sil_fid_yhi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->diamondPattern)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TEventDictLN_TDiamondPattern),-1,-1,1,"diamondPattern=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"verbosity=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"silPitchWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"diaPitchWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"diaOffsetMetricSpace=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"diaStartingChannel=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"yOffset3D=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"stripAnalysisFidCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"TDnHAnalysisFidCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"TDwHAnalysisFidCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"b3dShortAnalysis=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"b3dLongAnalysis=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"b3dTransparentAnalysis=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"nRows3d=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"nColumns3d=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"columnRadius=",0,"in mum");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"MaxOverlayClusterSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"CentralColumnOverlayXLow=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"CentralColumnOverlayXHigh=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"CentralColumnOverlayYLow=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"CentralColumnOverlayYHigh=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"CentralColumnOverlayXBins=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"CentralColumnOverlayYBins=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"BiasColumnOverlayXLow=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"BiasColumnOverlayXHigh=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"BiasColumnOverlayYLow=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"BiasColumnOverlayYHigh=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"OverlayOffsetX=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"OverlayOffsetY=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"OverlayColumnPulseHeightCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"badCells3d=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"badCells3dnH=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"goodCells3d=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<vector<Int_t> >"),-1,4,"goodCellRegions3d=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"deadCell3d=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanePropertiescLcLenumCoordinatecOallocatorlETPlanePropertiescLcLenumCoordinategRsPgR),G__defined_typename("vector<TPlaneProperties::enumCoordinate>"),-1,4,"vecEdgePositionType=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,4,"vecEdgePositionName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"vecEdgePositionDetector=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"cellHeight=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"minimumEdgeDistance=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"adcToElectronConversion=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_TString),-1,-1,4,"PathExtension3d=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"resolutionSNR=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"lowResponseThreshold=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"negativeChargeCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"negativeChargeCutStrip=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR),G__defined_typename("pair<Float_t,Float_t>"),-1,4,"responseWindow=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->centralRegion3DnH)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TEventDictLN_TFiducialCut),-1,-1,1,"centralRegion3DnH=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEventDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > */
static void G__setup_memvarmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR));
   { map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > *p; p=(map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > > */
static void G__setup_memvarmaplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR));
   { map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > > *p; p=(map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* TResults */
static void G__setup_memvarTResults(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_TResults));
   { TResults *p; p=(TResults*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_TString),-1,-1,4,"rootFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_TString),-1,-1,4,"runDescription=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_TDetectorAlignment),-1,-1,4,"alignment=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_TDatime),-1,-1,4,"lastUpdate=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_string),-1,-1,4,"path=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"runnumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"seedSigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"hitSigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"noise=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"diaCMCNoise=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"CMN=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"clusterSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"clusterSeedSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"nClusters=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"clusterPHmean=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"clusterPHwidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"signalFeedOverCorrection=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"nAllEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"nNoSiliconHit=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"nOneAndOnlyOneSiliconNotFiducialCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"nValidSiliconTrack=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"nNoDiamondHit=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"nMoreThanOneDiamondHit=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"nExactlyOneDiamondHit=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"nUseForAlignment=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"nUseForAnalysis=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mean_clustered_normal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mp_clustered_normal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"width_clustered_normal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"gSigma_clustered_normal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mean_clustered_trans=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mp_clustered_trans=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"width_clustered_trans=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"gSigma_clustered_trans=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mean2outOf10_normal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mp2outOf10_normal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"width2outOf10_normal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"gSigma2outOf10_normal=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"meanNoutOfN_normal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mean2outOf10_trans=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mp2outOf10_trans=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"width2outOf10_trans=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"gSigma2outOf10_trans=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"meanNoutOfN_trans=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_TString),-1,-1,4,"textFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_TString),-1,-1,4,"resultsFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"doubleGaus1_normal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"doubleGaus2_normal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"doubleGaus1_trans=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"doubleGaus2_trans=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"singleGausFixed_normal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"singleGausFixed_trans=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"singleGausShort_normal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"singleGausShort_trans=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"singleGausFWTM_normal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"singleGausFWTM_trans=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"singleGaus_normal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"singleGaus_trans=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"repeaterCard=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"voltage=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_TString),-1,-1,4,"diamondName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_pairlEintcOintgR),G__defined_typename("pair<Int_t,Int_t>"),-1,4,"diamondChannels=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR),G__defined_typename("set<Int_t>"),-1,4,"maskedChannels=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR),G__defined_typename("set<Int_t>"),-1,4,"noisyChannels=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR),G__defined_typename("set<Int_t>"),-1,4,"notConnectedChannels=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),G__defined_typename("map<TString,Int_t>"),-1,4,"IntegerMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR),G__defined_typename("map<TString,Float_t>"),-1,4,"FloatMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),G__defined_typename("map<TString,TString>"),-1,4,"StringMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("outer_map"),-1,4,"keyList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEventDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* map<TString,int,less<TString>,allocator<pair<const TString,int> > > */
static void G__setup_memvarmaplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR));
   { map<TString,int,less<TString>,allocator<pair<const TString,int> > > *p; p=(map<TString,int,less<TString>,allocator<pair<const TString,int> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* map<TString,float,less<TString>,allocator<pair<const TString,float> > > */
static void G__setup_memvarmaplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR));
   { map<TString,float,less<TString>,allocator<pair<const TString,float> > > *p; p=(map<TString,float,less<TString>,allocator<pair<const TString,float> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* pair<unsigned short,float> */
static void G__setup_memvarpairlEunsignedsPshortcOfloatgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPshortcOfloatgR));
   { pair<unsigned short,float> *p; p=(pair<unsigned short,float>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),114,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),102,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<int,float> */
static void G__setup_memvarpairlEintcOfloatgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_pairlEintcOfloatgR));
   { pair<int,float> *p; p=(pair<int,float>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),105,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),102,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* deque<pair<int,float>,allocator<pair<int,float> > > */
static void G__setup_memvardequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR));
   { deque<pair<int,float>,allocator<pair<int,float> > > *p; p=(deque<pair<int,float>,allocator<pair<int,float> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > > */
static void G__setup_memvardequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR));
   { deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > > *p; p=(deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > > */
static void G__setup_memvarvectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR));
   { vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > > *p; p=(vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<TCluster*,allocator<TCluster*> > */
static void G__setup_memvarvectorlETClustermUcOallocatorlETClustermUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR));
   { vector<TCluster*,allocator<TCluster*> > *p; p=(vector<TCluster*,allocator<TCluster*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > > */
static void G__setup_memvarvectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR));
   { vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > > *p; p=(vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTEventDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTPlaneProperties(void) {
   /* TPlaneProperties */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_TPlaneProperties));
   G__memfunc_setup("TPlaneProperties",1649,G__TEventDict_275_0_1, 105, G__get_linked_tagnum(&G__TEventDictLN_TPlaneProperties), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("startsWith",1085,G__TEventDict_275_0_2, 103, -1, -1, 0, 2, 3, 1, 0, 
"u 'string' - 11 - haystack u 'string' - 11 - needle", (char*)NULL, (void*) G__func2void( (bool (*)(const string&, const string&))(&TPlaneProperties::startsWith) ), 0);
   G__memfunc_setup("getDetNo",794,G__TEventDict_275_0_3, 104, -1, G__defined_typename("UInt_t"), 0, 2, 3, 1, 0, 
"i 'TPlaneProperties::enumCoordinate' - 0 - cor h - 'UInt_t' 0 - plane", (char*)NULL, (void*) G__func2void( (UInt_t (*)(TPlaneProperties::enumCoordinate, UInt_t))(&TPlaneProperties::getDetNo) ), 0);
   G__memfunc_setup("getStripDistance",1661,G__TEventDict_275_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 3, 1, 0, "", "strip distance in mum", (void*) G__func2void( (Double_t (*)())(&TPlaneProperties::getStripDistance) ), 0);
   G__memfunc_setup("getNChannelsSilicon",1931,G__TEventDict_275_0_5, 104, -1, G__defined_typename("UInt_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (UInt_t (*)())(&TPlaneProperties::getNChannelsSilicon) ), 0);
   G__memfunc_setup("getNChannelsDiamond",1910,G__TEventDict_275_0_6, 104, -1, G__defined_typename("UInt_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (UInt_t (*)())(&TPlaneProperties::getNChannelsDiamond) ), 0);
   G__memfunc_setup("getNChannels",1210,G__TEventDict_275_0_7, 104, -1, G__defined_typename("UInt_t"), 0, 1, 3, 1, 0, "h - 'UInt_t' 0 - det", (char*)NULL, (void*) G__func2void( (UInt_t (*)(UInt_t))(&TPlaneProperties::getNChannels) ), 0);
   G__memfunc_setup("getMaxSignalHeightSilicon",2542,G__TEventDict_275_0_8, 104, -1, G__defined_typename("UInt_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (UInt_t (*)())(&TPlaneProperties::getMaxSignalHeightSilicon) ), 0);
   G__memfunc_setup("getMaxSignalHeightDiamond",2521,G__TEventDict_275_0_9, 104, -1, G__defined_typename("UInt_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (UInt_t (*)())(&TPlaneProperties::getMaxSignalHeightDiamond) ), 0);
   G__memfunc_setup("getMaxSignalHeight",1821,G__TEventDict_275_0_10, 105, -1, G__defined_typename("Int_t"), 0, 1, 3, 1, 0, "h - 'UInt_t' 0 - det", (char*)NULL, (void*) G__func2void( (Int_t (*)(UInt_t))(&TPlaneProperties::getMaxSignalHeight) ), 0);
   G__memfunc_setup("getPlaneNumber",1433,G__TEventDict_275_0_11, 104, -1, G__defined_typename("UInt_t"), 0, 1, 3, 1, 0, "h - 'UInt_t' 0 - det", (char*)NULL, (void*) G__func2void( (UInt_t (*)(UInt_t))(&TPlaneProperties::getPlaneNumber) ), 0);
   G__memfunc_setup("getNSiliconPlanes",1730,G__TEventDict_275_0_12, 104, -1, G__defined_typename("UInt_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (UInt_t (*)())(&TPlaneProperties::getNSiliconPlanes) ), 0);
   G__memfunc_setup("getNPlanes",1009,G__TEventDict_275_0_13, 104, -1, G__defined_typename("UInt_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (UInt_t (*)())(&TPlaneProperties::getNPlanes) ), 0);
   G__memfunc_setup("getNSiliconDetectors",2060,G__TEventDict_275_0_14, 104, -1, G__defined_typename("UInt_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (UInt_t (*)())(&TPlaneProperties::getNSiliconDetectors) ), 0);
   G__memfunc_setup("getDetDiamond",1305,G__TEventDict_275_0_15, 104, -1, G__defined_typename("UInt_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (UInt_t (*)())(&TPlaneProperties::getDetDiamond) ), 0);
   G__memfunc_setup("getDiamondPlane",1516,G__TEventDict_275_0_16, 104, -1, G__defined_typename("UInt_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (UInt_t (*)())(&TPlaneProperties::getDiamondPlane) ), 0);
   G__memfunc_setup("getSiliconPlaneVector",2164,G__TEventDict_275_0_17, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), G__defined_typename("vector<UInt_t>"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (vector<UInt_t> (*)())(&TPlaneProperties::getSiliconPlaneVector) ), 0);
   G__memfunc_setup("getNDetectors",1339,G__TEventDict_275_0_18, 104, -1, G__defined_typename("UInt_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (UInt_t (*)())(&TPlaneProperties::getNDetectors) ), 0);
   G__memfunc_setup("getMaxTransparentClusterSize",2933,G__TEventDict_275_0_19, 104, -1, G__defined_typename("UInt_t"), 0, 1, 3, 1, 0, "h - 'UInt_t' 0 - det", (char*)NULL, (void*) G__func2void( (UInt_t (*)(UInt_t))(&TPlaneProperties::getMaxTransparentClusterSize) ), 0);
   G__memfunc_setup("getCoordinateString",1983,G__TEventDict_275_0_20, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 1, 3, 1, 0, "i 'TPlaneProperties::enumCoordinate' - 0 - cor", (char*)NULL, (void*) G__func2void( (string (*)(TPlaneProperties::enumCoordinate))(&TPlaneProperties::getCoordinateString) ), 0);
   G__memfunc_setup("getDetectortypeString",2227,G__TEventDict_275_0_21, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 1, 3, 1, 0, "i 'TPlaneProperties::enumDetectorType' - 0 - type", (char*)NULL, (void*) G__func2void( (string (*)(TPlaneProperties::enumDetectorType))(&TPlaneProperties::getDetectortypeString) ), 0);
   G__memfunc_setup("getDetectorNameString",2162,G__TEventDict_275_0_22, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 1, 3, 1, 0, "h - 'UInt_t' 0 - det", (char*)NULL, (void*) G__func2void( (string (*)(UInt_t))(&TPlaneProperties::getDetectorNameString) ), 0);
   G__memfunc_setup("getStringForDetector",2072,G__TEventDict_275_0_23, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 1, 3, 1, 0, "i - - 0 - i", (char*)NULL, (void*) G__func2void( (string (*)(int))(&TPlaneProperties::getStringForDetector) ), 0);
   G__memfunc_setup("isSiliconDetector",1767,G__TEventDict_275_0_24, 103, -1, -1, 0, 1, 3, 1, 0, "h - 'UInt_t' 0 - det", (char*)NULL, (void*) G__func2void( (bool (*)(UInt_t))(&TPlaneProperties::isSiliconDetector) ), 0);
   G__memfunc_setup("isSiliconPlane",1437,G__TEventDict_275_0_25, 103, -1, -1, 0, 1, 3, 1, 0, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) G__func2void( (bool (*)(UInt_t))(&TPlaneProperties::isSiliconPlane) ), 0);
   G__memfunc_setup("isDiamondDetector",1746,G__TEventDict_275_0_26, 103, -1, -1, 0, 1, 3, 1, 0, "h - 'UInt_t' 0 - det", (char*)NULL, (void*) G__func2void( (bool (*)(UInt_t))(&TPlaneProperties::isDiamondDetector) ), 0);
   G__memfunc_setup("isDiamondPlane",1416,G__TEventDict_275_0_27, 103, -1, -1, 0, 1, 3, 1, 0, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) G__func2void( (bool (*)(UInt_t))(&TPlaneProperties::isDiamondPlane) ), 0);
   G__memfunc_setup("isSaturated",1161,G__TEventDict_275_0_28, 103, -1, -1, 0, 2, 3, 1, 0, 
"h - 'UInt_t' 0 - det i - 'Int_t' 0 - adcValue", (char*)NULL, (void*) G__func2void( (bool (*)(UInt_t, Int_t))(&TPlaneProperties::isSaturated) ), 0);
   G__memfunc_setup("AreAllSiliconPlanes",1893,G__TEventDict_275_0_29, 103, -1, -1, 0, 1, 3, 1, 0, "u 'vector<unsigned int,allocator<unsigned int> >' 'vector<UInt_t>' 0 - planes", (char*)NULL, (void*) G__func2void( (bool (*)(vector<UInt_t>))(&TPlaneProperties::AreAllSiliconPlanes) ), 0);
   G__memfunc_setup("GetMinInvalidSignal",1897,G__TEventDict_275_0_30, 102, -1, G__defined_typename("Float_t"), 0, 1, 3, 1, 0, "h - 'UInt_t' 0 - det", (char*)NULL, (void*) G__func2void( (Float_t (*)(UInt_t))(&TPlaneProperties::GetMinInvalidSignal) ), 0);
   G__memfunc_setup("IsValidChannel",1381,G__TEventDict_275_0_31, 103, -1, -1, 0, 2, 3, 1, 0, 
"h - 'UInt_t' 0 - det h - 'UInt_t' 0 - ch", (char*)NULL, (void*) G__func2void( (bool (*)(UInt_t, UInt_t))(&TPlaneProperties::IsValidChannel) ), 0);
   G__memfunc_setup("Class",502,G__TEventDict_275_0_32, 85, G__get_linked_tagnum(&G__TEventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TPlaneProperties::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEventDict_275_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPlaneProperties::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEventDict_275_0_34, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TPlaneProperties::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEventDict_275_0_35, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPlaneProperties::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TEventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEventDict_275_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEventDict_275_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPlaneProperties::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEventDict_275_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPlaneProperties::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEventDict_275_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPlaneProperties::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEventDict_275_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPlaneProperties::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TPlaneProperties", 1649, G__TEventDict_275_0_44, (int) ('i'), G__get_linked_tagnum(&G__TEventDictLN_TPlaneProperties), -1, 0, 1, 1, 1, 0, "u 'TPlaneProperties' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TPlaneProperties", 1775, G__TEventDict_275_0_45, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TEventDict_275_0_46, (int) ('u'), G__get_linked_tagnum(&G__TEventDictLN_TPlaneProperties), -1, 1, 1, 1, 1, 0, "u 'TPlaneProperties' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCluster(void) {
   /* TCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_TCluster));
   G__memfunc_setup("TCLUSTER_REVISION",1348,G__TEventDict_309_0_1, 104, -1, G__defined_typename("UInt_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (UInt_t (*)())(&TCluster::TCLUSTER_REVISION) ), 0);
   G__memfunc_setup("TCluster",822,G__TEventDict_309_0_2, 105, G__get_linked_tagnum(&G__TEventDictLN_TCluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TCluster",822,G__TEventDict_309_0_3, 105, G__get_linked_tagnum(&G__TEventDictLN_TCluster), -1, 0, 6, 1, 1, 0, 
"i - - 0 - eventNumber b - 'UChar_t' 0 - det "
"i - - 0 '10' seedSigma i - - 0 '7' hitSigma "
"h - 'UInt_t' 0 '256' nChannels f - - 0 '0' cmNoise", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TCluster",822,G__TEventDict_309_0_4, 105, G__get_linked_tagnum(&G__TEventDictLN_TCluster), -1, 0, 1, 1, 1, 0, "u 'TCluster' - 11 - a", "COPY Constructor", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TEventDict_309_0_5, 117, G__get_linked_tagnum(&G__TEventDictLN_TCluster), -1, 1, 1, 1, 1, 0, "u 'TCluster' - 11 - src", "class assignment function", (void*) NULL, 0);
   G__memfunc_setup("addChannel",994,G__TEventDict_309_0_6, 121, -1, -1, 0, 8, 1, 1, 0, 
"h - 'UInt_t' 0 - channel f - 'Float_t' 0 - pedMean "
"f - 'Float_t' 0 - pedSigma f - 'Float_t' 0 - pedMeanCMN "
"f - 'Float_t' 0 - pedSigmaCMN i - 'Int_t' 0 - adcValue "
"g - - 0 - bSaturated g - - 0 - isScreened", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPosition",1173,G__TEventDict_309_0_7, 102, -1, G__defined_typename("Float_t"), 0, 3, 1, 1, 0, 
"g - - 0 - cmnCorrected i 'TCluster::calculationMode_t' - 0 'highest2Centroid' mode "
"U 'TH1F' - 0 '0' histo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__TEventDict_309_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isLumpyCluster",1493,G__TEventDict_309_0_9, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isGoldenGateCluster",1944,G__TEventDict_309_0_10, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasSaturatedChannels",2069,G__TEventDict_309_0_11, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDetector",1146,G__TEventDict_309_0_12, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCrossTalkCorrectedCluster",2899,G__TEventDict_309_0_13, 117, G__get_linked_tagnum(&G__TEventDictLN_TCluster), -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - alpha", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCharge",906,G__TEventDict_309_0_14, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"g - - 0 'false' cmnCorrected g - - 0 'false' useSmallSignals", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCharge",906,G__TEventDict_309_0_15, 102, -1, G__defined_typename("Float_t"), 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - clusters g - - 0 'false' cmnCorrected "
"g - - 0 'false' useSmallSignals", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCharge",906,G__TEventDict_309_0_16, 102, -1, G__defined_typename("Float_t"), 0, 3, 1, 1, 0, 
"i - - 0 - clusters g - - 0 'false' cmnCorrected "
"g - - 0 'false' useSmallSignals", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPositiveCharge",1757,G__TEventDict_309_0_17, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"g - - 0 'false' cmnCorrected g - - 0 'false' useSmallSignals", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPositiveCharge",1757,G__TEventDict_309_0_18, 102, -1, G__defined_typename("Float_t"), 0, 3, 1, 1, 0, 
"i - - 0 - clusters g - - 0 'false' cmnCorrected "
"g - - 0 'false' useSmallSignals", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPositiveCharge",1757,G__TEventDict_309_0_19, 102, -1, G__defined_typename("Float_t"), 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - clusters g - - 0 'false' cmnCorrected "
"g - - 0 'false' useSmallSignals", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTransparentCharge",2076,G__TEventDict_309_0_20, 102, -1, G__defined_typename("Float_t"), 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - clusters g - - 0 - cmnCorrected "
"g - - 0 - useSmallSignals", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasNegativeCharge",1721,G__TEventDict_309_0_21, 103, -1, -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 1 - charge i - 'Int_t' 1 - clPos "
"g - - 0 'false' cmnCorrected g - - 0 'false' verb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPositionCalulation",2221,G__TEventDict_309_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "i 'TCluster::calculationMode_t' - 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__TEventDict_309_0_23, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("seedSize",828,G__TEventDict_309_0_24, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateHighestSignalChannel",2630,G__TEventDict_309_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHighestSignalChannel",2339,G__TEventDict_309_0_26, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHighestSignalChannelTransparentCluster",4215,G__TEventDict_309_0_27, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHighestSignalNeighbourChannel",3270,G__TEventDict_309_0_28, 104, -1, G__defined_typename("UInt_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - channelNo g - - 0 'false' cmnCorrected", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHighestSignalNeighbourClusterPosition",4164,G__TEventDict_309_0_29, 104, -1, G__defined_typename("UInt_t"), 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - clPos g - - 0 'false' cmnCorrected "
"g - - 0 'false' bNegativeSignals", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChargeWeightedMean",2108,G__TEventDict_309_0_30, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"g - - 0 - cmnCorrected g - - 0 'false' useNonHits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEtaPostion",1350,G__TEventDict_309_0_31, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "g - - 0 'false' cmnCorrected", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPositionCorEta",1747,G__TEventDict_309_0_32, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"g - - 0 - cmnCorrected U 'TH1F' - 0 '0' histo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkCluster",1248,G__TEventDict_309_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isSeed",605,G__TEventDict_309_0_34, 103, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - cl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isHit",513,G__TEventDict_309_0_35, 103, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - cl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSignalOfChannel",1804,G__TEventDict_309_0_36, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - channe g - - 0 'false' cmnCorrected", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSmallestChannelNumber",2471,G__TEventDict_309_0_37, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHighestChannelNumber",2350,G__TEventDict_309_0_38, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHighestSignal",1642,G__TEventDict_309_0_39, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "g - - 0 'false' cmnCorrected", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSignal",926,G__TEventDict_309_0_40, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - clusterPos g - - 0 'false' cmnCorrected", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSNR",563,G__TEventDict_309_0_41, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - clusterPos g - - 0 'false' cmnCorrected", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCMN",542,G__TEventDict_309_0_42, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPedestalMean",1523,G__TEventDict_309_0_43, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - clusterPos g - - 0 'false' cmnCorrected", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPedestalSigma",1635,G__TEventDict_309_0_44, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - clusterPos g - - 0 'false' cmnCorrected", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAdcValue",1093,G__TEventDict_309_0_45, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - clusterPos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHighestHitClusterPosition",2920,G__TEventDict_309_0_46, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHighestHitClusterPositionTransparentCluster",4828,G__TEventDict_309_0_47, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getClusterPosition",1911,G__TEventDict_309_0_48, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - channelNo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChannel",1017,G__TEventDict_309_0_49, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - clusterPos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFirstHitChannel",1830,G__TEventDict_309_0_50, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLastHitChannel",1714,G__TEventDict_309_0_51, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHitSigma",1110,G__TEventDict_309_0_52, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSeedSigma",1202,G__TEventDict_309_0_53, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHitSigma",1122,G__TEventDict_309_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - hitSigma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSeedSigma",1214,G__TEventDict_309_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - seedSigma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isSaturatedCluster",1899,G__TEventDict_309_0_56, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isBadChannelCluster",1918,G__TEventDict_309_0_57, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isScreened",1029,G__TEventDict_309_0_58, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isScreened",1029,G__TEventDict_309_0_59, 103, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - cl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHighest2Centroid",1910,G__TEventDict_309_0_60, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"g - - 0 'false' cmnCorrected g - - 0 'true' useSmallSignals", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__TEventDict_309_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Intent",626,G__TEventDict_309_0_62, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 1, 3, 1, 0, "h - 'UInt_t' 0 - level", (char*)NULL, (void*) G__func2void( (string (*)(UInt_t))(&TCluster::Intent) ), 0);
   G__memfunc_setup("getReversedEta",1434,G__TEventDict_309_0_63, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "g - - 0 'false' cmnCorrected", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getReversedEta",1434,G__TEventDict_309_0_64, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 1 - rightChannel g - - 0 'false' cmnCorrected", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEta",602,G__TEventDict_309_0_65, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "g - - 0 'false' cmnCorrected", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEta",602,G__TEventDict_309_0_66, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 1 - leftChannel g - - 0 'false' cmnCorrected", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEta",602,G__TEventDict_309_0_67, 102, -1, G__defined_typename("Float_t"), 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - clusPos i - 'Int_t' 1 - leftChannel "
"g - - 0 'false' cmnCorrected", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getClusterSize",1469,G__TEventDict_309_0_68, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVerbosity",1299,G__TEventDict_309_0_69, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - verbosity", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLeftEta",997,G__TEventDict_309_0_70, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "g - - 0 'false' cmnCorrected", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRightEta",1112,G__TEventDict_309_0_71, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "g - - 0 'false' cmnCorrected", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getValueOfHisto",1529,G__TEventDict_309_0_72, 102, -1, G__defined_typename("Float_t"), 0, 2, 3, 1, 0, 
"f - 'Float_t' 0 - x U 'TH1F' - 0 - histo", (char*)NULL, (void*) G__func2void( (Float_t (*)(Float_t, TH1F*))(&TCluster::getValueOfHisto) ), 0);
   G__memfunc_setup("getEventNumber",1451,G__TEventDict_309_0_73, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasInvalidReadout",1751,G__TEventDict_309_0_74, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTransparentCluster",2096,G__TEventDict_309_0_75, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTransparentHitPosition",2604,G__TEventDict_309_0_76, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTransparentCluster",2208,G__TEventDict_309_0_77, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - startChannel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTransparentClusterSize",2619,G__TEventDict_309_0_78, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTransparentClusterSize",2607,G__TEventDict_309_0_79, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxTransparentClusterSize",2901,G__TEventDict_309_0_80, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTransparentClusterPosition",3081,G__TEventDict_309_0_81, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' clusterNo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsValidTransparentClusterPosition",3445,G__TEventDict_309_0_82, 103, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - clusterPosition", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDirection",1249,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__TEventDictLN_TClustercLcLdirection_t), -1, 0, 1, 1, 4, 0, "h - 'UInt_t' 0 - clusterPosition", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChargeStartingAt",1931,(G__InterfaceMethod) NULL, 102, -1, G__defined_typename("Float_t"), 0, 6, 1, 4, 0, 
"h - 'UInt_t' 0 - nChannels h - 'UInt_t' 0 - startingClusterPos "
"i 'TCluster::direction_t' - 0 - direction g - - 0 - noNegativeCharge "
"g - - 0 - useCMcorrection g - - 0 - useSmallSignals", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialiseNewCluster",2103,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkForGoldenGate",1791,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkForLumpyCluster",2078,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkClusterForSize",1954,(G__InterfaceMethod) NULL, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TEventDict_309_0_89, 85, G__get_linked_tagnum(&G__TEventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEventDict_309_0_90, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEventDict_309_0_91, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEventDict_309_0_92, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TEventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEventDict_309_0_96, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEventDict_309_0_97, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEventDict_309_0_98, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEventDict_309_0_99, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEventDict_309_0_100, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCluster::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TCluster", 948, G__TEventDict_309_0_101, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdequelEboolcOallocatorlEboolgRsPgR(void) {
   /* deque<bool,allocator<bool> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR));
   G__memfunc_setup("deque<bool,allocator<bool> >",2669,G__TEventDict_315_0_1, 105, G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<bool,allocator<bool> >",2669,G__TEventDict_315_0_2, 105, G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'deque<bool,allocator<bool> >::size_type' 0 - n g - - 11 'bool()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<bool,allocator<bool> >",2669,G__TEventDict_315_0_3, 105, G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR), -1, 0, 2, 1, 1, 0, 
"G - - 10 - first G - - 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<bool,allocator<bool> >",2669,G__TEventDict_315_0_4, 105, G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'deque<bool,allocator<bool> >::iterator' 'deque<bool,allocator<bool> >::const_iterator' 10 - first u 'deque<bool,allocator<bool> >::iterator' 'deque<bool,allocator<bool> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<bool,allocator<bool> >",2669,G__TEventDict_315_0_5, 105, G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR), -1, 0, 1, 1, 1, 0, "u 'deque<bool,allocator<bool> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TEventDict_315_0_6, 117, G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR), -1, 1, 1, 1, 1, 0, "u 'deque<bool,allocator<bool> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__TEventDict_315_0_7, 117, G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__TEventDict_315_0_8, 117, G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__TEventDict_315_0_9, 117, G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__TEventDict_315_0_10, 117, G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__TEventDict_315_0_11, 107, -1, G__defined_typename("deque<bool,allocator<bool> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__TEventDict_315_0_12, 107, -1, G__defined_typename("deque<bool,allocator<bool> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TEventDict_315_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'deque<bool,allocator<bool> >::size_type' 0 - sz g - - 0 'bool()' c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__TEventDict_315_0_14, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TEventDict_315_0_15, 103, -1, -1, 1, 1, 1, 1, 0, "k - 'deque<bool,allocator<bool> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__TEventDict_315_0_16, 103, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__TEventDict_315_0_17, 103, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_front",1096,G__TEventDict_315_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__TEventDict_315_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_315_0_20, 117, G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<bool,allocator<bool> >::iterator' - 0 - position g - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_315_0_21, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<bool,allocator<bool> >::iterator' - 0 - position k - 'deque<bool,allocator<bool> >::size_type' 0 - n "
"g - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_front",983,G__TEventDict_315_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__TEventDict_315_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_315_0_24, 117, G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'deque<bool,allocator<bool> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_315_0_25, 117, G__get_linked_tagnum(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<bool,allocator<bool> >::iterator' - 0 - first u 'deque<bool,allocator<bool> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__TEventDict_315_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'deque<bool,allocator<bool> >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__TEventDict_315_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~deque<bool,allocator<bool> >", 2795, G__TEventDict_315_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPlane(void) {
   /* TPlane */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_TPlane));
   G__memfunc_setup("TPlane",580,G__TEventDict_318_0_1, 105, G__get_linked_tagnum(&G__TEventDictLN_TPlane), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TPlane",580,G__TEventDict_318_0_2, 105, G__get_linked_tagnum(&G__TEventDictLN_TPlane), -1, 0, 4, 1, 1, 0, 
"h - 'UInt_t' 0 - planeNo u 'vector<TCluster,allocator<TCluster> >' 'vector<TCluster>' 0 - xClusters "
"u 'vector<TCluster,allocator<TCluster> >' 'vector<TCluster>' 0 - yClusters i 'TPlaneProperties::enumDetectorType' - 0 'TPlaneProperties::kSilicon' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TPlane",580,G__TEventDict_318_0_3, 105, G__get_linked_tagnum(&G__TEventDictLN_TPlane), -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - planeNo u 'vector<TCluster,allocator<TCluster> >' 'vector<TCluster>' 0 - xCluster "
"i 'TPlaneProperties::enumDetectorType' - 0 'TPlaneProperties::kDiamond' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TPlane",580,G__TEventDict_318_0_4, 105, G__get_linked_tagnum(&G__TEventDictLN_TPlane), -1, 0, 1, 1, 1, 0, "u 'TPlane' - 11 - rhs", "COPY Constructor", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TEventDict_318_0_5, 117, G__get_linked_tagnum(&G__TEventDictLN_TPlane), -1, 1, 1, 1, 1, 0, "u 'TPlane' - 11 - src", "class assignment function", (void*) NULL, 0);
   G__memfunc_setup("getCluster",1058,G__TEventDict_318_0_6, 117, G__get_linked_tagnum(&G__TEventDictLN_TCluster), -1, 0, 2, 1, 1, 0, 
"i 'TPlaneProperties::enumCoordinate' - 0 - cor h - 'UInt_t' 0 - cl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getXCluster",1146,G__TEventDict_318_0_7, 117, G__get_linked_tagnum(&G__TEventDictLN_TCluster), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - cl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getYCluster",1147,G__TEventDict_318_0_8, 117, G__get_linked_tagnum(&G__TEventDictLN_TCluster), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - cl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getXPosition",1261,G__TEventDict_318_0_9, 102, -1, G__defined_typename("Float_t"), 0, 4, 1, 1, 0, 
"h - 'UInt_t' 0 - cl g - - 0 - cmnCorrected "
"i 'TCluster::calculationMode_t' - 0 'TCluster::highest2Centroid' mode U 'TH1F' - 0 '0' histo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getYPosition",1262,G__TEventDict_318_0_10, 102, -1, G__defined_typename("Float_t"), 0, 4, 1, 1, 0, 
"h - 'UInt_t' 0 - cl g - - 0 - cmnCorrected "
"i 'TCluster::calculationMode_t' - 0 'TCluster::highest2Centroid' mode U 'TH1F' - 0 '0' histo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPosition",1173,G__TEventDict_318_0_11, 102, -1, G__defined_typename("Float_t"), 0, 5, 1, 1, 0, 
"i 'TPlaneProperties::enumCoordinate' - 0 - cor h - 'UInt_t' 0 - cl "
"g - - 0 - cmnCorrected i 'TCluster::calculationMode_t' - 0 'TCluster::highest2Centroid' mode "
"U 'TH1F' - 0 '0' histo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNXClusters",1339,G__TEventDict_318_0_12, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNYClusters",1340,G__TEventDict_318_0_13, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isValidPlane",1212,G__TEventDict_318_0_14, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDetectorType",1564,G__TEventDict_318_0_15, 105, G__get_linked_tagnum(&G__TEventDictLN_TPlanePropertiescLcLenumDetectorType), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDetectorType",1576,G__TEventDict_318_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i 'TPlaneProperties::enumDetectorType' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__TEventDict_318_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetClusters",1153,G__TEventDict_318_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<TCluster,allocator<TCluster> >' 'vector<TCluster>' 0 - xClusters u 'vector<TCluster,allocator<TCluster> >' 'vector<TCluster>' 0 - yClusters", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXClusters",1241,G__TEventDict_318_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TCluster,allocator<TCluster> >' 'vector<TCluster>' 0 - xClusters", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYClusters",1242,G__TEventDict_318_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TCluster,allocator<TCluster> >' 'vector<TCluster>' 0 - yClusters", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasInvalidReadout",1751,G__TEventDict_318_0_21, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TEventDict_318_0_22, 85, G__get_linked_tagnum(&G__TEventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TPlane::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEventDict_318_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPlane::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEventDict_318_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TPlane::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEventDict_318_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPlane::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TEventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEventDict_318_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEventDict_318_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPlane::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEventDict_318_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPlane::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEventDict_318_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPlane::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEventDict_318_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPlane::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TPlane", 706, G__TEventDict_318_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlETClustercOallocatorlETClustergRsPgR(void) {
   /* vector<TCluster,allocator<TCluster> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR));
   G__memfunc_setup("at",213,G__TEventDict_320_0_1, 117, G__get_linked_tagnum(&G__TEventDictLN_TCluster), G__defined_typename("vector<TCluster,allocator<TCluster> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TCluster,allocator<TCluster> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__TEventDict_320_0_2, 117, G__get_linked_tagnum(&G__TEventDictLN_TCluster), G__defined_typename("vector<TCluster,allocator<TCluster> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TCluster,allocator<TCluster> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__TEventDict_320_0_3, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__TEventDict_320_0_4, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__TEventDict_320_0_5, 117, G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETClustercOallocatorlETClustergRsPgRcLcLiteratorgR), G__defined_typename("vector<TCluster,allocator<TCluster> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__TEventDict_320_0_6, 117, G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETClustercOallocatorlETClustergRsPgRcLcLiteratorgR), G__defined_typename("vector<TCluster,allocator<TCluster> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__TEventDict_320_0_7, 107, -1, G__defined_typename("vector<TCluster,allocator<TCluster> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__TEventDict_320_0_8, 107, -1, G__defined_typename("vector<TCluster,allocator<TCluster> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TEventDict_320_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TCluster,allocator<TCluster> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TEventDict_320_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<TCluster,allocator<TCluster> >::size_type' 0 - sz u 'TCluster' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__TEventDict_320_0_11, 107, -1, G__defined_typename("vector<TCluster,allocator<TCluster> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__TEventDict_320_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TEventDict_320_0_13, 117, G__get_linked_tagnum(&G__TEventDictLN_TCluster), G__defined_typename("vector<TCluster,allocator<TCluster> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TCluster,allocator<TCluster> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TEventDict_320_0_14, 117, G__get_linked_tagnum(&G__TEventDictLN_TCluster), G__defined_typename("vector<TCluster,allocator<TCluster> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TCluster,allocator<TCluster> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TCluster,allocator<TCluster> >",3584,G__TEventDict_320_0_15, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TCluster,allocator<TCluster> >",3584,G__TEventDict_320_0_16, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<TCluster,allocator<TCluster> >::size_type' 0 - n u 'TCluster' - 11 'TCluster()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TCluster,allocator<TCluster> >",3584,G__TEventDict_320_0_17, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<TCluster,allocator<TCluster> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TCluster,allocator<TCluster> >",3584,G__TEventDict_320_0_18, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<TCluster,allocator<TCluster> >::iterator' 'vector<TCluster,allocator<TCluster> >::const_iterator' 10 - first u 'vector<TCluster,allocator<TCluster> >::iterator' 'vector<TCluster,allocator<TCluster> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TEventDict_320_0_19, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<TCluster,allocator<TCluster> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__TEventDict_320_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TCluster,allocator<TCluster> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__TEventDict_320_0_21, 117, G__get_linked_tagnum(&G__TEventDictLN_TCluster), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__TEventDict_320_0_22, 117, G__get_linked_tagnum(&G__TEventDictLN_TCluster), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__TEventDict_320_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TCluster' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__TEventDict_320_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TCluster,allocator<TCluster> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_320_0_25, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<TCluster,allocator<TCluster> >::iterator' - 0 - position u 'TCluster' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_320_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TCluster,allocator<TCluster> >::iterator' - 0 - position u 'vector<TCluster,allocator<TCluster> >::iterator' 'vector<TCluster,allocator<TCluster> >::const_iterator' 10 - first "
"u 'vector<TCluster,allocator<TCluster> >::iterator' 'vector<TCluster,allocator<TCluster> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_320_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TCluster,allocator<TCluster> >::iterator' - 0 - position k - 'vector<TCluster,allocator<TCluster> >::size_type' 0 - n "
"u 'TCluster' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__TEventDict_320_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_320_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TCluster,allocator<TCluster> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_320_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<TCluster,allocator<TCluster> >::iterator' - 0 - first u 'vector<TCluster,allocator<TCluster> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__TEventDict_320_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<TCluster,allocator<TCluster> >", 3710, G__TEventDict_320_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDetectorAlignment(void) {
   /* TDetectorAlignment */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_TDetectorAlignment));
   G__memfunc_setup("TDetectorAlignment",1837,G__TEventDict_323_0_1, 105, G__get_linked_tagnum(&G__TEventDictLN_TDetectorAlignment), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TEventDict_323_0_2, 117, G__get_linked_tagnum(&G__TEventDictLN_TDetectorAlignment), -1, 1, 1, 1, 1, 0, "u 'TDetectorAlignment' - 11 - src", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__TEventDict_323_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXOffset",991,G__TEventDict_323_0_4, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYOffset",992,G__TEventDict_323_0_5, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZOffset",993,G__TEventDict_323_0_6, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXOffset",1003,G__TEventDict_323_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - plane f - 'Float_t' 0 - xOffset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYOffset",1004,G__TEventDict_323_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - plane f - 'Float_t' 0 - yOffset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZOffset",1005,G__TEventDict_323_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - plane f - 'Float_t' 0 - zOffset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToXOffset",1163,G__TEventDict_323_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - plane f - 'Float_t' 0 - addXOffset", "{if(plane<6)det_x_offset[plane]+=addXOffset;}", (void*) NULL, 0);
   G__memfunc_setup("AddToYOffset",1164,G__TEventDict_323_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - plane f - 'Float_t' 0 - addYOffset", "{if(plane<6)det_y_offset[plane]+=addYOffset;}", (void*) NULL, 0);
   G__memfunc_setup("AddToZOffset",1165,G__TEventDict_323_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - plane f - 'Float_t' 0 - addZOffset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiXOffset",1280,G__TEventDict_323_0_13, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiYOffset",1281,G__TEventDict_323_0_14, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToPhiXOffset",1452,G__TEventDict_323_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - plane f - 'Float_t' 0 - addPhiXOffset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToPhiYOffset",1453,G__TEventDict_323_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - plane f - 'Float_t' 0 - addPhiYOffset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastXOffset",1395,G__TEventDict_323_0_17, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastYOffset",1396,G__TEventDict_323_0_18, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastPhiXOffset",1684,G__TEventDict_323_0_19, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastPhiYOffset",1685,G__TEventDict_323_0_20, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXOffsetHistory",1745,G__TEventDict_323_0_21, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYOffsetHistory",1746,G__TEventDict_323_0_22, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZOffsetHistory",1747,G__TEventDict_323_0_23, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiXOffsetHistory",2034,G__TEventDict_323_0_24, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiYOffsetHistory",2035,G__TEventDict_323_0_25, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintXOffset",1228,G__TEventDict_323_0_26, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - plane h - 'UInt_t' 0 - level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintYOffset",1229,G__TEventDict_323_0_27, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - plane h - 'UInt_t' 0 - level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintZOffset",1230,G__TEventDict_323_0_28, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - plane h - 'UInt_t' 0 - level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintPhiXOffset",1517,G__TEventDict_323_0_29, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - plane h - 'UInt_t' 0 - level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintPhiYOffset",1518,G__TEventDict_323_0_30, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - plane h - 'UInt_t' 0 - level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintResolution",1601,G__TEventDict_323_0_31, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - plane h - 'UInt_t' 0 - level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintResults",1279,G__TEventDict_323_0_32, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetAlignment",1442,G__TEventDict_323_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '-1' plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVerbosity",1287,G__TEventDict_323_0_34, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVerbosity",1299,G__TEventDict_323_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - verbosity", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getXResolution",1484,G__TEventDict_323_0_36, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZResolution",1486,G__TEventDict_323_0_37, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setXResolution",1496,G__TEventDict_323_0_38, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - xRes h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setResolution",1408,G__TEventDict_323_0_39, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - xRes h - 'UInt_t' 0 - plane "
"i 'TPlaneProperties::enumCoordinate' - 0 - cor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getXMean",793,G__TEventDict_323_0_40, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setXMean",805,G__TEventDict_323_0_41, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - xMean h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getYResolution",1485,G__TEventDict_323_0_42, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setYResolution",1497,G__TEventDict_323_0_43, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - yRes h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getResolution",1396,G__TEventDict_323_0_44, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - plane i 'TPlaneProperties::enumCoordinate' - 0 - cor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getYMean",794,G__TEventDict_323_0_45, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setYMean",806,G__TEventDict_323_0_46, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - yMean h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNUsedEvents",1428,G__TEventDict_323_0_47, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNUsedEvents",1440,G__TEventDict_323_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - usedEvents", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isPreAligned",1207,G__TEventDict_323_0_49, 103, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 '0.3' maxOffset i - 'Int_t' 0 '2' nAlignedDetectors", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addEventIntervall",1756,G__TEventDict_323_0_50, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - first h - 'UInt_t' 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAlignmentTrainingTrackFraction",3410,G__TEventDict_323_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - fraction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAlignmentTrainingTrackFraction",3398,G__TEventDict_323_0_52, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDiamondDate",1414,G__TEventDict_323_0_53, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSiliconDate",1435,G__TEventDict_323_0_54, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRunNumber",1258,G__TEventDict_323_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - rn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDiaChi2",928,G__TEventDict_323_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDiaChi2",916,G__TEventDict_323_0_57, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNDiamondAlignmentEvents",2666,G__TEventDict_323_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - nEvents", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDiamondAlignmentEvents",2576,G__TEventDict_323_0_59, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLastUpdateTimeAsString",2545,G__TEventDict_323_0_60, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateTime",1010,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TEventDict_323_0_62, 85, G__get_linked_tagnum(&G__TEventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TDetectorAlignment::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEventDict_323_0_63, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDetectorAlignment::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEventDict_323_0_64, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TDetectorAlignment::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEventDict_323_0_65, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TDetectorAlignment::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TEventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEventDict_323_0_69, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEventDict_323_0_70, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDetectorAlignment::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEventDict_323_0_71, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDetectorAlignment::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEventDict_323_0_72, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDetectorAlignment::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEventDict_323_0_73, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDetectorAlignment::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TDetectorAlignment", 1837, G__TEventDict_323_0_74, (int) ('i'), G__get_linked_tagnum(&G__TEventDictLN_TDetectorAlignment), -1, 0, 1, 1, 1, 0, "u 'TDetectorAlignment' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TDetectorAlignment", 1963, G__TEventDict_323_0_75, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTEvent(void) {
   /* TEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_TEvent));
   G__memfunc_setup("TEvent",598,G__TEventDict_324_0_1, 105, G__get_linked_tagnum(&G__TEventDictLN_TEvent), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' nEvent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TEvent",598,G__TEventDict_324_0_2, 105, G__get_linked_tagnum(&G__TEventDictLN_TEvent), -1, 0, 1, 1, 1, 0, "u 'TEvent' - 11 - rhs", "copy constructor", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TEventDict_324_0_3, 117, G__get_linked_tagnum(&G__TEventDictLN_TEvent), -1, 1, 1, 1, 1, 0, "u 'TEvent' - 11 - src", "class assignment function", (void*) NULL, 0);
   G__memfunc_setup("getPlane",816,G__TEventDict_324_0_4, 117, G__get_linked_tagnum(&G__TEventDictLN_TPlane), -1, 0, 1, 1, 1, 0, "i - - 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addPlane",793,G__TEventDict_324_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TPlane' - 0 - plane i - 'Int_t' 0 '-1' pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNXClusters",1339,G__TEventDict_324_0_6, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNYClusters",1340,G__TEventDict_324_0_7, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - plane", "{if(plane<planes.size())return planes.at(plane).getNYClusters();else return 0;}", (void*) NULL, 0);
   G__memfunc_setup("getNClusters",1251,G__TEventDict_324_0_8, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCluster",1058,G__TEventDict_324_0_9, 117, G__get_linked_tagnum(&G__TEventDictLN_TCluster), -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - plane i 'TPlaneProperties::enumCoordinate' - 0 - cor "
"h - 'UInt_t' 0 - cl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCluster",1058,G__TEventDict_324_0_10, 117, G__get_linked_tagnum(&G__TEventDictLN_TCluster), -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - det h - 'UInt_t' 0 - cl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getClusterSize",1469,G__TEventDict_324_0_11, 104, -1, G__defined_typename("UInt_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - det h - 'UInt_t' 0 - cl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getClusterSeedSize",1854,G__TEventDict_324_0_12, 104, -1, G__defined_typename("UInt_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - det h - 'UInt_t' 0 - cl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getClusterSize",1469,G__TEventDict_324_0_13, 104, -1, G__defined_typename("UInt_t"), 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - plane i 'TPlaneProperties::enumCoordinate' - 0 - cor "
"h - 'UInt_t' 0 - cl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPosition",1173,G__TEventDict_324_0_14, 102, -1, G__defined_typename("Float_t"), 0, 5, 1, 1, 0, 
"h - 'UInt_t' 0 - det h - 'UInt_t' 0 - cl "
"g - - 0 - cmnCorrected i 'TCluster::calculationMode_t' - 0 'TCluster::highest2Centroid' mode "
"U 'TH1F' - 0 '0' histo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNPlanes",1009,G__TEventDict_324_0_15, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isValidSiliconEvent",1951,G__TEventDict_324_0_16, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isMasked",817,G__TEventDict_324_0_17, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEventNumber",1451,G__TEventDict_324_0_18, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVerbosity",1299,G__TEventDict_324_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - verbosity", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__TEventDict_324_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPlanePointer",1553,G__TEventDict_324_0_21, 85, G__get_linked_tagnum(&G__TEventDictLN_TPlane), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasInvalidReadout",1751,G__TEventDict_324_0_22, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TEventDict_324_0_23, 85, G__get_linked_tagnum(&G__TEventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEventDict_324_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEventDict_324_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEventDict_324_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TEventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEventDict_324_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEventDict_324_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEventDict_324_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEventDict_324_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEventDict_324_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TEvent", 724, G__TEventDict_324_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlETPlanecOallocatorlETPlanegRsPgR(void) {
   /* vector<TPlane,allocator<TPlane> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR));
   G__memfunc_setup("at",213,G__TEventDict_326_0_1, 117, G__get_linked_tagnum(&G__TEventDictLN_TPlane), G__defined_typename("vector<TPlane,allocator<TPlane> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TPlane,allocator<TPlane> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__TEventDict_326_0_2, 117, G__get_linked_tagnum(&G__TEventDictLN_TPlane), G__defined_typename("vector<TPlane,allocator<TPlane> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TPlane,allocator<TPlane> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__TEventDict_326_0_3, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__TEventDict_326_0_4, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__TEventDict_326_0_5, 117, G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETPlanecOallocatorlETPlanegRsPgRcLcLiteratorgR), G__defined_typename("vector<TPlane,allocator<TPlane> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__TEventDict_326_0_6, 117, G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETPlanecOallocatorlETPlanegRsPgRcLcLiteratorgR), G__defined_typename("vector<TPlane,allocator<TPlane> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__TEventDict_326_0_7, 107, -1, G__defined_typename("vector<TPlane,allocator<TPlane> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__TEventDict_326_0_8, 107, -1, G__defined_typename("vector<TPlane,allocator<TPlane> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TEventDict_326_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TPlane,allocator<TPlane> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TEventDict_326_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<TPlane,allocator<TPlane> >::size_type' 0 - sz u 'TPlane' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__TEventDict_326_0_11, 107, -1, G__defined_typename("vector<TPlane,allocator<TPlane> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__TEventDict_326_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TEventDict_326_0_13, 117, G__get_linked_tagnum(&G__TEventDictLN_TPlane), G__defined_typename("vector<TPlane,allocator<TPlane> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TPlane,allocator<TPlane> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TEventDict_326_0_14, 117, G__get_linked_tagnum(&G__TEventDictLN_TPlane), G__defined_typename("vector<TPlane,allocator<TPlane> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TPlane,allocator<TPlane> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TPlane,allocator<TPlane> >",3100,G__TEventDict_326_0_15, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TPlane,allocator<TPlane> >",3100,G__TEventDict_326_0_16, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<TPlane,allocator<TPlane> >::size_type' 0 - n u 'TPlane' - 11 'TPlane()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TPlane,allocator<TPlane> >",3100,G__TEventDict_326_0_17, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<TPlane,allocator<TPlane> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TPlane,allocator<TPlane> >",3100,G__TEventDict_326_0_18, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<TPlane,allocator<TPlane> >::iterator' 'vector<TPlane,allocator<TPlane> >::const_iterator' 10 - first u 'vector<TPlane,allocator<TPlane> >::iterator' 'vector<TPlane,allocator<TPlane> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TEventDict_326_0_19, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<TPlane,allocator<TPlane> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__TEventDict_326_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TPlane,allocator<TPlane> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__TEventDict_326_0_21, 117, G__get_linked_tagnum(&G__TEventDictLN_TPlane), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__TEventDict_326_0_22, 117, G__get_linked_tagnum(&G__TEventDictLN_TPlane), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__TEventDict_326_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TPlane' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__TEventDict_326_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TPlane,allocator<TPlane> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_326_0_25, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<TPlane,allocator<TPlane> >::iterator' - 0 - position u 'TPlane' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_326_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TPlane,allocator<TPlane> >::iterator' - 0 - position u 'vector<TPlane,allocator<TPlane> >::iterator' 'vector<TPlane,allocator<TPlane> >::const_iterator' 10 - first "
"u 'vector<TPlane,allocator<TPlane> >::iterator' 'vector<TPlane,allocator<TPlane> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_326_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TPlane,allocator<TPlane> >::iterator' - 0 - position k - 'vector<TPlane,allocator<TPlane> >::size_type' 0 - n "
"u 'TPlane' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__TEventDict_326_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_326_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TPlane,allocator<TPlane> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_326_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<TPlane,allocator<TPlane> >::iterator' - 0 - first u 'vector<TPlane,allocator<TPlane> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__TEventDict_326_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<TPlane,allocator<TPlane> >", 3226, G__TEventDict_326_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncChannelScreen(void) {
   /* ChannelScreen */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_ChannelScreen));
   G__memfunc_setup("ChannelScreen",1305,G__TEventDict_438_0_1, 105, G__get_linked_tagnum(&G__TEventDictLN_ChannelScreen), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDetectorNumber",1775,G__TEventDict_438_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScreenChannels",1420,G__TEventDict_438_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' 'vector<int>' 0 - channels_to_screen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScreenRegions",1335,G__TEventDict_438_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' 'vector<int>' 0 - regions_to_screen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChannelOff",980,G__TEventDict_438_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintScreenedChannels",2146,G__TEventDict_438_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckChannel",1175,G__TEventDict_438_0_7, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isScreened",1029,G__TEventDict_438_0_8, 103, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TEventDict_438_0_9, 85, G__get_linked_tagnum(&G__TEventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ChannelScreen::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEventDict_438_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ChannelScreen::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEventDict_438_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ChannelScreen::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEventDict_438_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ChannelScreen::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TEventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEventDict_438_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEventDict_438_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ChannelScreen::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEventDict_438_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ChannelScreen::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEventDict_438_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ChannelScreen::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEventDict_438_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ChannelScreen::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ChannelScreen", 1305, G__TEventDict_438_0_21, (int) ('i'), G__get_linked_tagnum(&G__TEventDictLN_ChannelScreen), -1, 0, 1, 1, 1, 0, "u 'ChannelScreen' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ChannelScreen", 1431, G__TEventDict_438_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TEventDict_438_0_23, (int) ('u'), G__get_linked_tagnum(&G__TEventDictLN_ChannelScreen), -1, 1, 1, 1, 1, 0, "u 'ChannelScreen' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTChannelMapping(void) {
   /* TChannelMapping */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_TChannelMapping));
   G__memfunc_setup("TChannelMapping",1497,G__TEventDict_667_0_1, 105, G__get_linked_tagnum(&G__TEventDictLN_TChannelMapping), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 'TPlaneProperties::getNChannelsDiamond()' nChannels", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TChannelMapping",1497,G__TEventDict_667_0_2, 105, G__get_linked_tagnum(&G__TEventDictLN_TChannelMapping), -1, 0, 1, 1, 1, 0, "u 'vector<unsigned int,allocator<unsigned int> >' 'vector<UInt_t>' 0 - channelMapping", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TChannelMapping",1497,G__TEventDict_667_0_3, 105, G__get_linked_tagnum(&G__TEventDictLN_TChannelMapping), -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' 'vector<int>' 0 - channelMapping", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TChannelMapping",1497,G__TEventDict_667_0_4, 105, G__get_linked_tagnum(&G__TEventDictLN_TChannelMapping), -1, 0, 1, 1, 1, 0, "u 'TChannelMapping' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("changeMapping",1330,G__TEventDict_667_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - vaChNo h - 'UInt_t' 0 - detChNo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("changeMapping",1330,G__TEventDict_667_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned int,allocator<unsigned int> >' 'vector<UInt_t>' 0 - channelMapping", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDetChannelNo",1491,G__TEventDict_667_0_7, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - VaChNo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVAChannelNo",1357,G__TEventDict_667_0_8, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - detChNo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintMapping",1241,G__TEventDict_667_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("showMappingPair",1561,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'pair<unsigned int,unsigned int>' 'pair<UInt_t,UInt_t>' 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("showMapping",1165,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator' - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TEventDict_667_0_12, 85, G__get_linked_tagnum(&G__TEventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TChannelMapping::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEventDict_667_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TChannelMapping::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEventDict_667_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TChannelMapping::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEventDict_667_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TChannelMapping::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TEventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEventDict_667_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEventDict_667_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TChannelMapping::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEventDict_667_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TChannelMapping::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEventDict_667_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TChannelMapping::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEventDict_667_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TChannelMapping::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TChannelMapping", 1623, G__TEventDict_667_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TEventDict_667_0_25, (int) ('u'), G__get_linked_tagnum(&G__TEventDictLN_TChannelMapping), -1, 1, 1, 1, 1, 0, "u 'TChannelMapping' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR(void) {
   /* map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR));
   G__memfunc_setup("map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >",9577,G__TEventDict_672_0_1, 105, G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >",9577,G__TEventDict_672_0_2, 105, G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator' - 0 - first u 'map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >",9577,G__TEventDict_672_0_3, 105, G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::reverse_iterator' - 0 - first u 'map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >",9577,G__TEventDict_672_0_4, 105, G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TEventDict_672_0_5, 117, G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__TEventDict_672_0_6, 117, G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__TEventDict_672_0_7, 117, G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__TEventDict_672_0_8, 117, G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__TEventDict_672_0_9, 117, G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__TEventDict_672_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__TEventDict_672_0_11, 107, -1, G__defined_typename("map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__TEventDict_672_0_12, 107, -1, G__defined_typename("map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TEventDict_672_0_13, 104, -1, -1, 1, 1, 1, 1, 0, "h - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_672_0_14, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEmaplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<unsigned int,unsigned int>' 'map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_672_0_15, 117, G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator' - 0 - position u 'pair<unsigned int,unsigned int>' 'map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_672_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator' - 0 - first u 'map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_672_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::reverse_iterator' - 0 - first u 'map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_672_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_672_0_19, 107, -1, G__defined_typename("map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::size_type"), 0, 1, 1, 1, 0, "h - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_672_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator' - 0 - first u 'map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__TEventDict_672_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__TEventDict_672_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__TEventDict_672_0_23, 117, G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "h - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__TEventDict_672_0_24, 107, -1, G__defined_typename("map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::size_type"), 0, 1, 1, 1, 8, "h - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__TEventDict_672_0_25, 117, G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "h - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__TEventDict_672_0_26, 117, G__get_linked_tagnum(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "h - - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >", 9703, G__TEventDict_672_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEunsignedsPintcOunsignedsPintgR(void) {
   /* pair<unsigned int,unsigned int> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPintcOunsignedsPintgR));
   G__memfunc_setup("pair<unsigned int,unsigned int>",3042,G__TEventDict_673_0_1, 105, G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPintcOunsignedsPintgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pair<unsigned int,unsigned int>",3042,G__TEventDict_673_0_2, 105, G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPintcOunsignedsPintgR), -1, 0, 2, 1, 1, 0, 
"h - - 11 - a h - - 11 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPintcOunsignedsPintgR), -1, 1, 1, 1, 4, 0, "u 'pair<unsigned int,unsigned int>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pair<unsigned int,unsigned int>", 3042, G__TEventDict_673_0_4, (int) ('i'), 
G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPintcOunsignedsPintgR), -1, 0, 1, 1, 1, 0, "u 'pair<unsigned int,unsigned int>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pair<unsigned int,unsigned int>", 3168, G__TEventDict_673_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDiamondPattern(void) {
   /* TDiamondPattern */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_TDiamondPattern));
   G__memfunc_setup("TDiamondPattern",1518,G__TEventDict_677_0_1, 105, G__get_linked_tagnum(&G__TEventDictLN_TDiamondPattern), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("loadStandardPitchWidthSettings",3098,G__TEventDict_677_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addPattern",1031,G__TEventDict_677_0_3, 103, -1, -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 0 - pitchWidth f - 'Float_t' 0 - startPosition "
"h - 'UInt_t' 0 - firstChannel h - 'UInt_t' 0 - lastChannel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("convertChannelToMetric",2273,G__TEventDict_677_0_4, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("convertMetricToIntChannel",2572,G__TEventDict_677_0_5, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 - metric", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("convertMetricToChannel",2273,G__TEventDict_677_0_6, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 - metric", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("convertMetricToRelativeMetric",3016,G__TEventDict_677_0_7, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 - metric", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("convertMetricToRelativeMetric",3016,G__TEventDict_677_0_8, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - metric h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChannel",1017,G__TEventDict_677_0_9, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 - metric", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPatternOfHit",1528,G__TEventDict_677_0_10, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 - metric", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("convertMetricToChannel",2273,G__TEventDict_677_0_11, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - metric h - 'UInt_t' 0 - interval", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPitchWidth",1336,G__TEventDict_677_0_12, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - area", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNPatterns",1247,G__TEventDict_677_0_13, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", "nChannelsOfInterval.size();}", (void*) NULL, 0);
   G__memfunc_setup("loadPitchWidthSettings",2281,G__TEventDict_677_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - pitchWidth", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetPattern",1281,G__TEventDict_677_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__TEventDict_677_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__TEventDict_677_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("showPatterns",1298,G__TEventDict_677_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__TEventDict_677_0_19, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isStandardPitchWidth",2053,G__TEventDict_677_0_20, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPatternChannels",1866,G__TEventDict_677_0_21, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEintcOintgR), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - pattern", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getInterval",1157,G__TEventDict_677_0_22, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEintcOintgR), G__defined_typename("pair<Int_t,Int_t>"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - pattern", "{return getPatternChannels(pattern);}", (void*) NULL, 0);
   G__memfunc_setup("getIntervalOfDiamond",2038,G__TEventDict_677_0_23, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEintcOintgR), G__defined_typename("pair<Int_t,Int_t>"), 0, 1, 1, 1, 0, "u 'TString' - 0 - runDesc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasInvalidIntervals",1979,G__TEventDict_677_0_24, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isValidChannelPosition",2266,G__TEventDict_677_0_25, 103, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isValidCluster",1454,G__TEventDict_677_0_26, 103, -1, -1, 0, 1, 1, 1, 0, "U 'TCluster' - 0 - cluster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isValidCluster",1454,G__TEventDict_677_0_27, 103, -1, -1, 0, 1, 1, 1, 0, "u 'TCluster' - 0 - cluster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getClusterPattern",1792,G__TEventDict_677_0_28, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'TCluster' - 0 - cluster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPatternOfChannel",1932,G__TEventDict_677_0_29, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNIntervals",1350,G__TEventDict_677_0_30, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", "{return nChannelsOfInterval.size();}", (void*) NULL, 0);
   G__memfunc_setup("getTotalInterval",1673,G__TEventDict_677_0_31, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEintcOintgR), G__defined_typename("pair<Int_t,Int_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVerbosity",1299,G__TEventDict_677_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - verb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChannelToMetric",1824,(G__InterfaceMethod) NULL, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 4, 0, "h - 'UInt_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialiseVector",1694,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TEventDict_677_0_35, 85, G__get_linked_tagnum(&G__TEventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TDiamondPattern::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEventDict_677_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDiamondPattern::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEventDict_677_0_37, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TDiamondPattern::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEventDict_677_0_38, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TDiamondPattern::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TEventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEventDict_677_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEventDict_677_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDiamondPattern::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEventDict_677_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDiamondPattern::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEventDict_677_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDiamondPattern::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEventDict_677_0_46, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDiamondPattern::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TDiamondPattern", 1518, G__TEventDict_677_0_47, (int) ('i'), G__get_linked_tagnum(&G__TEventDictLN_TDiamondPattern), -1, 0, 1, 1, 1, 0, "u 'TDiamondPattern' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TDiamondPattern", 1644, G__TEventDict_677_0_48, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TEventDict_677_0_49, (int) ('u'), G__get_linked_tagnum(&G__TEventDictLN_TDiamondPattern), -1, 1, 1, 1, 1, 0, "u 'TDiamondPattern' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTFiducialCut(void) {
   /* TFiducialCut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_TFiducialCut));
   G__memfunc_setup("GetFiducialAreaCut",1766,G__TEventDict_727_0_1, 85, G__get_linked_tagnum(&G__TEventDictLN_TCutG), -1, 0, 1, 1, 1, 0, "g - - 0 'false' bEmphasis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFiducialCut",1185,G__TEventDict_727_0_2, 105, G__get_linked_tagnum(&G__TEventDictLN_TFiducialCut), -1, 0, 5, 1, 1, 0, 
"i - - 0 - i f - 'Float_t' 0 - xLow "
"f - 'Float_t' 0 - xHigh f - 'Float_t' 0 - yLow "
"f - 'Float_t' 0 - yHigh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFiducialCut",1185,G__TEventDict_727_0_3, 105, G__get_linked_tagnum(&G__TEventDictLN_TFiducialCut), -1, 0, 1, 1, 1, 0, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInFiducialCut",1472,G__TEventDict_727_0_4, 103, -1, -1, 0, 2, 1, 1, 8, 
"f - 'Float_t' 0 - xVal f - 'Float_t' 0 - yVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetName",685,G__TEventDict_727_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,G__TEventDict_727_0_6, 117, G__get_linked_tagnum(&G__TEventDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAllValuesZero",1621,G__TEventDict_727_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXLow",694,G__TEventDict_727_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - xl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXHigh",772,G__TEventDict_727_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - xh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYLow",695,G__TEventDict_727_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - yl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYHigh",773,G__TEventDict_727_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - yh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__TEventDict_727_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetActive",904,G__TEventDict_727_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetActive",892,G__TEventDict_727_0_14, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXLow",682,G__TEventDict_727_0_15, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXHigh",760,G__TEventDict_727_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYLow",683,G__TEventDict_727_0_17, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYHigh",761,G__TEventDict_727_0_18, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAllValues",1205,G__TEventDict_727_0_19, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 0 - xLow f - 'Float_t' 0 - xHigh "
"f - 'Float_t' 0 - yLow f - 'Float_t' 0 - yHigh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawFiducialCutToCanvas",2298,G__TEventDict_727_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TCanvas' - 0 - c1 g - - 0 - bEmphasis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TEventDict_727_0_21, 85, G__get_linked_tagnum(&G__TEventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TFiducialCut::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEventDict_727_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFiducialCut::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEventDict_727_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TFiducialCut::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEventDict_727_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TFiducialCut::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TEventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEventDict_727_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEventDict_727_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFiducialCut::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEventDict_727_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFiducialCut::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEventDict_727_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFiducialCut::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEventDict_727_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFiducialCut::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TFiducialCut", 1185, G__TEventDict_727_0_33, (int) ('i'), G__get_linked_tagnum(&G__TEventDictLN_TFiducialCut), -1, 0, 1, 1, 1, 0, "u 'TFiducialCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TFiducialCut", 1311, G__TEventDict_727_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TEventDict_727_0_35, (int) ('u'), G__get_linked_tagnum(&G__TEventDictLN_TFiducialCut), -1, 1, 1, 1, 1, 0, "u 'TFiducialCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTFidCutRegions(void) {
   /* TFidCutRegions */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_TFidCutRegions));
   G__memfunc_setup("TFidCutRegions",1386,G__TEventDict_737_0_1, 105, G__get_linked_tagnum(&G__TEventDictLN_TFidCutRegions), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFidCutRegions",1386,G__TEventDict_737_0_2, 105, G__get_linked_tagnum(&G__TEventDictLN_TFidCutRegions), -1, 0, 3, 1, 1, 0, 
"u 'vector<pair<float,float>,allocator<pair<float,float> > >' 'vector<std::pair<Float_t,Float_t> >' 0 - xInt u 'vector<pair<float,float>,allocator<pair<float,float> > >' 'vector<std::pair<Float_t,Float_t> >' 0 - yInt "
"h - 'UInt_t' 0 - nDiamonds", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFidCutRegions",1386,G__TEventDict_737_0_3, 105, G__get_linked_tagnum(&G__TEventDictLN_TFidCutRegions), -1, 0, 5, 1, 1, 0, 
"f - 'Float_t' 0 - xLow f - 'Float_t' 0 - xHigh "
"f - 'Float_t' 0 - yLow f - 'Float_t' 0 - yHigh "
"h - 'UInt_t' 0 - nDiamonds", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFidCutRegions",1386,G__TEventDict_737_0_4, 105, G__get_linked_tagnum(&G__TEventDictLN_TFidCutRegions), -1, 0, 3, 1, 1, 0, 
"U 'TH2F' - 0 - histo i - - 0 - nDiamonds "
"f - 'Float_t' 0 - fidCutPercentage", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetName",685,G__TEventDict_737_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - newName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFiducialCutCanvas",2025,G__TEventDict_737_0_6, 85, G__get_linked_tagnum(&G__TEventDictLN_TCanvas), -1, 0, 1, 1, 1, 0, "i 'TPlaneProperties::enumCoordinate' - 0 - cor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFidCut",895,G__TEventDict_737_0_7, 85, G__get_linked_tagnum(&G__TEventDictLN_TFiducialCut), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFidCut",895,G__TEventDict_737_0_8, 85, G__get_linked_tagnum(&G__TEventDictLN_TFiducialCut), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addFiducialCut",1398,G__TEventDict_737_0_9, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 0 - xLow f - 'Float_t' 0 - xHigh "
"f - 'Float_t' 0 - yLow f - 'Float_t' 0 - yHigh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addFiducialCut",1398,G__TEventDict_737_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TFiducialCut' - 0 - fidCut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getXLow",714,G__TEventDict_737_0_11, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getYLow",715,G__TEventDict_737_0_12, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getXHigh",792,G__TEventDict_737_0_13, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getYHigh",793,G__TEventDict_737_0_14, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHigh",704,G__TEventDict_737_0_15, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"i 'TPlaneProperties::enumCoordinate' - 0 - cor h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLow",626,G__TEventDict_737_0_16, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"i 'TPlaneProperties::enumCoordinate' - 0 - cor h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__TEventDict_737_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' intend", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRunDescription",1797,G__TEventDict_737_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - runDes i - 'Int_t' 0 '0' nDiamonds", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFiducialCutIndex",1925,G__TEventDict_737_0_19, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - xVal f - 'Float_t' 0 - yVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInFiducialCut",1472,G__TEventDict_737_0_20, 103, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - xVal f - 'Float_t' 0 - yVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFidCutRegion",1507,G__TEventDict_737_0_21, 105, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - xVal f - 'Float_t' 0 - yVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAllFiducialCutsCanvas",2421,G__TEventDict_737_0_22, 85, G__get_linked_tagnum(&G__TEventDictLN_TCanvas), -1, 0, 2, 1, 1, 0, 
"U 'TH2F' - 0 '0' hScatterPlot g - - 0 'false' optimizeAxisRange", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHistogramm",1383,G__TEventDict_737_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH2F' - 0 - hEventScatterPlot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNFidCuts",1088,G__TEventDict_737_0_24, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaxFiducialX",1503,G__TEventDict_737_0_25, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMinFiducialX",1501,G__TEventDict_737_0_26, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaxFiducialY",1504,G__TEventDict_737_0_27, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMinFiducialY",1502,G__TEventDict_737_0_28, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawFiducialCutsToCanvas",2413,G__TEventDict_737_0_29, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TCanvas' - 0 - c1 g - - 0 'false' DrawLegend", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFiducialAreaCut",1798,G__TEventDict_737_0_30, 85, G__get_linked_tagnum(&G__TEventDictLN_TCutG), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - nFidCut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCutG",691,G__TEventDict_737_0_31, 85, G__get_linked_tagnum(&G__TEventDictLN_TCutG), -1, 0, 5, 1, 1, 0, 
"u 'TString' - 0 - name f - 'Float_t' 0 - xLow "
"f - 'Float_t' 0 - yLow f - 'Float_t' 0 - xHigh "
"f - 'Float_t' 0 - yHigh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__TEventDict_737_0_32, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__TEventDict_737_0_33, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAddionalCutXHigh",1888,G__TEventDict_737_0_34, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAddionalCutXHigh",1900,G__TEventDict_737_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - addionalCutXHigh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAddionalCutXLow",1810,G__TEventDict_737_0_36, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAddionalCutXLow",1822,G__TEventDict_737_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - addionalCutXLow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAddionalCutYHigh",1889,G__TEventDict_737_0_38, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAddionalCutYHigh",1901,G__TEventDict_737_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - addionalCutYHigh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAddionalCutYLow",1811,G__TEventDict_737_0_40, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAddionalCutYLow",1823,G__TEventDict_737_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - addionalCutYLow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getActiveIndex",1428,G__TEventDict_737_0_42, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initVariables",1357,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findFiducialCutIntervall",2463,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR), G__defined_typename("vector<std::pair<Float_t,Float_t> >"), 0, 2, 1, 4, 0, 
"U 'TH1D' - 0 - hProj f - 'Float_t' 0 - fidCutPercentage", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFiducialCutProjectionCanvas",3078,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__TEventDictLN_TCanvas), -1, 0, 2, 1, 4, 0, 
"U 'TH1D' - 0 - hProj u 'vector<pair<float,float>,allocator<pair<float,float> > >' 'vector<std::pair<Float_t,Float_t> >' 0 - intervals", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFiducialAreaPaveText",2315,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__TEventDictLN_TPaveText), -1, 0, 1, 1, 4, 0, "h - 'UInt_t' 0 - nFidCut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createFidCuts",1318,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TEventDict_737_0_48, 85, G__get_linked_tagnum(&G__TEventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TFidCutRegions::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEventDict_737_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFidCutRegions::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEventDict_737_0_50, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TFidCutRegions::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEventDict_737_0_51, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TFidCutRegions::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TEventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEventDict_737_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEventDict_737_0_56, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFidCutRegions::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEventDict_737_0_57, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFidCutRegions::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEventDict_737_0_58, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFidCutRegions::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEventDict_737_0_59, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFidCutRegions::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TFidCutRegions", 1386, G__TEventDict_737_0_60, (int) ('i'), G__get_linked_tagnum(&G__TEventDictLN_TFidCutRegions), -1, 0, 1, 1, 1, 0, "u 'TFidCutRegions' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TFidCutRegions", 1512, G__TEventDict_737_0_61, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TEventDict_737_0_62, (int) ('u'), G__get_linked_tagnum(&G__TEventDictLN_TFidCutRegions), -1, 1, 1, 1, 1, 0, "u 'TFidCutRegions' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEfloatcOfloatgR(void) {
   /* pair<float,float> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR));
   G__memfunc_setup("pair<float,float>",1662,G__TEventDict_738_0_1, 105, G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pair<float,float>",1662,G__TEventDict_738_0_2, 105, G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR), -1, 0, 2, 1, 1, 0, 
"f - - 11 - a f - - 11 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR), -1, 1, 1, 1, 4, 0, "u 'pair<float,float>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pair<float,float>", 1662, G__TEventDict_738_0_4, (int) ('i'), G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR), -1, 0, 1, 1, 1, 0, "u 'pair<float,float>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pair<float,float>", 1788, G__TEventDict_738_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR(void) {
   /* vector<pair<float,float>,allocator<pair<float,float> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR));
   G__memfunc_setup("at",213,G__TEventDict_740_0_1, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR), G__defined_typename("vector<pair<float,float>,allocator<pair<float,float> > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<pair<float,float>,allocator<pair<float,float> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__TEventDict_740_0_2, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR), G__defined_typename("vector<pair<float,float>,allocator<pair<float,float> > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<pair<float,float>,allocator<pair<float,float> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__TEventDict_740_0_3, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__TEventDict_740_0_4, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__TEventDict_740_0_5, 117, G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<pair<float,float>,allocator<pair<float,float> > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__TEventDict_740_0_6, 117, G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<pair<float,float>,allocator<pair<float,float> > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__TEventDict_740_0_7, 107, -1, G__defined_typename("vector<pair<float,float>,allocator<pair<float,float> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__TEventDict_740_0_8, 107, -1, G__defined_typename("vector<pair<float,float>,allocator<pair<float,float> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TEventDict_740_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<pair<float,float>,allocator<pair<float,float> > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TEventDict_740_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<pair<float,float>,allocator<pair<float,float> > >::size_type' 0 - sz u 'pair<float,float>' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__TEventDict_740_0_11, 107, -1, G__defined_typename("vector<pair<float,float>,allocator<pair<float,float> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__TEventDict_740_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TEventDict_740_0_13, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR), G__defined_typename("vector<pair<float,float>,allocator<pair<float,float> > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<pair<float,float>,allocator<pair<float,float> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TEventDict_740_0_14, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR), G__defined_typename("vector<pair<float,float>,allocator<pair<float,float> > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<pair<float,float>,allocator<pair<float,float> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<float,float>,allocator<pair<float,float> > >",5296,G__TEventDict_740_0_15, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<float,float>,allocator<pair<float,float> > >",5296,G__TEventDict_740_0_16, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<pair<float,float>,allocator<pair<float,float> > >::size_type' 0 - n u 'pair<float,float>' - 11 '(pair<float,float>)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<float,float>,allocator<pair<float,float> > >",5296,G__TEventDict_740_0_17, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<pair<float,float>,allocator<pair<float,float> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<float,float>,allocator<pair<float,float> > >",5296,G__TEventDict_740_0_18, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<pair<float,float>,allocator<pair<float,float> > >::iterator' 'vector<pair<float,float>,allocator<pair<float,float> > >::const_iterator' 10 - first u 'vector<pair<float,float>,allocator<pair<float,float> > >::iterator' 'vector<pair<float,float>,allocator<pair<float,float> > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TEventDict_740_0_19, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<pair<float,float>,allocator<pair<float,float> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__TEventDict_740_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<pair<float,float>,allocator<pair<float,float> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__TEventDict_740_0_21, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__TEventDict_740_0_22, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__TEventDict_740_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'pair<float,float>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__TEventDict_740_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<pair<float,float>,allocator<pair<float,float> > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_740_0_25, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<pair<float,float>,allocator<pair<float,float> > >::iterator' - 0 - position u 'pair<float,float>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_740_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<pair<float,float>,allocator<pair<float,float> > >::iterator' - 0 - position u 'vector<pair<float,float>,allocator<pair<float,float> > >::iterator' 'vector<pair<float,float>,allocator<pair<float,float> > >::const_iterator' 10 - first "
"u 'vector<pair<float,float>,allocator<pair<float,float> > >::iterator' 'vector<pair<float,float>,allocator<pair<float,float> > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_740_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<pair<float,float>,allocator<pair<float,float> > >::iterator' - 0 - position k - 'vector<pair<float,float>,allocator<pair<float,float> > >::size_type' 0 - n "
"u 'pair<float,float>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__TEventDict_740_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_740_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<pair<float,float>,allocator<pair<float,float> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_740_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<pair<float,float>,allocator<pair<float,float> > >::iterator' - 0 - first u 'vector<pair<float,float>,allocator<pair<float,float> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__TEventDict_740_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<pair<float,float>,allocator<pair<float,float> > >", 5422, G__TEventDict_740_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR(void) {
   /* vector<TFiducialCut*,allocator<TFiducialCut*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR));
   G__memfunc_setup("at",213,G__TEventDict_744_0_1, 85, G__get_linked_tagnum(&G__TEventDictLN_TFiducialCut), G__defined_typename("vector<TFiducialCut*,allocator<TFiducialCut*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TFiducialCut*,allocator<TFiducialCut*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__TEventDict_744_0_2, 85, G__get_linked_tagnum(&G__TEventDictLN_TFiducialCut), G__defined_typename("vector<TFiducialCut*,allocator<TFiducialCut*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TFiducialCut*,allocator<TFiducialCut*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__TEventDict_744_0_3, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__TEventDict_744_0_4, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__TEventDict_744_0_5, 117, G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<TFiducialCut*,allocator<TFiducialCut*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__TEventDict_744_0_6, 117, G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<TFiducialCut*,allocator<TFiducialCut*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__TEventDict_744_0_7, 107, -1, G__defined_typename("vector<TFiducialCut*,allocator<TFiducialCut*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__TEventDict_744_0_8, 107, -1, G__defined_typename("vector<TFiducialCut*,allocator<TFiducialCut*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TEventDict_744_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TFiducialCut*,allocator<TFiducialCut*> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TEventDict_744_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<TFiducialCut*,allocator<TFiducialCut*> >::size_type' 0 - sz U 'TFiducialCut' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__TEventDict_744_0_11, 107, -1, G__defined_typename("vector<TFiducialCut*,allocator<TFiducialCut*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__TEventDict_744_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TEventDict_744_0_13, 85, G__get_linked_tagnum(&G__TEventDictLN_TFiducialCut), G__defined_typename("vector<TFiducialCut*,allocator<TFiducialCut*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TFiducialCut*,allocator<TFiducialCut*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TEventDict_744_0_14, 85, G__get_linked_tagnum(&G__TEventDictLN_TFiducialCut), G__defined_typename("vector<TFiducialCut*,allocator<TFiducialCut*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TFiducialCut*,allocator<TFiducialCut*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TFiducialCut*,allocator<TFiducialCut*> >",4394,G__TEventDict_744_0_15, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TFiducialCut*,allocator<TFiducialCut*> >",4394,G__TEventDict_744_0_16, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<TFiducialCut*,allocator<TFiducialCut*> >::size_type' 0 - n U 'TFiducialCut' - 41 '(TFiducialCut*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TFiducialCut*,allocator<TFiducialCut*> >",4394,G__TEventDict_744_0_17, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<TFiducialCut*,allocator<TFiducialCut*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TFiducialCut*,allocator<TFiducialCut*> >",4394,G__TEventDict_744_0_18, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<TFiducialCut*,allocator<TFiducialCut*> >::iterator' 'vector<TFiducialCut*,allocator<TFiducialCut*> >::const_iterator' 10 - first u 'vector<TFiducialCut*,allocator<TFiducialCut*> >::iterator' 'vector<TFiducialCut*,allocator<TFiducialCut*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TEventDict_744_0_19, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<TFiducialCut*,allocator<TFiducialCut*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__TEventDict_744_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TFiducialCut*,allocator<TFiducialCut*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__TEventDict_744_0_21, 85, G__get_linked_tagnum(&G__TEventDictLN_TFiducialCut), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__TEventDict_744_0_22, 85, G__get_linked_tagnum(&G__TEventDictLN_TFiducialCut), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__TEventDict_744_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TFiducialCut' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__TEventDict_744_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TFiducialCut*,allocator<TFiducialCut*> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_744_0_25, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<TFiducialCut*,allocator<TFiducialCut*> >::iterator' - 0 - position U 'TFiducialCut' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_744_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TFiducialCut*,allocator<TFiducialCut*> >::iterator' - 0 - position u 'vector<TFiducialCut*,allocator<TFiducialCut*> >::iterator' 'vector<TFiducialCut*,allocator<TFiducialCut*> >::const_iterator' 10 - first "
"u 'vector<TFiducialCut*,allocator<TFiducialCut*> >::iterator' 'vector<TFiducialCut*,allocator<TFiducialCut*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_744_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TFiducialCut*,allocator<TFiducialCut*> >::iterator' - 0 - position k - 'vector<TFiducialCut*,allocator<TFiducialCut*> >::size_type' 0 - n "
"U 'TFiducialCut' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__TEventDict_744_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_744_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TFiducialCut*,allocator<TFiducialCut*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_744_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<TFiducialCut*,allocator<TFiducialCut*> >::iterator' - 0 - first u 'vector<TFiducialCut*,allocator<TFiducialCut*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__TEventDict_744_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<TFiducialCut*,allocator<TFiducialCut*> >", 4520, G__TEventDict_744_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSettings(void) {
   /* TSettings */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_TSettings));
   G__memfunc_setup("GetMacro",786,G__TEventDict_748_0_1, 85, G__get_linked_tagnum(&G__TEventDictLN_TMacro), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetColor",799,G__TEventDict_748_0_2, 104, -1, G__defined_typename("UInt_t"), 0, 1, 3, 1, 0, "i - - 0 - no", (char*)NULL, (void*) G__func2void( (UInt_t (*)(int))(&TSettings::GetColor) ), 0);
   G__memfunc_setup("existsDirectory",1621,G__TEventDict_748_0_3, 103, -1, -1, 0, 1, 3, 1, 0, "u 'string' - 0 - dir", (char*)NULL, (void*) G__func2void( (bool (*)(string))(&TSettings::existsDirectory) ), 0);
   G__memfunc_setup("TSettings",933,G__TEventDict_748_0_4, 105, G__get_linked_tagnum(&G__TEventDictLN_TSettings), -1, 0, 1, 1, 1, 0, "U 'TRunInfo' - 0 - runInfo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSettings",933,G__TEventDict_748_0_5, 105, G__get_linked_tagnum(&G__TEventDictLN_TSettings), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' runNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSettings",933,G__TEventDict_748_0_6, 105, G__get_linked_tagnum(&G__TEventDictLN_TSettings), -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - fileName h - 'UInt_t' 0 '0' runNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrentBegin",1512,G__TEventDict_748_0_7, 117, G__get_linked_tagnum(&G__TEventDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrentEnd",1306,G__TEventDict_748_0_8, 117, G__get_linked_tagnum(&G__TEventDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAbsoluteOuputPath",2089,G__TEventDict_748_0_9, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 1, 1, 1, 0, "g - - 0 '0' withRunDescribtion", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAbsoluteInputPath",2076,G__TEventDict_748_0_10, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 0, 1, 1, 0, "", "todo", (void*) NULL, 0);
   G__memfunc_setup("getRawTreeFilePath",1799,G__TEventDict_748_0_11, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPedestalTreeFilePath",2319,G__TEventDict_748_0_12, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getClusterTreeFilePath",2239,G__TEventDict_748_0_13, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAlignmentFilePath",2028,G__TEventDict_748_0_14, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 1, 1, 1, 0, "i 'TSettings::alignmentMode' - 0 'TSettings::normalMode' mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSelectionTreeFilePath",2435,G__TEventDict_748_0_15, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSelectionAnalysisPath",2487,G__TEventDict_748_0_16, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCrossTalkFactorsFileName",2729,G__TEventDict_748_0_17, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSelectionPath",1651,G__TEventDict_748_0_18, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEtaDistributionPath",2279,G__TEventDict_748_0_19, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '-1' step", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get3dDiamondTreeFilePath",2352,G__TEventDict_748_0_20, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get3dDiamondAnalysisPath",2404,G__TEventDict_748_0_21, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getResultsRootFilePath",2275,G__TEventDict_748_0_22, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doCommonModeNoiseCorrection",2775,G__TEventDict_748_0_23, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("goToRawTreeDir",1394,G__TEventDict_748_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("goToClusterTreeDir",1834,G__TEventDict_748_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("goToSelectionTreeDir",2030,G__TEventDict_748_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("goToOutputDir",1353,G__TEventDict_748_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("goToPedestalTreeDir",1914,G__TEventDict_748_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("goToAlignmentRootDir",2043,G__TEventDict_748_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "i 'TSettings::alignmentMode' - 0 'normalMode' mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNegativeChargeCut",2025,G__TEventDict_748_0_30, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNegativeChargeCutStrip",2555,G__TEventDict_748_0_31, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNegativeChargeCut",2037,G__TEventDict_748_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("goTo3dDiamondTreeDir",1947,G__TEventDict_748_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("goTo3dDiamondAnalysisDir",2383,G__TEventDict_748_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("goToPedestalAnalysisDir",2350,G__TEventDict_748_0_35, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("goToClusterAnalysisDir",2270,G__TEventDict_748_0_36, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("goToSelectionDir",1630,G__TEventDict_748_0_37, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("goToSelectionAnalysisDir",2466,G__TEventDict_748_0_38, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("goToAlignmentDir",1623,G__TEventDict_748_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "i 'TSettings::alignmentMode' - 0 'normalMode' mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("goToAlignmentAnalysisDir",2459,G__TEventDict_748_0_40, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("goToTransparentAnalysisDir",2702,G__TEventDict_748_0_41, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTransparentAnalysisDir",2613,G__TEventDict_748_0_42, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 1, 1, 1, 0, "i 'TSettings::alignmentMode' - 0 'TSettings::normalMode' mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getClusterAnalysisDir",2181,G__TEventDict_748_0_43, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getToPedestalAnalysisDir",2456,G__TEventDict_748_0_44, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAlignmentDir",1534,G__TEventDict_748_0_45, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 1, 1, 1, 0, "i 'TSettings::alignmentMode' - 0 'normalMode' mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAlignmentAnalysisFilePath",2864,G__TEventDict_748_0_46, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isSpecialAnalysis",1761,G__TEventDict_748_0_47, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAnalysedDiamond",1837,G__TEventDict_748_0_48, 105, G__get_linked_tagnum(&G__TEventDictLN_TSettingscLcLenumRunDescription), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCell",672,G__TEventDict_748_0_49, 85, G__get_linked_tagnum(&G__TEventDictLN_TCutG), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - nCell u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawMetallisationGrid",2154,G__TEventDict_748_0_50, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TCanvas' - 0 - nCanvas i - - 0 - DiamondPattern", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sortHistosByPulseHeight",2399,G__TEventDict_748_0_51, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR), G__defined_typename("vector<TH1*>"), 0, 1, 1, 1, 0, "u 'vector<TH1*,allocator<TH1*> >' 'vector<TH1*>' 0 - vec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SorterForPulseHeightOfHisto",2756,G__TEventDict_748_0_52, 103, -1, -1, 0, 2, 3, 1, 0, 
"U 'TH1' - 0 - a U 'TH1' - 0 - b", (char*)NULL, (void*) G__func2void( (bool (*)(TH1*, TH1*))(&TSettings::SorterForPulseHeightOfHisto) ), 0);
   G__memfunc_setup("goToDir",696,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'string' - 0 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVerbosity",1299,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - verb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkSettings",1359,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsValidChannel",1381,G__TEventDict_748_0_56, 103, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - det h - 'UInt_t' 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFidCut",907,G__TEventDict_748_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TFiducialCut' - 0 - fidcut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("saveSettings",1280,G__TEventDict_748_0_58, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("loadSettingsFromRootFile",2473,G__TEventDict_748_0_59, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("compareSettings",1592,G__TEventDict_748_0_60, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createSettingsRootFile",2281,G__TEventDict_748_0_61, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRunDescription",1797,G__TEventDict_748_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - runDescription", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOutputDir",1276,G__TEventDict_748_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - ouputDir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInputDir",1147,G__TEventDict_748_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - inputDir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("is3dDiamond",1071,G__TEventDict_748_0_65, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doTransparentAlignment",2308,G__TEventDict_748_0_66, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAlignmentMode",1636,G__TEventDict_748_0_67, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDetectorsToAlign",1947,G__TEventDict_748_0_68, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getInputDir",1135,G__TEventDict_748_0_69, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getOutputDir",1264,G__TEventDict_748_0_70, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRunDescription",1785,G__TEventDict_748_0_71, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRepeaterCard",1522,G__TEventDict_748_0_72, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPHinSigmaPlotFactor",2206,G__TEventDict_748_0_73, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getClusterSeedFactor",2050,G__TEventDict_748_0_74, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - det h - 'UInt_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getClusterHitFactor",1958,G__TEventDict_748_0_75, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - det h - 'UInt_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAlignment_chi2",1700,G__TEventDict_748_0_76, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IgnoreStripForAlignment",2364,G__TEventDict_748_0_77, 103, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - det f - 'Float_t' 0 - predHitPosDetCh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAlignment_chi2",1712,G__TEventDict_748_0_78, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - alignment_chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTransparentChi2",1816,G__TEventDict_748_0_79, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTransparentChi2",1828,G__TEventDict_748_0_80, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFix_dia_noise",1649,G__TEventDict_748_0_81, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getIter_Size",1230,G__TEventDict_748_0_82, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPedestalSildingLength",2462,G__TEventDict_748_0_83, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTaylor_speed_throttle",2560,G__TEventDict_748_0_84, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDia_input",1245,G__TEventDict_748_0_85, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDi_Pedestal_Hit_Factor",2496,G__TEventDict_748_0_86, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSi_Pedestal_Hit_Factor",2511,G__TEventDict_748_0_87, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDO_CMC",773,G__TEventDict_748_0_88, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCMN_cut",969,G__TEventDict_748_0_89, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDi_Cluster_Hit_Factor",2416,G__TEventDict_748_0_90, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDi_Cluster_Seed_Factor",2508,G__TEventDict_748_0_91, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSi_Cluster_Hit_Factor",2431,G__TEventDict_748_0_92, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSi_Cluster_Seed_Factor",2523,G__TEventDict_748_0_93, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSi_avg_fidcut_xhigh",2286,G__TEventDict_748_0_94, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSi_avg_fidcut_xlow",2208,G__TEventDict_748_0_95, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSi_avg_fidcut_yhigh",2287,G__TEventDict_748_0_96, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSi_avg_fidcut_ylow",2209,G__TEventDict_748_0_97, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getClosePlotsOnSave",1940,G__TEventDict_748_0_98, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getIndexProduceSwitch",2172,G__TEventDict_748_0_99, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPulse_height_di_max",2290,G__TEventDict_748_0_100, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPulse_height_num_bins",2523,G__TEventDict_748_0_101, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPulse_height_si_max",2305,G__TEventDict_748_0_102, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPulse_height_max",1990,G__TEventDict_748_0_103, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSaveAllFilesSwitch",2125,G__TEventDict_748_0_104, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSnr_distribution_di_max",2755,G__TEventDict_748_0_105, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSnr_distribution_si_max",2770,G__TEventDict_748_0_106, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEta_hiq_slice_hi",1946,G__TEventDict_748_0_107, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEta_hiq_slice_low",2075,G__TEventDict_748_0_108, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEta_lowq_slice_hi",2075,G__TEventDict_748_0_109, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEta_lowq_slice_low",2204,G__TEventDict_748_0_110, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaxAllowedClustersize",2507,G__TEventDict_748_0_111, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doAnalyseAlignmentEvents",2484,G__TEventDict_748_0_112, 103, -1, -1, 0, 0, 1, 1, 8, "", "DA:", (void*) NULL, 0);
   G__memfunc_setup("getEventBinWidth",1627,G__TEventDict_748_0_113, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", "DA:", (void*) NULL, 0);
   G__memfunc_setup("getEventwiseStart",1800,G__TEventDict_748_0_114, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", "DA:", (void*) NULL, 0);
   G__memfunc_setup("getEventwiseStop",1696,G__TEventDict_748_0_115, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", "DA:", (void*) NULL, 0);
   G__memfunc_setup("getDoEventwise",1453,G__TEventDict_748_0_116, 103, -1, -1, 0, 0, 1, 1, 8, "", "DA:", (void*) NULL, 0);
   G__memfunc_setup("getSkipEvents",1356,G__TEventDict_748_0_117, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR), G__defined_typename("vector<std::pair<Int_t,Int_t> >"), 0, 0, 1, 1, 8, "", "DA:", (void*) NULL, 0);
   G__memfunc_setup("isEventSkip",1141,G__TEventDict_748_0_118, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAsymmetricSample",1996,G__TEventDict_748_0_119, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - asymmetricSample", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAlignment_phi_offsets",2520,G__TEventDict_748_0_120, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAlignment_x_offsets",2319,G__TEventDict_748_0_121, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAlignment_y_offsets",2320,G__TEventDict_748_0_122, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAlignment_z_offsets",2321,G__TEventDict_748_0_123, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEtavsq_n_landau_slices",2615,G__TEventDict_748_0_124, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSnr_plots_enable",1994,G__TEventDict_748_0_125, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAlignment_training_track_fraction",3779,G__TEventDict_748_0_126, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDet_channel_screen",2164,G__TEventDict_748_0_127, 117, G__get_linked_tagnum(&G__TEventDictLN_ChannelScreen), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isDet_channel_screened",2265,G__TEventDict_748_0_128, 103, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - det h - 'UInt_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMasked",785,G__TEventDict_748_0_129, 103, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - det h - 'UInt_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMasked",785,G__TEventDict_748_0_130, 103, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - det f - 'Float_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNoisePlotChannel",1942,G__TEventDict_748_0_131, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", "todo: variable in setttings file", (void*) NULL, 0);
   G__memfunc_setup("getDet_channel_screen_channels",3103,G__TEventDict_748_0_132, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAlternativeClustering",2527,G__TEventDict_748_0_133, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getUseAutoFidCut",1605,G__TEventDict_748_0_134, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAutoFidCutPercentage",2326,G__TEventDict_748_0_135, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", "todo in settingsfile adden", (void*) NULL, 0);
   G__memfunc_setup("getAutoFidCutEvents",1933,G__TEventDict_748_0_136, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNDiamonds",1213,G__TEventDict_748_0_137, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFileName",1089,G__TEventDict_748_0_138, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSingle_channel_analysis_enable",3427,G__TEventDict_748_0_139, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSingle_channel_analysis_eventwindow",4022,G__TEventDict_748_0_140, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCMN_corr_low",1508,G__TEventDict_748_0_141, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCMN_corr_high",1586,G__TEventDict_748_0_142, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSingle_channel_analysis_channels",3656,G__TEventDict_748_0_143, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStore_threshold",1913,G__TEventDict_748_0_144, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRunNumber",1246,G__TEventDict_748_0_145, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isAsymmetricSample",1884,G__TEventDict_748_0_146, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAlignment_training_track_fraction",3791,G__TEventDict_748_0_147, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - alignment_training_track_fraction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFix_dia_noise",1661,G__TEventDict_748_0_148, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - fix_dia_noise", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIter_Size",1242,G__TEventDict_748_0_149, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - Iter_Size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTaylor_speed_throttle",2572,G__TEventDict_748_0_150, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - Taylor_speed_throttle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDi_Pedestal_Hit_Factor",2508,G__TEventDict_748_0_151, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - Di_Pedestal_Hit_Factor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDia_input",1257,G__TEventDict_748_0_152, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - dia_input", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSi_Pedestal_Hit_Factor",2523,G__TEventDict_748_0_153, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - Si_Pedestal_Hit_Factor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDO_CMC",785,G__TEventDict_748_0_154, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - DO_CMC", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCMN_cut",981,G__TEventDict_748_0_155, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - CMN_cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDi_Cluster_Hit_Factor",2428,G__TEventDict_748_0_156, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - Di_Cluster_Hit_Factor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDi_Cluster_Seed_Factor",2520,G__TEventDict_748_0_157, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - Di_Cluster_Seed_Factor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSi_Cluster_Hit_Factor",2443,G__TEventDict_748_0_158, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - Si_Cluster_Hit_Factor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSi_Cluster_Seed_Factor",2535,G__TEventDict_748_0_159, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - Si_Cluster_Seed_Factor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSi_avg_fidcut_xhigh",2298,G__TEventDict_748_0_160, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - si_avg_fidcut_xhigh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSi_avg_fidcut_xlow",2220,G__TEventDict_748_0_161, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - si_avg_fidcut_xlow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSi_avg_fidcut_yhigh",2299,G__TEventDict_748_0_162, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - si_avg_fidcut_yhigh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSi_avg_fidcut_ylow",2221,G__TEventDict_748_0_163, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - si_avg_fidcut_ylow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setClosePlotsOnSave",1952,G__TEventDict_748_0_164, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ClosePlotsOnSave", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIndexProduceSwitch",2184,G__TEventDict_748_0_165, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - IndexProduceSwitch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPulse_height_di_max",2302,G__TEventDict_748_0_166, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - pulse_height_di_max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPulse_height_num_bins",2535,G__TEventDict_748_0_167, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pulse_height_num_bins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPulse_height_si_max",2317,G__TEventDict_748_0_168, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - pulse_height_si_max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSaveAllFilesSwitch",2137,G__TEventDict_748_0_169, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - SaveAllFilesSwitch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSnr_distribution_di_max",2767,G__TEventDict_748_0_170, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - snr_distribution_di_max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSnr_distribution_si_max",2782,G__TEventDict_748_0_171, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - snr_distribution_si_max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEta_hiq_slice_hi",1958,G__TEventDict_748_0_172, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - eta_hiq_slice_hi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEta_hiq_slice_low",2087,G__TEventDict_748_0_173, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - eta_hiq_slice_low", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEta_lowq_slice_hi",2087,G__TEventDict_748_0_174, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - eta_lowq_slice_hi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEta_lowq_slice_low",2216,G__TEventDict_748_0_175, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - eta_lowq_slice_low", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAlignment_phi_offsets",2532,G__TEventDict_748_0_176, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<Float_t>' 0 - alignment_phi_offsets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAlignment_x_offsets",2331,G__TEventDict_748_0_177, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<Float_t>' 0 - alignment_x_offsets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAlignment_y_offsets",2332,G__TEventDict_748_0_178, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<Float_t>' 0 - alignment_y_offsets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAlignment_z_offsets",2333,G__TEventDict_748_0_179, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<Float_t>' 0 - alignment_z_offsets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEtavsq_n_landau_slices",2627,G__TEventDict_748_0_180, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - etavsq_n_landau_slices", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSnr_plots_enable",2006,G__TEventDict_748_0_181, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - snr_plots_enable", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDet_channel_screen",2176,G__TEventDict_748_0_182, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i u 'ChannelScreen' - 0 - Det_channel_screen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDet_channel_screen_channels",3115,G__TEventDict_748_0_183, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i u 'vector<int,allocator<int> >' 'vector<int>' 0 - Det_channel_screen_channels", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAlternativeClustering",2539,G__TEventDict_748_0_184, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - AlternativeClustering", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setUseAutoFidCut",1617,G__TEventDict_748_0_185, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - UseAutoFidCut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSingle_channel_analysis_enable",3439,G__TEventDict_748_0_186, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - singleChannelAnalysisEnable", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSingle_channel_analysis_eventwindow",4034,G__TEventDict_748_0_187, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - singleChannelAnalysisEventWindow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCMN_corr_low",1520,G__TEventDict_748_0_188, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - CMN_corr_low", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCMN_corr_high",1598,G__TEventDict_748_0_189, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - CMN_corr_high", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStore_threshold",1925,G__TEventDict_748_0_190, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - storeThreshold", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNDiamonds",1225,G__TEventDict_748_0_191, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - nDia", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPlotChannelOn",1621,G__TEventDict_748_0_192, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPlotChannelOn",1633,G__TEventDict_748_0_193, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - plotChannelOn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMakeBufferPlots",1834,G__TEventDict_748_0_194, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPlotDiamond",1435,G__TEventDict_748_0_195, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMakeBufferPlots",1846,G__TEventDict_748_0_196, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - makeBufferPlots", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPlotDiamond",1447,G__TEventDict_748_0_197, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - plotDiamond", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEventPrintHex",1652,G__TEventDict_748_0_198, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMakeDiamondPlots",1932,G__TEventDict_748_0_199, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMakeHits2D",1228,G__TEventDict_748_0_200, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMakeNoise2D",1330,G__TEventDict_748_0_201, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMakePedRmsTree",1689,G__TEventDict_748_0_202, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMakePullDist",1519,G__TEventDict_748_0_203, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSingleChannel2000plots",2383,G__TEventDict_748_0_204, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventPrintHex",1664,G__TEventDict_748_0_205, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - eventPrintHex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMakeDiamondPlots",1944,G__TEventDict_748_0_206, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - makeDiamondPlots", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMakeHits2D",1240,G__TEventDict_748_0_207, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - makeHits2D", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMakeNoise2D",1342,G__TEventDict_748_0_208, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - makeNoise2D", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMakePedRmsTree",1701,G__TEventDict_748_0_209, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - makePedRmsTree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMakePullDist",1531,G__TEventDict_748_0_210, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - makePullDist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSingleChannel2000plots",2395,G__TEventDict_748_0_211, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - singleChannel2000plots", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPlottedChannel",1749,G__TEventDict_748_0_212, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPlottedChannel",1761,G__TEventDict_748_0_213, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - plottedChannel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaxBufferPlots",1746,G__TEventDict_748_0_214, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMaxBufferPlots",1758,G__TEventDict_748_0_215, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - maxBufferPlots", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRmsSigmaDifferenceCut",2426,G__TEventDict_748_0_216, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRmsSigmaDifferenceCut",2438,G__TEventDict_748_0_217, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - rmsSigmaDifferenceCut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHighRmsCut",1310,G__TEventDict_748_0_218, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRmsCut",926,G__TEventDict_748_0_219, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHighRmsCut",1322,G__TEventDict_748_0_220, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - highRmsCut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRmsCut",938,G__TEventDict_748_0_221, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - rmsCut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaxNoise2D",1242,G__TEventDict_748_0_222, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSingleTrack2D",1549,G__TEventDict_748_0_223, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSingleTrack2DmaxClusterSize",3024,G__TEventDict_748_0_224, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZoomDiamondPlots",1971,G__TEventDict_748_0_225, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMaxNoise2D",1254,G__TEventDict_748_0_226, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - maxNoise2D", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSingleTrack2D",1561,G__TEventDict_748_0_227, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - singleTrack2D", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSingleTrack2DmaxClusterSize",3036,G__TEventDict_748_0_228, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - singleTrack2DmaxClusterSize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZoomDiamondPlots",1983,G__TEventDict_748_0_229, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - zoomDiamondPlots", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRes_keep_factor",1868,G__TEventDict_748_0_230, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSiliconAlignmentSteps",2463,G__TEventDict_748_0_231, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDiamondAlignmentSteps",2442,G__TEventDict_748_0_232, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doAllAlignmentPlots",1949,G__TEventDict_748_0_233, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrainingMethod",1757,G__TEventDict_748_0_234, 105, G__get_linked_tagnum(&G__TEventDictLN_TSettingscLcLenumAlignmentTrainingMethod), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrainingMethod",1769,G__TEventDict_748_0_235, 121, -1, -1, 0, 1, 1, 1, 0, "i 'TSettings::enumAlignmentTrainingMethod' - 0 - trainingMethod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__TEventDict_748_0_236, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDetChannelNo",1491,G__TEventDict_748_0_237, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - vaCh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVaChannelNo",1389,G__TEventDict_748_0_238, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - detChNo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVerbosity",1287,G__TEventDict_748_0_239, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("useForAlignment",1555,G__TEventDict_748_0_240, 103, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - eventNumber h - 'UInt_t' 0 '0' nEvents", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isInAlignmentFiducialRegion",2743,G__TEventDict_748_0_241, 103, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - - f - 'Float_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isInRoughFiducialCut",2021,G__TEventDict_748_0_242, 103, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - - f - 'Float_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAlignmentTrainingTrackNumber",3193,G__TEventDict_748_0_243, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAlignmentPrecisionOffset",2802,G__TEventDict_748_0_244, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAlignmentPrecisionAngle",2674,G__TEventDict_748_0_245, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAlignmentEvents",1876,G__TEventDict_748_0_246, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - nEvents", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetAlignment",1474,G__TEventDict_748_0_247, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNDiaDetectorAreas",1986,G__TEventDict_748_0_248, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSelectionFidCuts",1944,G__TEventDict_748_0_249, 85, G__get_linked_tagnum(&G__TEventDictLN_TFidCutRegions), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get3dEdgeFidCuts",1534,G__TEventDict_748_0_250, 85, G__get_linked_tagnum(&G__TEventDictLN_TFidCutRegions), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get3dMetallisationFidCuts",2527,G__TEventDict_748_0_251, 85, G__get_linked_tagnum(&G__TEventDictLN_TFidCutRegions), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMinDiamondChannel",2009,G__TEventDict_748_0_252, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaxDiamondChannel",2011,G__TEventDict_748_0_253, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDiaDetectorArea",1793,G__TEventDict_748_0_254, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEintcOintgR), G__defined_typename("pair<Int_t,Int_t>"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isInDiaDetectorArea",1876,G__TEventDict_748_0_255, 103, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ch i - 'Int_t' 0 - area", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isClusterInDiaDetectorArea",2614,G__TEventDict_748_0_256, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'TCluster' - 0 - cluster i - 'Int_t' 0 - area", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isClusterInDiaDetectorArea",2614,G__TEventDict_748_0_257, 103, -1, -1, 0, 2, 1, 1, 0, 
"U 'TCluster' - 0 - cluster i - 'Int_t' 0 - area", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isValidCellNo",1289,G__TEventDict_748_0_258, 103, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - cellNo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDiaDetectorAreaOfChannel",2671,G__TEventDict_748_0_259, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ch h - 'UInt_t' 0 '0' verbosity", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isDiaDetectorAreaBorderChannel",2996,G__TEventDict_748_0_260, 103, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isMaskedCluster",1555,G__TEventDict_748_0_261, 103, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - det u 'TCluster' - 0 - cluster "
"g - - 0 'true' checkAdjacentChannels", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkAdjacentChannelsMasked",2713,G__TEventDict_748_0_262, 103, -1, -1, 0, 0, 1, 1, 0, "", "todo", (void*) NULL, 0);
   G__memfunc_setup("hasBorderSeed",1307,G__TEventDict_748_0_263, 103, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - det u 'TCluster' - 0 - cluster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasBorderHit",1215,G__TEventDict_748_0_264, 103, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - det u 'TCluster' - 0 - cluster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSiliconPitchWidth",2057,G__TEventDict_748_0_265, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDiamondPitchWidth",2036,G__TEventDict_748_0_266, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPitchWidth",1336,G__TEventDict_748_0_267, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - det h - 'UInt_t' 0 '0' area", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("convertChannelToMetric",2273,G__TEventDict_748_0_268, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - det f - 'Float_t' 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("convertMetricToChannelSpace",2765,G__TEventDict_748_0_269, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - det f - 'Float_t' 0 - metricValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintPatterns",1374,G__TEventDict_748_0_270, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChi2Cut3D",1065,G__TEventDict_748_0_271, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChi2Cut3D_X",1248,G__TEventDict_748_0_272, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChi2Cut3D_Y",1249,G__TEventDict_748_0_273, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMinimalAbsoluteEtaValue",2653,G__TEventDict_748_0_274, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMinimalAbsoluteEtaValue",2665,G__TEventDict_748_0_275, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - minAbsEtaVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isUseUserResolutionInput",2540,G__TEventDict_748_0_276, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setUseUserResolutionInput",2652,G__TEventDict_748_0_277, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - useUserResolutionInput", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDefaultResolutionX",2161,G__TEventDict_748_0_278, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDefaultResolutionY",2162,G__TEventDict_748_0_279, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get3DYOffset",1143,G__TEventDict_748_0_280, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", "todo", (void*) NULL, 0);
   G__memfunc_setup("getstripAnalysisFidCut",2293,G__TEventDict_748_0_281, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 0, "", "todo: ????", (void*) NULL, 0);
   G__memfunc_setup("get3DnHAnalysisFidCut",2032,G__TEventDict_748_0_282, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 0, "", "todo: ????", (void*) NULL, 0);
   G__memfunc_setup("get3DwHAnalysisFidCut",2041,G__TEventDict_748_0_283, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 0, "", "todo: ????", (void*) NULL, 0);
   G__memfunc_setup("getAlignmentFidCuts",1937,G__TEventDict_748_0_284, 117, G__get_linked_tagnum(&G__TEventDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDiamond",1020,G__TEventDict_748_0_285, 117, G__get_linked_tagnum(&G__TEventDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVoltage",1042,G__TEventDict_748_0_286, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDiaChannelNoisy",1817,G__TEventDict_748_0_287, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDiaChannelNotConnected",2507,G__TEventDict_748_0_288, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsNotConnectedChannel",2105,G__TEventDict_748_0_289, 103, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsNoisyChannel",1415,G__TEventDict_748_0_290, 103, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNEvents",1027,G__TEventDict_748_0_291, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get3DOverlayRange",1670,G__TEventDict_748_0_292, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RerunSelection",1458,G__TEventDict_748_0_293, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckAlignmentFidcuts",2127,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFileName",1069,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'string' - 0 - fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadSettings",1233,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DefaultLoadDefaultSettings",2651,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseStringArray",1649,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value "
"u 'vector<string,allocator<string> >' 'vector<std::string>' 1 - vec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseFloatArray",1520,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value "
"u 'vector<float,allocator<float> >' 'vector<float>' 1 - vec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseFloatPair",1405,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value "
"u 'pair<float,float>' - 1 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseIntArray",1317,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value "
"u 'vector<int,allocator<int> >' 'vector<int>' 1 - vec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseRegionArray",1630,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value "
"u 'vector<pair<int,int>,allocator<pair<int,int> > >' 'vector<std::pair<Int_t,Int_t> >' 1 - vec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParsePattern",1241,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseFidCut",1082,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value "
"U 'TFiducialCut' - 0 - fidcut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseFidCutRegion",1694,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value "
"U 'TFidCutRegions' - 0 - fidCutRegions g - - 1 - isStandardFidCut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseScreenedChannelArray",2524,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value "
"u 'vector<int,allocator<int> >' 'vector<int>' 1 - vec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseRegionString",1750,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEstringcOstringgR), G__defined_typename("pair<std::string,std::string>"), 0, 2, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseFloat",1009,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value "
"f - - 1 - output", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseFloat",1009,(G__InterfaceMethod) NULL, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseInt",806,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseInt",806,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "u 'string' - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseInt",806,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value "
"i - - 1 - output", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseInt",806,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value "
"h - 'UInt_t' 1 - output", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseBool",903,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value "
"g - - 1 - output", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseTString",1222,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value "
"u 'TString' - 1 - output", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseString",1138,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value "
"u 'string' - 1 - output", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseCellArray",1402,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value "
"u 'vector<int,allocator<int> >' 'vector<Int_t>' 1 - cells", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseCellArray",1402,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value "
"u 'vector<int,allocator<int> >' 'vector<int>' 1 - vecCells u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >' 'vector<vector<int> >' 1 - PtrvecCells", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Parse",507,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value "
"u 'vector<float,allocator<float> >' 'vector<float>' 1 - vec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Parse",507,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value "
"u 'vector<int,allocator<int> >' 'vector<int>' 1 - vec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Parse",507,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value "
"g - - 1 - output", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Parse",507,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value "
"i - - 1 - output", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Parse",507,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value "
"h - 'UInt_t' 1 - output", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Parse",507,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value "
"f - - 1 - output", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Parse",507,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value "
"u 'TString' - 1 - output", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Parse",507,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value "
"u 'string' - 1 - output", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseEventSkip",1428,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value "
"u 'vector<pair<int,int>,allocator<pair<int,int> > >' 'vector<std::pair<Int_t,Int_t> >' 1 - vect", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseCellPosition",1744,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEcharcOintgR), -1, 0, 1, 1, 4, 0, "u 'string' - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadDefaultResolutions",2284,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckEdgeFidcuialCuts",2067,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLowResponseThreshold",2414,G__TEventDict_748_0_331, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOverlayHisto",1545,G__TEventDict_748_0_332, 85, G__get_linked_tagnum(&G__TEventDictLN_TH2F), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - name i - 'Int_t' 0 '2' pattern "
"h - 'UInt_t' 0 '15' nbinsx h - 'UInt_t' 0 '15' nbinsy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOverlayProfile",1747,G__TEventDict_748_0_333, 85, G__get_linked_tagnum(&G__TEventDictLN_TProfile2D), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - name i - 'Int_t' 0 '2' pattern "
"h - 'UInt_t' 0 '15' nbinsx h - 'UInt_t' 0 '15' nbinsy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getResponseWindow",1799,G__TEventDict_748_0_334, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR), G__defined_typename("pair<Float_t,Float_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCellHeight",1273,G__TEventDict_748_0_335, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetResolutionSNR",1607,G__TEventDict_748_0_336, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCellWidth",1184,G__TEventDict_748_0_337, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"i - - 0 - det i - - 0 - pattern", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEdgePositionName",1931,G__TEventDict_748_0_338, 117, G__get_linked_tagnum(&G__TEventDictLN_TString), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", "todo make it safe", (void*) NULL, 0);
   G__memfunc_setup("getEdgePositionType",1964,G__TEventDict_748_0_339, 105, G__get_linked_tagnum(&G__TEventDictLN_TPlanePropertiescLcLenumCoordinate), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEdgePosition",1546,G__TEventDict_748_0_340, 85, G__get_linked_tagnum(&G__TEventDictLN_TCutG), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("do3dShortAnalysis",1726,G__TEventDict_748_0_341, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("do3dLongAnalysis",1598,G__TEventDict_748_0_342, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("do3dTransparentAnalysis",2368,G__TEventDict_748_0_343, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set3dTransparentAnalysis",2489,G__TEventDict_748_0_344, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - trans", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCellPosition",1762,G__TEventDict_748_0_345, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - cell i - - 0 - diamondPattern", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCellPositionX",1645,G__TEventDict_748_0_346, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR), G__defined_typename("pair<Float_t,Float_t>"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - cell i - - 0 - diamondPattern", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCellPositionY",1646,G__TEventDict_748_0_347, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR), G__defined_typename("pair<Float_t,Float_t>"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - cell i - - 0 - diamondPattern", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCellPositionX",1645,G__TEventDict_748_0_348, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR), G__defined_typename("pair<Float_t,Float_t>"), 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - column h - 'UInt_t' 0 - row "
"i - - 0 - diamondPattern", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCellPositionY",1646,G__TEventDict_748_0_349, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR), G__defined_typename("pair<Float_t,Float_t>"), 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - column h - 'UInt_t' 0 - row "
"i - - 0 - diamondPattern", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNRows3d",988,G__TEventDict_748_0_350, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - nRows", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNRows3d",976,G__TEventDict_748_0_351, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", "Horizontally", (void*) NULL, 0);
   G__memfunc_setup("setNColumns3d",1298,G__TEventDict_748_0_352, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - nColumns", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNColumns3d",1286,G__TEventDict_748_0_353, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", "Vertical", (void*) NULL, 0);
   G__memfunc_setup("GetNCells3d",1016,G__TEventDict_748_0_354, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNQuarters3d",1404,G__TEventDict_748_0_355, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGoodCellRegions3d",1975,G__TEventDict_748_0_356, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR), G__defined_typename("vector<vector<Int_t> >"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBadCells3D",1201,G__TEventDict_748_0_357, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBadCells3DnH",1383,G__TEventDict_748_0_358, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDeadCell3D",1189,G__TEventDict_748_0_359, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAllGoodCellsXpos",1919,G__TEventDict_748_0_360, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR), G__defined_typename("pair<Float_t,Float_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAllGoodCellsYpos",1920,G__TEventDict_748_0_361, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR), G__defined_typename("pair<Float_t,Float_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isDeadCell",970,G__TEventDict_748_0_362, 103, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - nDiamondPattern i - 'Int_t' 0 - cellNo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isBadCell",867,G__TEventDict_748_0_363, 103, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - nDiamondPattern i - 'Int_t' 0 - cellNo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isBadCell",867,G__TEventDict_748_0_364, 103, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - nDiamondPattern f - 'Float_t' 0 - xDet "
"f - 'Float_t' 0 - yDet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsGoodCell",965,G__TEventDict_748_0_365, 103, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - nDiamondPattern i - 'Int_t' 0 - cellNo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get3DQuarterNo",1368,G__TEventDict_748_0_366, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - column i - - 0 - row "
"i - - 0 - quarter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get3DCellNo",1012,G__TEventDict_748_0_367, 105, -1, -1, 0, 2, 1, 1, 0, 
"c - - 0 - column i - - 0 - row", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get3DCellNo",1012,G__TEventDict_748_0_368, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - column i - - 0 - row", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get3DCellNo",1012,G__TEventDict_748_0_369, 105, -1, -1, 0, 1, 1, 1, 0, "u 'pair<char,int>' - 0 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCellNo",893,G__TEventDict_748_0_370, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - xDet f - 'Float_t' 0 - yDet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCellAndQuarterNo",1908,G__TEventDict_748_0_371, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEintcOintgR), -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - xDet f - 'Float_t' 0 - yDet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaxOverlayClusterSize",2501,G__TEventDict_748_0_372, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCentralColumnOverlayXLow",2787,G__TEventDict_748_0_373, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCentralColumnOverlayXHigh",2865,G__TEventDict_748_0_374, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCentralColumnOverlayYLow",2788,G__TEventDict_748_0_375, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCentralColumnOverlayYHigh",2866,G__TEventDict_748_0_376, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCentralColumnOverlayXBins",2877,G__TEventDict_748_0_377, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCentralColumnOverlayYBins",2878,G__TEventDict_748_0_378, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBiasColumnOverlayXLow",2457,G__TEventDict_748_0_379, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBiasColumnOverlayXHigh",2535,G__TEventDict_748_0_380, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBiasColumnOverlayYLow",2458,G__TEventDict_748_0_381, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBiasColumnOverlayYHigh",2536,G__TEventDict_748_0_382, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getOverlayOffsetX",1761,G__TEventDict_748_0_383, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getOverlayOffsetY",1762,G__TEventDict_748_0_384, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getOverlayColumnPulseHeightCut",3102,G__TEventDict_748_0_385, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRowOfCell",1197,G__TEventDict_748_0_386, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - cellNo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getColumnOfCell",1507,G__TEventDict_748_0_387, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - cellNo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getColumnChar",1324,G__TEventDict_748_0_388, 99, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - column", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getColumnCharOfCell",1889,G__TEventDict_748_0_389, 99, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - cellNo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRelativePositionInCell",2568,G__TEventDict_748_0_390, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR), G__defined_typename("pair<Float_t,Float_t>"), 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - xPredDet f - 'Float_t' 0 - yPredDet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get3dWithHolesDiamondPattern",2824,G__TEventDict_748_0_391, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsWithInTheColumnRadius",2310,G__TEventDict_748_0_392, 103, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - relCellPosX f - 'Float_t' 0 - relCellPosY", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsOnTheEdgeOfCell",1604,G__TEventDict_748_0_393, 103, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - relCellPosX f - 'Float_t' 0 - relCellPosY "
"f - 'Float_t' 0 - minDistanceToEdge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsOnTheEdgeOfCell",1604,G__TEventDict_748_0_394, 103, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - relCellPosX f - 'Float_t' 0 - relCellPosY", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsOnTheEdgeOfCell",1604,G__TEventDict_748_0_395, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'pair<float,float>' 'pair<Float_t,Float_t>' 0 - relCellPos f - 'Float_t' 0 - minDistanceToEdge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsOnTheEdgeOfCell",1604,G__TEventDict_748_0_396, 103, -1, -1, 0, 1, 1, 1, 0, "u 'pair<float,float>' 'pair<Float_t,Float_t>' 0 - relCellPos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinimumEdgeDistance",2204,G__TEventDict_748_0_397, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPaperMode",1081,G__TEventDict_748_0_398, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAdcToElectronConversion",2669,G__TEventDict_748_0_399, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TEventDict_748_0_400, 85, G__get_linked_tagnum(&G__TEventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSettings::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEventDict_748_0_401, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSettings::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEventDict_748_0_402, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSettings::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEventDict_748_0_403, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSettings::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TEventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEventDict_748_0_407, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEventDict_748_0_408, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSettings::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEventDict_748_0_409, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSettings::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEventDict_748_0_410, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSettings::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEventDict_748_0_411, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSettings::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSettings", 933, G__TEventDict_748_0_412, (int) ('i'), G__get_linked_tagnum(&G__TEventDictLN_TSettings), -1, 0, 1, 1, 1, 0, "u 'TSettings' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSettings", 1059, G__TEventDict_748_0_413, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR(void) {
   /* map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR));
   G__memfunc_setup("map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >",7032,G__TEventDict_777_0_1, 105, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >",7032,G__TEventDict_777_0_2, 105, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator' - 0 - first u 'map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >",7032,G__TEventDict_777_0_3, 105, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::reverse_iterator' - 0 - first u 'map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >",7032,G__TEventDict_777_0_4, 105, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TEventDict_777_0_5, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__TEventDict_777_0_6, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__TEventDict_777_0_7, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__TEventDict_777_0_8, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__TEventDict_777_0_9, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__TEventDict_777_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__TEventDict_777_0_11, 107, -1, G__defined_typename("map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__TEventDict_777_0_12, 107, -1, G__defined_typename("map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TEventDict_777_0_13, 117, G__get_linked_tagnum(&G__TEventDictLN_TString), -1, 1, 1, 1, 1, 0, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_777_0_14, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<TString,TString>' 'map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_777_0_15, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator' - 0 - position u 'pair<TString,TString>' 'map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_777_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator' - 0 - first u 'map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_777_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::reverse_iterator' - 0 - first u 'map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_777_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_777_0_19, 107, -1, G__defined_typename("map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::size_type"), 0, 1, 1, 1, 0, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_777_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator' - 0 - first u 'map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__TEventDict_777_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__TEventDict_777_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__TEventDict_777_0_23, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__TEventDict_777_0_24, 107, -1, G__defined_typename("map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::size_type"), 0, 1, 1, 1, 8, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__TEventDict_777_0_25, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__TEventDict_777_0_26, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >", 7158, G__TEventDict_777_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR(void) {
   /* map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR));
   G__memfunc_setup("map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >",19698,G__TEventDict_784_0_1, 105, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >",19698,G__TEventDict_784_0_2, 105, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator' - 0 - first u 'map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >",19698,G__TEventDict_784_0_3, 105, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::reverse_iterator' - 0 - first u 'map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >",19698,G__TEventDict_784_0_4, 105, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TEventDict_784_0_5, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__TEventDict_784_0_6, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__TEventDict_784_0_7, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__TEventDict_784_0_8, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__TEventDict_784_0_9, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__TEventDict_784_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__TEventDict_784_0_11, 107, -1, G__defined_typename("map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__TEventDict_784_0_12, 107, -1, G__defined_typename("map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TEventDict_784_0_13, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_784_0_14, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEmaplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > >' 'map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_784_0_15, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator' - 0 - position u 'pair<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > >' 'map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_784_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator' - 0 - first u 'map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_784_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::reverse_iterator' - 0 - first u 'map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_784_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_784_0_19, 107, -1, G__defined_typename("map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::size_type"), 0, 1, 1, 1, 0, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_784_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator' - 0 - first u 'map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__TEventDict_784_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__TEventDict_784_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__TEventDict_784_0_23, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__TEventDict_784_0_24, 107, -1, G__defined_typename("map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::size_type"), 0, 1, 1, 1, 8, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__TEventDict_784_0_25, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__TEventDict_784_0_26, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >", 19824, G__TEventDict_784_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTResults(void) {
   /* TResults */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_TResults));
   G__memfunc_setup("TResults",838,G__TEventDict_789_0_1, 105, G__get_linked_tagnum(&G__TEventDictLN_TResults), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' runnumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TResults",838,G__TEventDict_789_0_2, 105, G__get_linked_tagnum(&G__TEventDictLN_TResults), -1, 0, 1, 1, 1, 0, "U 'TSettings' - 0 - settings", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TResults",838,G__TEventDict_789_0_3, 105, G__get_linked_tagnum(&G__TEventDictLN_TResults), -1, 0, 1, 1, 1, 0, "u 'TResults' - 11 - rhs", "copy constructor", (void*) NULL, 0);
   G__memfunc_setup("createResultFiles",1766,G__TEventDict_789_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("saveResults",1185,G__TEventDict_789_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("openResults",1188,G__TEventDict_789_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TSettings' - 0 - Settings", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__TEventDict_789_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAlignment",1259,G__TEventDict_789_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TDetectorAlignment' - 0 - newAlignment", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLastUpdateDate",1717,G__TEventDict_789_0_9, 117, G__get_linked_tagnum(&G__TEventDictLN_TDatime), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNoise",842,G__TEventDict_789_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - det f - 'Float_t' 0 - detNoise", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDiaNoiseCMcorrected",2211,G__TEventDict_789_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - noise", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCMN",554,G__TEventDict_789_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - cmn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAllEvents",1230,G__TEventDict_789_0_13, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getExactlyOneDiamondHit",2333,G__TEventDict_789_0_14, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMoreThanOneDiamondHit",2401,G__TEventDict_789_0_15, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNoDiamondHit",1502,G__TEventDict_789_0_16, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNoSiliconHit",1523,G__TEventDict_789_0_17, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getOneAndOnlyOneSiliconNotFiducialCut",3720,G__TEventDict_789_0_18, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getValidSiliconTrack",2038,G__TEventDict_789_0_19, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getUseForAlignment",1843,G__TEventDict_789_0_20, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getUseForAnalysis",1752,G__TEventDict_789_0_21, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAvergSiliconCorrection",2590,G__TEventDict_789_0_22, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR), G__defined_typename("pair<Float_t,Float_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAvergDiamondCorrection",2569,G__TEventDict_789_0_23, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAllEvents",1242,G__TEventDict_789_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - allEvents", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setExactlyOneDiamondHit",2345,G__TEventDict_789_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - exactlyOneDiamondHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMoreThanOneDiamondHit",2413,G__TEventDict_789_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - moreThanOneDiamondHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNoDiamondHit",1514,G__TEventDict_789_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - noDiamondHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNoSiliconHit",1535,G__TEventDict_789_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - noSiliconHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOneAndOnlyOneSiliconNotFiducialCut",3732,G__TEventDict_789_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - oneAndOnlyOneSiliconNotFiducialCut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setValidSiliconTrack",2050,G__TEventDict_789_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - validSiliconTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setUseForAlignment",1855,G__TEventDict_789_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - useForAlignment", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setUseForAnalysis",1764,G__TEventDict_789_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - useForAnalysis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSeedSigma",1214,G__TEventDict_789_0_33, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - det f - 'Float_t' 0 - sigma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHitSigma",1122,G__TEventDict_789_0_34, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - det f - 'Float_t' 0 - sigma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRunNumber",1246,G__TEventDict_789_0_35, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRunNumber",1258,G__TEventDict_789_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - runNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDoubleGaussianResolution",2838,G__TEventDict_789_0_37, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - gaus1 f - 'Float_t' 0 - gaus2 "
"i 'TSettings::alignmentMode' - 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSingleGaussianResolution",2845,G__TEventDict_789_0_38, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - gaus i 'TSettings::alignmentMode' - 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSingleGaussianShortResolution",3373,G__TEventDict_789_0_39, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - gaus i 'TSettings::alignmentMode' - 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSingleGaussianFWTMResolution",3163,G__TEventDict_789_0_40, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - gaus i 'TSettings::alignmentMode' - 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSingleGaussianFixedResolution",3341,G__TEventDict_789_0_41, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - gaus i 'TSettings::alignmentMode' - 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSignalFeedOverCorrection",2770,G__TEventDict_789_0_42, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - det f - 'Float_t' 0 - correction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPH_clustered",1550,G__TEventDict_789_0_43, 121, -1, -1, 0, 5, 1, 1, 0, 
"f - 'Float_t' 0 - mean f - 'Float_t' 0 - mp "
"f - 'Float_t' 0 - width f - 'Float_t' 0 - gSigma "
"i 'TSettings::alignmentMode' - 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("updated",743,G__TEventDict_789_0_44, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChannelsStringList",2175,G__TEventDict_789_0_45, 117, G__get_linked_tagnum(&G__TEventDictLN_TString), -1, 0, 1, 1, 1, 0, "u 'set<int,less<int>,allocator<int> >' 'set<Int_t>' 0 - channelSet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeFiles",1054,G__TEventDict_789_0_46, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFloatValue",1343,G__TEventDict_789_0_47, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 - section u 'TString' - 0 - key "
"f - 'Float_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIntValue",1140,G__TEventDict_789_0_48, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 - section u 'TString' - 0 - key "
"i - 'Int_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStringValue",1472,G__TEventDict_789_0_49, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 - section u 'TString' - 0 - key "
"u 'TString' - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaskedChannels",1729,G__TEventDict_789_0_50, 117, G__get_linked_tagnum(&G__TEventDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialiseResults",1821,G__TEventDict_789_0_51, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("inheritOldResults",1796,G__TEventDict_789_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TResults' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPH_2outOf10",1251,G__TEventDict_789_0_53, 121, -1, -1, 0, 5, 1, 1, 0, 
"f - 'Float_t' 0 - Mean f - 'Float_t' 0 - MP "
"f - 'Float_t' 0 - width f - 'Float_t' 0 - gSigma "
"i 'TSettings::alignmentMode' - 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPH_NoutOfN",1260,G__TEventDict_789_0_54, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >' 'vector<Float_t>' 0 - vecMeans i 'TSettings::alignmentMode' - 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createOutputTextFile",2090,G__TEventDict_789_0_55, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createOutputResultFile",2308,G__TEventDict_789_0_56, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAvrgSilNoise",1526,G__TEventDict_789_0_57, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEfloatcOfloatgR), G__defined_typename("pair<Float_t,Float_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createSection",1353,G__TEventDict_789_0_58, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - sectionName u 'map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >' 'map<TString,TString>' 0 - results", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setResultsFromSettings",2339,G__TEventDict_789_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TSettings' - 0 - settings", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addKey",594,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"u 'TString' - 0 - section u 'TString' - 0 - key "
"u 'TString' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("emptyString",1190,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__TEventDictLN_string), -1, 0, 2, 1, 4, 0, 
"h - 'UInt_t' 0 - nChars c - - 0 '' '' character", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TEventDict_789_0_62, 85, G__get_linked_tagnum(&G__TEventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TResults::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEventDict_789_0_63, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TResults::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEventDict_789_0_64, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TResults::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEventDict_789_0_65, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TResults::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TEventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEventDict_789_0_69, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEventDict_789_0_70, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TResults::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEventDict_789_0_71, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TResults::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEventDict_789_0_72, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TResults::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEventDict_789_0_73, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TResults::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TResults", 964, G__TEventDict_789_0_74, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TEventDict_789_0_75, (int) ('u'), G__get_linked_tagnum(&G__TEventDictLN_TResults), -1, 1, 1, 1, 1, 0, "u 'TResults' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR(void) {
   /* map<TString,int,less<TString>,allocator<pair<const TString,int> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR));
   G__memfunc_setup("map<TString,int,less<TString>,allocator<pair<const TString,int> > >",6264,G__TEventDict_792_0_1, 105, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<TString,int,less<TString>,allocator<pair<const TString,int> > >",6264,G__TEventDict_792_0_2, 105, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator' - 0 - first u 'map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<TString,int,less<TString>,allocator<pair<const TString,int> > >",6264,G__TEventDict_792_0_3, 105, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<TString,int,less<TString>,allocator<pair<const TString,int> > >::reverse_iterator' - 0 - first u 'map<TString,int,less<TString>,allocator<pair<const TString,int> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<TString,int,less<TString>,allocator<pair<const TString,int> > >",6264,G__TEventDict_792_0_4, 105, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<TString,int,less<TString>,allocator<pair<const TString,int> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TEventDict_792_0_5, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<TString,int,less<TString>,allocator<pair<const TString,int> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__TEventDict_792_0_6, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__TEventDict_792_0_7, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__TEventDict_792_0_8, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__TEventDict_792_0_9, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__TEventDict_792_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__TEventDict_792_0_11, 107, -1, G__defined_typename("map<TString,int,less<TString>,allocator<pair<const TString,int> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__TEventDict_792_0_12, 107, -1, G__defined_typename("map<TString,int,less<TString>,allocator<pair<const TString,int> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TEventDict_792_0_13, 105, -1, -1, 1, 1, 1, 1, 0, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_792_0_14, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEmaplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<TString,int>' 'map<TString,int,less<TString>,allocator<pair<const TString,int> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_792_0_15, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator' - 0 - position u 'pair<TString,int>' 'map<TString,int,less<TString>,allocator<pair<const TString,int> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_792_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator' - 0 - first u 'map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_792_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<TString,int,less<TString>,allocator<pair<const TString,int> > >::reverse_iterator' - 0 - first u 'map<TString,int,less<TString>,allocator<pair<const TString,int> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_792_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_792_0_19, 107, -1, G__defined_typename("map<TString,int,less<TString>,allocator<pair<const TString,int> > >::size_type"), 0, 1, 1, 1, 0, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_792_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator' - 0 - first u 'map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__TEventDict_792_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<TString,int,less<TString>,allocator<pair<const TString,int> > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__TEventDict_792_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__TEventDict_792_0_23, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__TEventDict_792_0_24, 107, -1, G__defined_typename("map<TString,int,less<TString>,allocator<pair<const TString,int> > >::size_type"), 0, 1, 1, 1, 8, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__TEventDict_792_0_25, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__TEventDict_792_0_26, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<TString,int,less<TString>,allocator<pair<const TString,int> > >", 6390, G__TEventDict_792_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR(void) {
   /* map<TString,float,less<TString>,allocator<pair<const TString,float> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR));
   G__memfunc_setup("map<TString,float,less<TString>,allocator<pair<const TString,float> > >",6670,G__TEventDict_799_0_1, 105, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<TString,float,less<TString>,allocator<pair<const TString,float> > >",6670,G__TEventDict_799_0_2, 105, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator' - 0 - first u 'map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<TString,float,less<TString>,allocator<pair<const TString,float> > >",6670,G__TEventDict_799_0_3, 105, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<TString,float,less<TString>,allocator<pair<const TString,float> > >::reverse_iterator' - 0 - first u 'map<TString,float,less<TString>,allocator<pair<const TString,float> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<TString,float,less<TString>,allocator<pair<const TString,float> > >",6670,G__TEventDict_799_0_4, 105, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<TString,float,less<TString>,allocator<pair<const TString,float> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TEventDict_799_0_5, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<TString,float,less<TString>,allocator<pair<const TString,float> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__TEventDict_799_0_6, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__TEventDict_799_0_7, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__TEventDict_799_0_8, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__TEventDict_799_0_9, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__TEventDict_799_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__TEventDict_799_0_11, 107, -1, G__defined_typename("map<TString,float,less<TString>,allocator<pair<const TString,float> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__TEventDict_799_0_12, 107, -1, G__defined_typename("map<TString,float,less<TString>,allocator<pair<const TString,float> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TEventDict_799_0_13, 102, -1, -1, 1, 1, 1, 1, 0, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_799_0_14, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEmaplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<TString,float>' 'map<TString,float,less<TString>,allocator<pair<const TString,float> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_799_0_15, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator' - 0 - position u 'pair<TString,float>' 'map<TString,float,less<TString>,allocator<pair<const TString,float> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_799_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator' - 0 - first u 'map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_799_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<TString,float,less<TString>,allocator<pair<const TString,float> > >::reverse_iterator' - 0 - first u 'map<TString,float,less<TString>,allocator<pair<const TString,float> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_799_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_799_0_19, 107, -1, G__defined_typename("map<TString,float,less<TString>,allocator<pair<const TString,float> > >::size_type"), 0, 1, 1, 1, 0, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_799_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator' - 0 - first u 'map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__TEventDict_799_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<TString,float,less<TString>,allocator<pair<const TString,float> > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__TEventDict_799_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__TEventDict_799_0_23, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__TEventDict_799_0_24, 107, -1, G__defined_typename("map<TString,float,less<TString>,allocator<pair<const TString,float> > >::size_type"), 0, 1, 1, 1, 8, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__TEventDict_799_0_25, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__TEventDict_799_0_26, 117, G__get_linked_tagnum(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<TString,float,less<TString>,allocator<pair<const TString,float> > >", 6796, G__TEventDict_799_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEunsignedsPshortcOfloatgR(void) {
   /* pair<unsigned short,float> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPshortcOfloatgR));
   G__memfunc_setup("pair<unsigned short,float>",2581,G__TEventDict_804_0_1, 105, G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPshortcOfloatgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pair<unsigned short,float>",2581,G__TEventDict_804_0_2, 105, G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPshortcOfloatgR), -1, 0, 2, 1, 1, 0, 
"r - - 11 - a f - - 11 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPshortcOfloatgR), -1, 1, 1, 1, 4, 0, "u 'pair<unsigned short,float>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pair<unsigned short,float>", 2581, G__TEventDict_804_0_4, (int) ('i'), 
G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPshortcOfloatgR), -1, 0, 1, 1, 1, 0, "u 'pair<unsigned short,float>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pair<unsigned short,float>", 2707, G__TEventDict_804_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEintcOfloatgR(void) {
   /* pair<int,float> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_pairlEintcOfloatgR));
   G__memfunc_setup("pair<int,float>",1459,G__TEventDict_805_0_1, 105, G__get_linked_tagnum(&G__TEventDictLN_pairlEintcOfloatgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pair<int,float>",1459,G__TEventDict_805_0_2, 105, G__get_linked_tagnum(&G__TEventDictLN_pairlEintcOfloatgR), -1, 0, 2, 1, 1, 0, 
"i - - 11 - a f - - 11 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEintcOfloatgR), -1, 1, 1, 1, 4, 0, "u 'pair<int,float>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pair<int,float>", 1459, G__TEventDict_805_0_4, (int) ('i'), G__get_linked_tagnum(&G__TEventDictLN_pairlEintcOfloatgR), -1, 0, 1, 1, 1, 0, "u 'pair<int,float>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pair<int,float>", 1585, G__TEventDict_805_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR(void) {
   /* deque<pair<int,float>,allocator<pair<int,float> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR));
   G__memfunc_setup("deque<pair<int,float>,allocator<pair<int,float> > >",4763,G__TEventDict_807_0_1, 105, G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<pair<int,float>,allocator<pair<int,float> > >",4763,G__TEventDict_807_0_2, 105, G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'deque<pair<int,float>,allocator<pair<int,float> > >::size_type' 0 - n u 'pair<int,float>' - 11 '(pair<int,float>)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<pair<int,float>,allocator<pair<int,float> > >",4763,G__TEventDict_807_0_3, 105, G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'pair<int,float>' - 10 - first U 'pair<int,float>' - 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<pair<int,float>,allocator<pair<int,float> > >",4763,G__TEventDict_807_0_4, 105, G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'deque<pair<int,float>,allocator<pair<int,float> > >::iterator' 'deque<pair<int,float>,allocator<pair<int,float> > >::const_iterator' 10 - first u 'deque<pair<int,float>,allocator<pair<int,float> > >::iterator' 'deque<pair<int,float>,allocator<pair<int,float> > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<pair<int,float>,allocator<pair<int,float> > >",4763,G__TEventDict_807_0_5, 105, G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'deque<pair<int,float>,allocator<pair<int,float> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TEventDict_807_0_6, 117, G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'deque<pair<int,float>,allocator<pair<int,float> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__TEventDict_807_0_7, 117, G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__TEventDict_807_0_8, 117, G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__TEventDict_807_0_9, 117, G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__TEventDict_807_0_10, 117, G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__TEventDict_807_0_11, 107, -1, G__defined_typename("deque<pair<int,float>,allocator<pair<int,float> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__TEventDict_807_0_12, 107, -1, G__defined_typename("deque<pair<int,float>,allocator<pair<int,float> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TEventDict_807_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'deque<pair<int,float>,allocator<pair<int,float> > >::size_type' 0 - sz u 'pair<int,float>' - 0 '(pair<int,float>)()' c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__TEventDict_807_0_14, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TEventDict_807_0_15, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEintcOfloatgR), -1, 1, 1, 1, 1, 0, "k - 'deque<pair<int,float>,allocator<pair<int,float> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__TEventDict_807_0_16, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEintcOfloatgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__TEventDict_807_0_17, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEintcOfloatgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_front",1096,G__TEventDict_807_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'pair<int,float>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__TEventDict_807_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'pair<int,float>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_807_0_20, 117, G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<pair<int,float>,allocator<pair<int,float> > >::iterator' - 0 - position u 'pair<int,float>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_807_0_21, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<pair<int,float>,allocator<pair<int,float> > >::iterator' - 0 - position k - 'deque<pair<int,float>,allocator<pair<int,float> > >::size_type' 0 - n "
"u 'pair<int,float>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_front",983,G__TEventDict_807_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__TEventDict_807_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_807_0_24, 117, G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'deque<pair<int,float>,allocator<pair<int,float> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_807_0_25, 117, G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<pair<int,float>,allocator<pair<int,float> > >::iterator' - 0 - first u 'deque<pair<int,float>,allocator<pair<int,float> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__TEventDict_807_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'deque<pair<int,float>,allocator<pair<int,float> > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__TEventDict_807_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~deque<pair<int,float>,allocator<pair<int,float> > >", 4889, G__TEventDict_807_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR(void) {
   /* deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR));
   G__memfunc_setup("deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >",7007,G__TEventDict_811_0_1, 105, G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >",7007,G__TEventDict_811_0_2, 105, G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::size_type' 0 - n u 'pair<unsigned short,float>' - 11 '(pair<unsigned short,float>)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >",7007,G__TEventDict_811_0_3, 105, G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'pair<unsigned short,float>' - 10 - first U 'pair<unsigned short,float>' - 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >",7007,G__TEventDict_811_0_4, 105, G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator' 'deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::const_iterator' 10 - first u 'deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator' 'deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >",7007,G__TEventDict_811_0_5, 105, G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TEventDict_811_0_6, 117, G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__TEventDict_811_0_7, 117, G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__TEventDict_811_0_8, 117, G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__TEventDict_811_0_9, 117, G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__TEventDict_811_0_10, 117, G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__TEventDict_811_0_11, 107, -1, G__defined_typename("deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__TEventDict_811_0_12, 107, -1, G__defined_typename("deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TEventDict_811_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::size_type' 0 - sz u 'pair<unsigned short,float>' - 0 '(pair<unsigned short,float>)()' c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__TEventDict_811_0_14, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TEventDict_811_0_15, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPshortcOfloatgR), -1, 1, 1, 1, 1, 0, "k - 'deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__TEventDict_811_0_16, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPshortcOfloatgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__TEventDict_811_0_17, 117, G__get_linked_tagnum(&G__TEventDictLN_pairlEunsignedsPshortcOfloatgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_front",1096,G__TEventDict_811_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'pair<unsigned short,float>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__TEventDict_811_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'pair<unsigned short,float>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_811_0_20, 117, G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator' - 0 - position u 'pair<unsigned short,float>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_811_0_21, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator' - 0 - position k - 'deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::size_type' 0 - n "
"u 'pair<unsigned short,float>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_front",983,G__TEventDict_811_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__TEventDict_811_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_811_0_24, 117, G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_811_0_25, 117, G__get_linked_tagnum(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator' - 0 - first u 'deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__TEventDict_811_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__TEventDict_811_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >", 7133, G__TEventDict_811_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR(void) {
   /* vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__TEventDict_815_0_1, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR), G__defined_typename("vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__TEventDict_815_0_2, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR), G__defined_typename("vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__TEventDict_815_0_3, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__TEventDict_815_0_4, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__TEventDict_815_0_5, 117, G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__TEventDict_815_0_6, 117, G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__TEventDict_815_0_7, 107, -1, G__defined_typename("vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__TEventDict_815_0_8, 107, -1, G__defined_typename("vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TEventDict_815_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TEventDict_815_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::size_type' 0 - sz u 'vector<TCluster,allocator<TCluster> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__TEventDict_815_0_11, 107, -1, G__defined_typename("vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__TEventDict_815_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TEventDict_815_0_13, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR), G__defined_typename("vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TEventDict_815_0_14, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR), G__defined_typename("vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >",9140,G__TEventDict_815_0_15, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >",9140,G__TEventDict_815_0_16, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::size_type' 0 - n u 'vector<TCluster,allocator<TCluster> >' - 11 '(vector<TCluster,allocator<TCluster> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >",9140,G__TEventDict_815_0_17, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >",9140,G__TEventDict_815_0_18, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::iterator' 'vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::const_iterator' 10 - first u 'vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::iterator' 'vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TEventDict_815_0_19, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__TEventDict_815_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__TEventDict_815_0_21, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__TEventDict_815_0_22, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__TEventDict_815_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TCluster,allocator<TCluster> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__TEventDict_815_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_815_0_25, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::iterator' - 0 - position u 'vector<TCluster,allocator<TCluster> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_815_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::iterator' - 0 - position u 'vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::iterator' 'vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::const_iterator' 10 - first "
"u 'vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::iterator' 'vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_815_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::iterator' - 0 - position k - 'vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::size_type' 0 - n "
"u 'vector<TCluster,allocator<TCluster> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__TEventDict_815_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_815_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_815_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::iterator' - 0 - first u 'vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__TEventDict_815_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >", 9266, G__TEventDict_815_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlETClustermUcOallocatorlETClustermUgRsPgR(void) {
   /* vector<TCluster*,allocator<TCluster*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR));
   G__memfunc_setup("at",213,G__TEventDict_819_0_1, 85, G__get_linked_tagnum(&G__TEventDictLN_TCluster), G__defined_typename("vector<TCluster*,allocator<TCluster*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TCluster*,allocator<TCluster*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__TEventDict_819_0_2, 85, G__get_linked_tagnum(&G__TEventDictLN_TCluster), G__defined_typename("vector<TCluster*,allocator<TCluster*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TCluster*,allocator<TCluster*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__TEventDict_819_0_3, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__TEventDict_819_0_4, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__TEventDict_819_0_5, 117, G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcLcLiteratorgR), G__defined_typename("vector<TCluster*,allocator<TCluster*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__TEventDict_819_0_6, 117, G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcLcLiteratorgR), G__defined_typename("vector<TCluster*,allocator<TCluster*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__TEventDict_819_0_7, 107, -1, G__defined_typename("vector<TCluster*,allocator<TCluster*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__TEventDict_819_0_8, 107, -1, G__defined_typename("vector<TCluster*,allocator<TCluster*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TEventDict_819_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TCluster*,allocator<TCluster*> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TEventDict_819_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<TCluster*,allocator<TCluster*> >::size_type' 0 - sz U 'TCluster' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__TEventDict_819_0_11, 107, -1, G__defined_typename("vector<TCluster*,allocator<TCluster*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__TEventDict_819_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TEventDict_819_0_13, 85, G__get_linked_tagnum(&G__TEventDictLN_TCluster), G__defined_typename("vector<TCluster*,allocator<TCluster*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TCluster*,allocator<TCluster*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TEventDict_819_0_14, 85, G__get_linked_tagnum(&G__TEventDictLN_TCluster), G__defined_typename("vector<TCluster*,allocator<TCluster*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TCluster*,allocator<TCluster*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TCluster*,allocator<TCluster*> >",3668,G__TEventDict_819_0_15, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TCluster*,allocator<TCluster*> >",3668,G__TEventDict_819_0_16, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<TCluster*,allocator<TCluster*> >::size_type' 0 - n U 'TCluster' - 41 '(TCluster*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TCluster*,allocator<TCluster*> >",3668,G__TEventDict_819_0_17, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<TCluster*,allocator<TCluster*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TCluster*,allocator<TCluster*> >",3668,G__TEventDict_819_0_18, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<TCluster*,allocator<TCluster*> >::iterator' 'vector<TCluster*,allocator<TCluster*> >::const_iterator' 10 - first u 'vector<TCluster*,allocator<TCluster*> >::iterator' 'vector<TCluster*,allocator<TCluster*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TEventDict_819_0_19, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<TCluster*,allocator<TCluster*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__TEventDict_819_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TCluster*,allocator<TCluster*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__TEventDict_819_0_21, 85, G__get_linked_tagnum(&G__TEventDictLN_TCluster), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__TEventDict_819_0_22, 85, G__get_linked_tagnum(&G__TEventDictLN_TCluster), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__TEventDict_819_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCluster' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__TEventDict_819_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TCluster*,allocator<TCluster*> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_819_0_25, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<TCluster*,allocator<TCluster*> >::iterator' - 0 - position U 'TCluster' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_819_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TCluster*,allocator<TCluster*> >::iterator' - 0 - position u 'vector<TCluster*,allocator<TCluster*> >::iterator' 'vector<TCluster*,allocator<TCluster*> >::const_iterator' 10 - first "
"u 'vector<TCluster*,allocator<TCluster*> >::iterator' 'vector<TCluster*,allocator<TCluster*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_819_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TCluster*,allocator<TCluster*> >::iterator' - 0 - position k - 'vector<TCluster*,allocator<TCluster*> >::size_type' 0 - n "
"U 'TCluster' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__TEventDict_819_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_819_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TCluster*,allocator<TCluster*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_819_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<TCluster*,allocator<TCluster*> >::iterator' - 0 - first u 'vector<TCluster*,allocator<TCluster*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__TEventDict_819_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<TCluster*,allocator<TCluster*> >", 3794, G__TEventDict_819_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR(void) {
   /* vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__TEventDict_823_0_1, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR), G__defined_typename("vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__TEventDict_823_0_2, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR), G__defined_typename("vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__TEventDict_823_0_3, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__TEventDict_823_0_4, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__TEventDict_823_0_5, 117, G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__TEventDict_823_0_6, 117, G__get_linked_tagnum(&G__TEventDictLN_reverse_iteratorlEvectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__TEventDict_823_0_7, 107, -1, G__defined_typename("vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__TEventDict_823_0_8, 107, -1, G__defined_typename("vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TEventDict_823_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TEventDict_823_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::size_type' 0 - sz u 'vector<TCluster*,allocator<TCluster*> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__TEventDict_823_0_11, 107, -1, G__defined_typename("vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__TEventDict_823_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TEventDict_823_0_13, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR), G__defined_typename("vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TEventDict_823_0_14, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR), G__defined_typename("vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >",9308,G__TEventDict_823_0_15, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >",9308,G__TEventDict_823_0_16, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::size_type' 0 - n u 'vector<TCluster*,allocator<TCluster*> >' - 11 '(vector<TCluster*,allocator<TCluster*> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >",9308,G__TEventDict_823_0_17, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >",9308,G__TEventDict_823_0_18, 105, G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::iterator' 'vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::const_iterator' 10 - first u 'vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::iterator' 'vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TEventDict_823_0_19, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__TEventDict_823_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__TEventDict_823_0_21, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__TEventDict_823_0_22, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__TEventDict_823_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TCluster*,allocator<TCluster*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__TEventDict_823_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_823_0_25, 117, G__get_linked_tagnum(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::iterator' - 0 - position u 'vector<TCluster*,allocator<TCluster*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_823_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::iterator' - 0 - position u 'vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::iterator' 'vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::const_iterator' 10 - first "
"u 'vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::iterator' 'vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TEventDict_823_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::iterator' - 0 - position k - 'vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::size_type' 0 - n "
"u 'vector<TCluster*,allocator<TCluster*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__TEventDict_823_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_823_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TEventDict_823_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::iterator' - 0 - first u 'vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__TEventDict_823_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >", 9434, G__TEventDict_823_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTEventDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTEventDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {
}

static void G__cpp_setup_func35() {
}

static void G__cpp_setup_func36() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTEventDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
  G__cpp_setup_func35();
  G__cpp_setup_func36();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TEventDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator = { "vector<float,allocator<float> >::iterator" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<float,allocator<float> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator = { "vector<double,allocator<double> >::iterator" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<double,allocator<double> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_allocatorlEboolgR = { "allocator<bool>" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlEboolcOallocatorlEboolgRsPgRcLcLiterator = { "vector<bool,allocator<bool> >::iterator" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlEboolcOallocatorlEboolgRsPgRcLcLreverse_iterator = { "vector<bool,allocator<bool> >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_dequelEintcOallocatorlEintgRsPgR = { "deque<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_dequelEfloatcOallocatorlEfloatgRsPgR = { "deque<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TSystem = { "TSystem" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__TEventDictLN_TDatime = { "TDatime" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TPlaneProperties = { "TPlaneProperties" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TPlanePropertiescLcLenumCoordinate = { "TPlaneProperties::enumCoordinate" , 101 , -1 };
G__linked_taginfo G__TEventDictLN_TPlanePropertiescLcLenumDetectorType = { "TPlaneProperties::enumDetectorType" , 101 , -1 };
G__linked_taginfo G__TEventDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TCluster = { "TCluster" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TClustercLcLcalculationMode_t = { "TCluster::calculationMode_t" , 101 , -1 };
G__linked_taginfo G__TEventDictLN_TClustercLcLdirection_t = { "TCluster::direction_t" , 101 , -1 };
G__linked_taginfo G__TEventDictLN_dequelEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "deque<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR = { "deque<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgRcLcLiterator = { "deque<bool,allocator<bool> >::iterator" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgRcLcLreverse_iterator = { "deque<bool,allocator<bool> >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TPlane = { "TPlane" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR = { "vector<TCluster,allocator<TCluster> >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgRcLcLiterator = { "vector<TCluster,allocator<TCluster> >::iterator" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_reverse_iteratorlEvectorlETClustercOallocatorlETClustergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TCluster,allocator<TCluster> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TDetectorAlignment = { "TDetectorAlignment" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TEvent = { "TEvent" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR = { "vector<TPlane,allocator<TPlane> >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgRcLcLiterator = { "vector<TPlane,allocator<TPlane> >::iterator" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_reverse_iteratorlEvectorlETPlanecOallocatorlETPlanegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TPlane,allocator<TPlane> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR = { "set<int,less<int>,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TCutG = { "TCutG" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TMacro = { "TMacro" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TProfile2D = { "TProfile2D" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_ChannelScreen = { "ChannelScreen" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_pairlEintcOintgR = { "pair<int,int>" , 115 , -1 };
G__linked_taginfo G__TEventDictLN_TChannelMapping = { "TChannelMapping" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_lesslEunsignedsPintgR = { "less<unsigned int>" , 115 , -1 };
G__linked_taginfo G__TEventDictLN_allocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgR = { "allocator<pair<const unsigned int,unsigned int> >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR = { "map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_pairlEunsignedsPintcOunsignedsPintgR = { "pair<unsigned int,unsigned int>" , 115 , -1 };
G__linked_taginfo G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiterator = { "map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLreverse_iterator = { "map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_pairlEmaplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >::iterator,bool>" , 115 , -1 };
G__linked_taginfo G__TEventDictLN_TDiamondPattern = { "TDiamondPattern" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TFiducialCut = { "TFiducialCut" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TPaveText = { "TPaveText" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TFidCutRegions = { "TFidCutRegions" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_pairlEfloatcOfloatgR = { "pair<float,float>" , 115 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR = { "vector<pair<float,float>,allocator<pair<float,float> > >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgRcLcLiterator = { "vector<pair<float,float>,allocator<pair<float,float> > >::iterator" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_reverse_iteratorlEvectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<float,float>,allocator<pair<float,float> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR = { "vector<TFiducialCut*,allocator<TFiducialCut*> >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgRcLcLiterator = { "vector<TFiducialCut*,allocator<TFiducialCut*> >::iterator" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_reverse_iteratorlEvectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TFiducialCut*,allocator<TFiducialCut*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TRunInfo = { "TRunInfo" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TSettings = { "TSettings" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TSettingscLcLalignmentMode = { "TSettings::alignmentMode" , 101 , -1 };
G__linked_taginfo G__TEventDictLN_TSettingscLcLenumRunDescription = { "TSettings::enumRunDescription" , 101 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR = { "vector<TH1*,allocator<TH1*> >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_reverse_iteratorlEvectorlETH1mUcOallocatorlETH1mUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TH1*,allocator<TH1*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_TSettingscLcLenumAlignmentTrainingMethod = { "TSettings::enumAlignmentTrainingMethod" , 101 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR = { "vector<pair<int,int>,allocator<pair<int,int> > >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<int,int>,allocator<pair<int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_pairlEstringcOstringgR = { "pair<string,string>" , 115 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR = { "vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_pairlEcharcOintgR = { "pair<char,int>" , 115 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlETPlanePropertiescLcLenumCoordinatecOallocatorlETPlanePropertiescLcLenumCoordinategRsPgR = { "vector<TPlaneProperties::enumCoordinate,allocator<TPlaneProperties::enumCoordinate> >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_reverse_iteratorlEvectorlETPlanePropertiescLcLenumCoordinatecOallocatorlETPlanePropertiescLcLenumCoordinategRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TPlaneProperties::enumCoordinate,allocator<TPlaneProperties::enumCoordinate> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_lesslETStringgR = { "less<TString>" , 115 , -1 };
G__linked_taginfo G__TEventDictLN_allocatorlEpairlEconstsPTStringcOTStringgRsPgR = { "allocator<pair<const TString,TString> >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR = { "map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_pairlETStringcOTStringgR = { "pair<TString,TString>" , 115 , -1 };
G__linked_taginfo G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcLcLiterator = { "map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcLcLreverse_iterator = { "map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_pairlEmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >::iterator,bool>" , 115 , -1 };
G__linked_taginfo G__TEventDictLN_allocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgR = { "allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR = { "map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_pairlETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgR = { "pair<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > >" , 115 , -1 };
G__linked_taginfo G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgRcLcLiterator = { "map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgRcLcLreverse_iterator = { "map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_pairlEmaplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >::iterator,bool>" , 115 , -1 };
G__linked_taginfo G__TEventDictLN_TResults = { "TResults" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_allocatorlEpairlEconstsPTStringcOintgRsPgR = { "allocator<pair<const TString,int> >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR = { "map<TString,int,less<TString>,allocator<pair<const TString,int> > >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_pairlETStringcOintgR = { "pair<TString,int>" , 115 , -1 };
G__linked_taginfo G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgRcLcLiterator = { "map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgRcLcLreverse_iterator = { "map<TString,int,less<TString>,allocator<pair<const TString,int> > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_pairlEmaplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<TString,int,less<TString>,allocator<pair<const TString,int> > >::iterator,bool>" , 115 , -1 };
G__linked_taginfo G__TEventDictLN_allocatorlEpairlEconstsPTStringcOfloatgRsPgR = { "allocator<pair<const TString,float> >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR = { "map<TString,float,less<TString>,allocator<pair<const TString,float> > >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_pairlETStringcOfloatgR = { "pair<TString,float>" , 115 , -1 };
G__linked_taginfo G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgRcLcLiterator = { "map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgRcLcLreverse_iterator = { "map<TString,float,less<TString>,allocator<pair<const TString,float> > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_pairlEmaplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<TString,float,less<TString>,allocator<pair<const TString,float> > >::iterator,bool>" , 115 , -1 };
G__linked_taginfo G__TEventDictLN_pairlEunsignedsPshortcOfloatgR = { "pair<unsigned short,float>" , 115 , -1 };
G__linked_taginfo G__TEventDictLN_pairlEintcOfloatgR = { "pair<int,float>" , 115 , -1 };
G__linked_taginfo G__TEventDictLN_allocatorlEpairlEintcOfloatgRsPgR = { "allocator<pair<int,float> >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR = { "deque<pair<int,float>,allocator<pair<int,float> > >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgRcLcLiterator = { "deque<pair<int,float>,allocator<pair<int,float> > >::iterator" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgRcLcLreverse_iterator = { "deque<pair<int,float>,allocator<pair<int,float> > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_allocatorlEpairlEunsignedsPshortcOfloatgRsPgR = { "allocator<pair<unsigned short,float> >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR = { "deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgRcLcLiterator = { "deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::iterator" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgRcLcLreverse_iterator = { "deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR = { "vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgRcLcLiterator = { "vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_reverse_iteratorlEvectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR = { "vector<TCluster*,allocator<TCluster*> >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgRcLcLiterator = { "vector<TCluster*,allocator<TCluster*> >::iterator" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_reverse_iteratorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TCluster*,allocator<TCluster*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR = { "vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__TEventDictLN_reverse_iteratorlEvectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTEventDict() {
  G__TEventDictLN_TClass.tagnum = -1 ;
  G__TEventDictLN_TBuffer.tagnum = -1 ;
  G__TEventDictLN_TMemberInspector.tagnum = -1 ;
  G__TEventDictLN_TObject.tagnum = -1 ;
  G__TEventDictLN_TNamed.tagnum = -1 ;
  G__TEventDictLN_TString.tagnum = -1 ;
  G__TEventDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator.tagnum = -1 ;
  G__TEventDictLN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator.tagnum = -1 ;
  G__TEventDictLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TEventDictLN_allocatorlEboolgR.tagnum = -1 ;
  G__TEventDictLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__TEventDictLN_vectorlEboolcOallocatorlEboolgRsPgRcLcLiterator.tagnum = -1 ;
  G__TEventDictLN_vectorlEboolcOallocatorlEboolgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__TEventDictLN_string.tagnum = -1 ;
  G__TEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TEventDictLN_dequelEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__TEventDictLN_dequelEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__TEventDictLN_TSystem.tagnum = -1 ;
  G__TEventDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__TEventDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__TEventDictLN_TDatime.tagnum = -1 ;
  G__TEventDictLN_TFile.tagnum = -1 ;
  G__TEventDictLN_TCanvas.tagnum = -1 ;
  G__TEventDictLN_TPlaneProperties.tagnum = -1 ;
  G__TEventDictLN_TPlanePropertiescLcLenumCoordinate.tagnum = -1 ;
  G__TEventDictLN_TPlanePropertiescLcLenumDetectorType.tagnum = -1 ;
  G__TEventDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__TEventDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__TEventDictLN_TH1D.tagnum = -1 ;
  G__TEventDictLN_TH1.tagnum = -1 ;
  G__TEventDictLN_TH1F.tagnum = -1 ;
  G__TEventDictLN_TCluster.tagnum = -1 ;
  G__TEventDictLN_TClustercLcLcalculationMode_t.tagnum = -1 ;
  G__TEventDictLN_TClustercLcLdirection_t.tagnum = -1 ;
  G__TEventDictLN_dequelEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgRcLcLiterator.tagnum = -1 ;
  G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__TEventDictLN_TPlane.tagnum = -1 ;
  G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR.tagnum = -1 ;
  G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgRcLcLiterator.tagnum = -1 ;
  G__TEventDictLN_reverse_iteratorlEvectorlETClustercOallocatorlETClustergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TEventDictLN_TDetectorAlignment.tagnum = -1 ;
  G__TEventDictLN_TEvent.tagnum = -1 ;
  G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR.tagnum = -1 ;
  G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgRcLcLiterator.tagnum = -1 ;
  G__TEventDictLN_reverse_iteratorlEvectorlETPlanecOallocatorlETPlanegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TEventDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__TEventDictLN_TCutG.tagnum = -1 ;
  G__TEventDictLN_TMacro.tagnum = -1 ;
  G__TEventDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__TEventDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__TEventDictLN_TH2F.tagnum = -1 ;
  G__TEventDictLN_TProfile2D.tagnum = -1 ;
  G__TEventDictLN_ChannelScreen.tagnum = -1 ;
  G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__TEventDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TEventDictLN_pairlEintcOintgR.tagnum = -1 ;
  G__TEventDictLN_TChannelMapping.tagnum = -1 ;
  G__TEventDictLN_lesslEunsignedsPintgR.tagnum = -1 ;
  G__TEventDictLN_allocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgR.tagnum = -1 ;
  G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR.tagnum = -1 ;
  G__TEventDictLN_pairlEunsignedsPintcOunsignedsPintgR.tagnum = -1 ;
  G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__TEventDictLN_pairlEmaplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
  G__TEventDictLN_TDiamondPattern.tagnum = -1 ;
  G__TEventDictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__TEventDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__TEventDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TEventDictLN_TFiducialCut.tagnum = -1 ;
  G__TEventDictLN_TPaveText.tagnum = -1 ;
  G__TEventDictLN_TFidCutRegions.tagnum = -1 ;
  G__TEventDictLN_pairlEfloatcOfloatgR.tagnum = -1 ;
  G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR.tagnum = -1 ;
  G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__TEventDictLN_reverse_iteratorlEvectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR.tagnum = -1 ;
  G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgRcLcLiterator.tagnum = -1 ;
  G__TEventDictLN_reverse_iteratorlEvectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TEventDictLN_TRunInfo.tagnum = -1 ;
  G__TEventDictLN_TSettings.tagnum = -1 ;
  G__TEventDictLN_TSettingscLcLalignmentMode.tagnum = -1 ;
  G__TEventDictLN_TSettingscLcLenumRunDescription.tagnum = -1 ;
  G__TEventDictLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR.tagnum = -1 ;
  G__TEventDictLN_reverse_iteratorlEvectorlETH1mUcOallocatorlETH1mUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TEventDictLN_TSettingscLcLenumAlignmentTrainingMethod.tagnum = -1 ;
  G__TEventDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR.tagnum = -1 ;
  G__TEventDictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TEventDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__TEventDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TEventDictLN_pairlEstringcOstringgR.tagnum = -1 ;
  G__TEventDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TEventDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TEventDictLN_pairlEcharcOintgR.tagnum = -1 ;
  G__TEventDictLN_vectorlETPlanePropertiescLcLenumCoordinatecOallocatorlETPlanePropertiescLcLenumCoordinategRsPgR.tagnum = -1 ;
  G__TEventDictLN_reverse_iteratorlEvectorlETPlanePropertiescLcLenumCoordinatecOallocatorlETPlanePropertiescLcLenumCoordinategRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TEventDictLN_lesslETStringgR.tagnum = -1 ;
  G__TEventDictLN_allocatorlEpairlEconstsPTStringcOTStringgRsPgR.tagnum = -1 ;
  G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR.tagnum = -1 ;
  G__TEventDictLN_pairlETStringcOTStringgR.tagnum = -1 ;
  G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__TEventDictLN_pairlEmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
  G__TEventDictLN_allocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TEventDictLN_pairlETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__TEventDictLN_pairlEmaplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
  G__TEventDictLN_TResults.tagnum = -1 ;
  G__TEventDictLN_allocatorlEpairlEconstsPTStringcOintgRsPgR.tagnum = -1 ;
  G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR.tagnum = -1 ;
  G__TEventDictLN_pairlETStringcOintgR.tagnum = -1 ;
  G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__TEventDictLN_pairlEmaplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
  G__TEventDictLN_allocatorlEpairlEconstsPTStringcOfloatgRsPgR.tagnum = -1 ;
  G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR.tagnum = -1 ;
  G__TEventDictLN_pairlETStringcOfloatgR.tagnum = -1 ;
  G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__TEventDictLN_pairlEmaplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
  G__TEventDictLN_pairlEunsignedsPshortcOfloatgR.tagnum = -1 ;
  G__TEventDictLN_pairlEintcOfloatgR.tagnum = -1 ;
  G__TEventDictLN_allocatorlEpairlEintcOfloatgRsPgR.tagnum = -1 ;
  G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR.tagnum = -1 ;
  G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__TEventDictLN_allocatorlEpairlEunsignedsPshortcOfloatgRsPgR.tagnum = -1 ;
  G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR.tagnum = -1 ;
  G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR.tagnum = -1 ;
  G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__TEventDictLN_reverse_iteratorlEvectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR.tagnum = -1 ;
  G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgRcLcLiterator.tagnum = -1 ;
  G__TEventDictLN_reverse_iteratorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__TEventDictLN_reverse_iteratorlEvectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTEventDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TString);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,-1,298752,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1,298752,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_allocatorlEboolgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlEboolcOallocatorlEboolgRsPgR),0,-1,265216,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlEboolcOallocatorlEboolgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlEboolcOallocatorlEboolgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_string);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_dequelEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_dequelEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TSystem);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TDatime);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TCanvas);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_TPlaneProperties),sizeof(TPlaneProperties),-1,292096,(char*)NULL,G__setup_memvarTPlaneProperties,G__setup_memfuncTPlaneProperties);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TPlanePropertiescLcLenumCoordinate);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TPlanePropertiescLcLenumDetectorType);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TH1D);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TH1);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TH1F);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_TCluster),sizeof(TCluster),-1,327424,(char*)NULL,G__setup_memvarTCluster,G__setup_memfuncTCluster);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TClustercLcLcalculationMode_t);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TClustercLcLdirection_t);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_dequelEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgR),sizeof(deque<bool,allocator<bool> >),-1,298752,(char*)NULL,G__setup_memvardequelEboolcOallocatorlEboolgRsPgR,G__setup_memfuncdequelEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_dequelEboolcOallocatorlEboolgRsPgRcLcLreverse_iterator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_TPlane),sizeof(TPlane),-1,327424,(char*)NULL,G__setup_memvarTPlane,G__setup_memfuncTPlane);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgR),sizeof(vector<TCluster,allocator<TCluster> >),-1,298752,(char*)NULL,G__setup_memvarvectorlETClustercOallocatorlETClustergRsPgR,G__setup_memfuncvectorlETClustercOallocatorlETClustergRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlETClustercOallocatorlETClustergRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_reverse_iteratorlEvectorlETClustercOallocatorlETClustergRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_TDetectorAlignment),sizeof(TDetectorAlignment),-1,326912,(char*)NULL,G__setup_memvarTDetectorAlignment,G__setup_memfuncTDetectorAlignment);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_TEvent),sizeof(TEvent),-1,294656,(char*)NULL,G__setup_memvarTEvent,G__setup_memfuncTEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgR),sizeof(vector<TPlane,allocator<TPlane> >),-1,298752,(char*)NULL,G__setup_memvarvectorlETPlanecOallocatorlETPlanegRsPgR,G__setup_memfuncvectorlETPlanecOallocatorlETPlanegRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlETPlanecOallocatorlETPlanegRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_reverse_iteratorlEvectorlETPlanecOallocatorlETPlanegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TCutG);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TMacro);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TH2F);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TProfile2D);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_ChannelScreen),sizeof(ChannelScreen),-1,292096,(char*)NULL,G__setup_memvarChannelScreen,G__setup_memfuncChannelScreen);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_pairlEintcOintgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_TChannelMapping),sizeof(TChannelMapping),-1,325376,(char*)NULL,G__setup_memvarTChannelMapping,G__setup_memfuncTChannelMapping);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_lesslEunsignedsPintgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_allocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR),sizeof(map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >),-1,298752,(char*)NULL,G__setup_memvarmaplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR,G__setup_memfuncmaplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_pairlEunsignedsPintcOunsignedsPintgR),sizeof(pair<unsigned int,unsigned int>),-1,297216,(char*)NULL,G__setup_memvarpairlEunsignedsPintcOunsignedsPintgR,G__setup_memfuncpairlEunsignedsPintcOunsignedsPintgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_pairlEmaplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiteratorcOboolgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_TDiamondPattern),sizeof(TDiamondPattern),-1,292096,(char*)NULL,G__setup_memvarTDiamondPattern,G__setup_memfuncTDiamondPattern);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_TFiducialCut),sizeof(TFiducialCut),-1,323840,(char*)NULL,G__setup_memvarTFiducialCut,G__setup_memfuncTFiducialCut);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TPaveText);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_TFidCutRegions),sizeof(TFidCutRegions),-1,324864,(char*)NULL,G__setup_memvarTFidCutRegions,G__setup_memfuncTFidCutRegions);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_pairlEfloatcOfloatgR),sizeof(pair<float,float>),-1,297216,(char*)NULL,G__setup_memvarpairlEfloatcOfloatgR,G__setup_memfuncpairlEfloatcOfloatgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR),sizeof(vector<pair<float,float>,allocator<pair<float,float> > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR,G__setup_memfuncvectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_reverse_iteratorlEvectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR),sizeof(vector<TFiducialCut*,allocator<TFiducialCut*> >),-1,298752,(char*)NULL,G__setup_memvarvectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR,G__setup_memfuncvectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_reverse_iteratorlEvectorlETFiducialCutmUcOallocatorlETFiducialCutmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TRunInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_TSettings),sizeof(TSettings),-1,324864,(char*)NULL,G__setup_memvarTSettings,G__setup_memfuncTSettings);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TSettingscLcLalignmentMode);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TSettingscLcLenumRunDescription);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_reverse_iteratorlEvectorlETH1mUcOallocatorlETH1mUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_TSettingscLcLenumAlignmentTrainingMethod);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_pairlEstringcOstringgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_pairlEcharcOintgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlETPlanePropertiescLcLenumCoordinatecOallocatorlETPlanePropertiescLcLenumCoordinategRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_reverse_iteratorlEvectorlETPlanePropertiescLcLenumCoordinatecOallocatorlETPlanePropertiescLcLenumCoordinategRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_lesslETStringgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_allocatorlEpairlEconstsPTStringcOTStringgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),sizeof(map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >),-1,298752,(char*)NULL,G__setup_memvarmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR,G__setup_memfuncmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_pairlETStringcOTStringgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_pairlEmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcLcLiteratorcOboolgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_allocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR),sizeof(map<TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >,less<TString>,allocator<pair<const TString,map<TString,TString,less<TString>,allocator<pair<const TString,TString> > > > > >),-1,298752,(char*)NULL,G__setup_memvarmaplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR,G__setup_memfuncmaplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_pairlETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_maplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_pairlEmaplETStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_TResults),sizeof(TResults),-1,325376,(char*)NULL,G__setup_memvarTResults,G__setup_memfuncTResults);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_allocatorlEpairlEconstsPTStringcOintgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),sizeof(map<TString,int,less<TString>,allocator<pair<const TString,int> > >),-1,298752,(char*)NULL,G__setup_memvarmaplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR,G__setup_memfuncmaplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_pairlETStringcOintgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_pairlEmaplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgRcLcLiteratorcOboolgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_allocatorlEpairlEconstsPTStringcOfloatgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR),sizeof(map<TString,float,less<TString>,allocator<pair<const TString,float> > >),-1,298752,(char*)NULL,G__setup_memvarmaplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR,G__setup_memfuncmaplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_pairlETStringcOfloatgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_pairlEmaplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgRcLcLiteratorcOboolgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_pairlEunsignedsPshortcOfloatgR),sizeof(pair<unsigned short,float>),-1,297216,(char*)NULL,G__setup_memvarpairlEunsignedsPshortcOfloatgR,G__setup_memfuncpairlEunsignedsPshortcOfloatgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_pairlEintcOfloatgR),sizeof(pair<int,float>),-1,297216,(char*)NULL,G__setup_memvarpairlEintcOfloatgR,G__setup_memfuncpairlEintcOfloatgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_allocatorlEpairlEintcOfloatgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR),sizeof(deque<pair<int,float>,allocator<pair<int,float> > >),-1,298752,(char*)NULL,G__setup_memvardequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR,G__setup_memfuncdequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_dequelEpairlEintcOfloatgRcOallocatorlEpairlEintcOfloatgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_allocatorlEpairlEunsignedsPshortcOfloatgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR),sizeof(deque<pair<unsigned short,float>,allocator<pair<unsigned short,float> > >),-1,298752,(char*)NULL,G__setup_memvardequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR,G__setup_memfuncdequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_dequelEpairlEunsignedsPshortcOfloatgRcOallocatorlEpairlEunsignedsPshortcOfloatgRsPgRsPgRcLcLreverse_iterator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR),sizeof(vector<vector<TCluster,allocator<TCluster> >,allocator<vector<TCluster,allocator<TCluster> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_reverse_iteratorlEvectorlEvectorlETClustercOallocatorlETClustergRsPgRcOallocatorlEvectorlETClustercOallocatorlETClustergRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgR),sizeof(vector<TCluster*,allocator<TCluster*> >),-1,298752,(char*)NULL,G__setup_memvarvectorlETClustermUcOallocatorlETClustermUgRsPgR,G__setup_memfuncvectorlETClustermUcOallocatorlETClustermUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlETClustermUcOallocatorlETClustermUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_reverse_iteratorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR),sizeof(vector<vector<TCluster*,allocator<TCluster*> >,allocator<vector<TCluster*,allocator<TCluster*> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_vectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TEventDictLN_reverse_iteratorlEvectorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRcOallocatorlEvectorlETClustermUcOallocatorlETClustermUgRsPgRsPgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupTEventDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTEventDict()");
  G__set_cpp_environmentTEventDict();
  G__cpp_setup_tagtableTEventDict();

  G__cpp_setup_inheritanceTEventDict();

  G__cpp_setup_typetableTEventDict();

  G__cpp_setup_memvarTEventDict();

  G__cpp_setup_memfuncTEventDict();
  G__cpp_setup_globalTEventDict();
  G__cpp_setup_funcTEventDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTEventDict();
  return;
}
class G__cpp_setup_initTEventDict {
  public:
    G__cpp_setup_initTEventDict() { G__add_setup_func("TEventDict",(G__incsetup)(&G__cpp_setupTEventDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTEventDict() { G__remove_setup_func("TEventDict"); }
};
G__cpp_setup_initTEventDict G__cpp_setup_initializerTEventDict;

